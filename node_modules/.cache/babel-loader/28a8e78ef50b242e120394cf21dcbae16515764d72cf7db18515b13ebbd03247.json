{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\src\\\\pages\\\\Games.js\",\n  _s = $RefreshSig$();\n// Games.js\nimport React, { useEffect, useState } from 'react';\nimport { newGame, duplicateGame, deleteGame, listDriveGames } from '../apis/driveAPI';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport AddIcon from '@mui/icons-material/Add';\nimport GameCard from '../components/GameCard';\nimport { useAppContext } from '../AppContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Games() {\n  _s();\n  const {\n    appFolderID,\n    setGameID,\n    gameList,\n    setGameList\n  } = useAppContext();\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchGames();\n  }, [appFolderID, setGameList]);\n  async function fetchGames() {\n    setLoading(true);\n    try {\n      const games = await listDriveGames(appFolderID);\n      setGameList(games);\n    } catch (error) {\n      console.error('Failed to load games:', error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  async function performGameAction(action, gameId) {\n    setLoading(true);\n    try {\n      const result = await action(gameId ? gameId : appFolderID);\n      if (action === newGame) {\n        setGameList(prev => [...prev, result]);\n        console.log('New game created successfully');\n      } else {\n        console.log('Operation successful');\n      }\n      fetchGames(); // Refresh the games list to reflect the new changes\n    } catch (error) {\n      console.error('Error performing game operation:', error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  function handleNavigate(gameId, path) {\n    setGameID(gameId);\n    navigate(`/${path}`);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => performGameAction(newGame),\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 93\n        }, this),\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: gameList.map(game => /*#__PURE__*/_jsxDEV(GameCard, {\n          game: game,\n          onEdit: () => handleNavigate(game.id, 'edit'),\n          onPlay: () => handleNavigate(game.id, 'play'),\n          onDuplicate: () => performGameAction(duplicateGame, game.id),\n          onDelete: () => performGameAction(deleteGame, game.id)\n        }, game.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Games, \"RSvIGbcQ/pzcWYCkKYd8W0mQduw=\", false, function () {\n  return [useAppContext, useNavigate];\n});\n_c = Games;\nexport default Games;\nvar _c;\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"names":["React","useEffect","useState","newGame","duplicateGame","deleteGame","listDriveGames","Button","CircularProgress","Box","AddIcon","GameCard","useAppContext","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Games","_s","appFolderID","setGameID","gameList","setGameList","loading","setLoading","navigate","fetchGames","games","error","console","performGameAction","action","gameId","result","prev","log","handleNavigate","path","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","startIcon","map","game","onEdit","id","onPlay","onDuplicate","onDelete","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/src/pages/Games.js"],"sourcesContent":["// Games.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { newGame, duplicateGame, deleteGame, listDriveGames } from '../apis/driveAPI';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport GameCard from '../components/GameCard';\r\nimport { useAppContext } from '../AppContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Games() {\r\n  const { appFolderID, setGameID, gameList, setGameList } = useAppContext();\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchGames();\r\n  }, [appFolderID, setGameList]);\r\n\r\n  async function fetchGames() {\r\n    setLoading(true);\r\n    try {\r\n      const games = await listDriveGames(appFolderID);\r\n      setGameList(games);\r\n    } catch (error) {\r\n      console.error('Failed to load games:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function performGameAction(action, gameId) {\r\n    setLoading(true);\r\n    try {\r\n      const result = await action(gameId ? gameId : appFolderID);\r\n      if (action === newGame) {\r\n        setGameList(prev => [...prev, result]);\r\n        console.log('New game created successfully');\r\n      } else {\r\n        console.log('Operation successful');\r\n      }\r\n      fetchGames(); // Refresh the games list to reflect the new changes\r\n    } catch (error) {\r\n      console.error('Error performing game operation:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function handleNavigate(gameId, path) {\r\n    setGameID(gameId);\r\n    navigate(`/${path}`);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <>\r\n          <Button onClick={() => performGameAction(newGame)} variant=\"contained\" startIcon={<AddIcon />}>\r\n            New Game\r\n          </Button>\r\n          <div>\r\n            {gameList.map(game => (\r\n              <GameCard\r\n                key={game.id}\r\n                game={game}\r\n                onEdit={() => handleNavigate(game.id, 'edit')}\r\n                onPlay={() => handleNavigate(game.id, 'play')}\r\n                onDuplicate={() => performGameAction(duplicateGame, game.id)}\r\n                onDelete={() => performGameAction(deleteGame, game.id)}\r\n              />\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Games;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}