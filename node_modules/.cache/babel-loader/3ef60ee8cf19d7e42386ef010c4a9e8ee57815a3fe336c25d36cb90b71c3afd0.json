{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\app\\\\src\\\\pages\\\\Games.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { setDriveAccessToken, checkDriveFolder, listDriveGames, newGame } from '../driveAPI';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport CardMedia from '@mui/material/CardMedia';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PlayCircleFilledIcon from '@mui/icons-material/PlayCircleFilled';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Games = ({\n  token\n}) => {\n  _s();\n  const [folderID, setFolderID] = useState([]);\n  const [games, setGames] = useState([]);\n  useEffect(() => {\n    const initDrive = async () => {\n      try {\n        await setDriveAccessToken(token.access_token);\n        const id = await checkDriveFolder(\"Loop Games\");\n        setFolderID(id);\n        const gamesList = await listDriveGames(id);\n        setGames(gamesList);\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n      }\n    };\n    initDrive();\n  }, [token.access_token]);\n  const handleNewGameClick = async () => {\n    try {\n      await newGame();\n      const updatedGamesList = await listDriveGames(folderID);\n      setGames(updatedGamesList);\n    } catch (error) {\n      console.error('Error creating new game:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingLeft: '64px',\n      paddingTop: '64px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '48px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 22\n        }, this),\n        onClick: handleNewGameClick,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '16px'\n      },\n      children: games.map(game => /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          maxWidth: '240px',\n          minWidth: '240px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          alt: game.name,\n          height: \"140\",\n          image: game.imageUrl,\n          style: {\n            objectFit: 'cover',\n            borderTopLeftRadius: '8px',\n            borderTopRightRadius: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body3\",\n            color: \"textSecondary\",\n            children: game.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(PlayCircleFilledIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(FileCopyIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, game.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Games, \"+ZYy+014AXZfDh1P+X/GEjb/taE=\");\n_c = Games;\nexport default Games;\nvar _c;\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"names":["React","useState","useEffect","setDriveAccessToken","checkDriveFolder","listDriveGames","newGame","Card","CardContent","CardActions","CardMedia","IconButton","EditIcon","PlayCircleFilledIcon","FileCopyIcon","DeleteIcon","AddIcon","Button","Typography","jsxDEV","_jsxDEV","Games","token","_s","folderID","setFolderID","games","setGames","initDrive","access_token","id","gamesList","error","console","message","handleNewGameClick","updatedGamesList","style","paddingLeft","paddingTop","children","display","alignItems","marginBottom","variant","color","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","flexWrap","gap","map","game","maxWidth","minWidth","component","alt","name","height","image","imageUrl","objectFit","borderTopLeftRadius","borderTopRightRadius","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/app/src/pages/Games.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { setDriveAccessToken, checkDriveFolder, listDriveGames, newGame } from '../driveAPI';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport PlayCircleFilledIcon from '@mui/icons-material/PlayCircleFilled';\r\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst Games = ({ token }) => {\r\n  const [folderID, setFolderID] = useState([]);\r\n  const [games, setGames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const initDrive = async () => {\r\n      try {\r\n        await setDriveAccessToken(token.access_token);\r\n        const id = await checkDriveFolder(\"Loop Games\");\r\n        setFolderID(id);\r\n        const gamesList = await listDriveGames(id);\r\n        setGames(gamesList);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error.message);\r\n      }\r\n    };\r\n\r\n    initDrive();\r\n  }, [token.access_token]);\r\n\r\n  const handleNewGameClick = async () => {\r\n    try {\r\n      await newGame();\r\n      const updatedGamesList = await listDriveGames(folderID);\r\n      setGames(updatedGamesList);\r\n    } catch (error) {\r\n      console.error('Error creating new game:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ paddingLeft: '64px', paddingTop: '64px' }}>\r\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '48px' }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleNewGameClick}\r\n        >\r\n          New Game\r\n        </Button>\r\n      </div>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap', gap: '16px' }}>\r\n        {games.map((game) => (\r\n          <Card key={game.id} style={{ maxWidth: '240px', minWidth: '240px' }}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt={game.name}\r\n              height=\"140\"\r\n              image={game.imageUrl}\r\n              style={{ objectFit: 'cover', borderTopLeftRadius: '8px', borderTopRightRadius: '8px' }}\r\n            />\r\n            <CardContent>\r\n              <Typography variant=\"body3\" color=\"textSecondary\"  >\r\n                {game.name}\r\n              </Typography>\r\n            </CardContent>\r\n\r\n            {/* Acciones de la tarjeta */}\r\n            <CardActions>\r\n              <IconButton>\r\n                <EditIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <PlayCircleFilledIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <FileCopyIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </CardActions>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Games;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,mBAAmB,EAAEC,gBAAgB,EAAEC,cAAc,EAAEC,OAAO,QAAQ,aAAa;AAC5F,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,oBAAoB,MAAM,sCAAsC;AACvE,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAM0B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMzB,mBAAmB,CAACmB,KAAK,CAACO,YAAY,CAAC;QAC7C,MAAMC,EAAE,GAAG,MAAM1B,gBAAgB,CAAC,YAAY,CAAC;QAC/CqB,WAAW,CAACK,EAAE,CAAC;QACf,MAAMC,SAAS,GAAG,MAAM1B,cAAc,CAACyB,EAAE,CAAC;QAC1CH,QAAQ,CAACI,SAAS,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACE,OAAO,CAAC;MACtD;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACN,KAAK,CAACO,YAAY,CAAC,CAAC;EAExB,MAAMM,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAM7B,OAAO,CAAC,CAAC;MACf,MAAM8B,gBAAgB,GAAG,MAAM/B,cAAc,CAACmB,QAAQ,CAAC;MACvDG,QAAQ,CAACS,gBAAgB,CAAC;IAC5B,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC1D;EACF,CAAC;EAED,oBACEd,OAAA;IAAKiB,KAAK,EAAE;MAAEC,WAAW,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACtDpB,OAAA;MAAKiB,KAAK,EAAE;QAAEI,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAH,QAAA,eAC1EpB,OAAA,CAACH,MAAM;QACL2B,OAAO,EAAC,WAAW;QACnBC,KAAK,EAAC,SAAS;QACfC,SAAS,eAAE1B,OAAA,CAACJ,OAAO;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QACvBC,OAAO,EAAEhB,kBAAmB;QAAAK,QAAA,EAC7B;MAED;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACN9B,OAAA;MAAKiB,KAAK,EAAE;QAAEI,OAAO,EAAE,MAAM;QAAEW,QAAQ,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAE;MAAAb,QAAA,EAC5Dd,KAAK,CAAC4B,GAAG,CAAEC,IAAI,iBACdnC,OAAA,CAACb,IAAI;QAAe8B,KAAK,EAAE;UAAEmB,QAAQ,EAAE,OAAO;UAAEC,QAAQ,EAAE;QAAQ,CAAE;QAAAjB,QAAA,gBAClEpB,OAAA,CAACV,SAAS;UACRgD,SAAS,EAAC,KAAK;UACfC,GAAG,EAAEJ,IAAI,CAACK,IAAK;UACfC,MAAM,EAAC,KAAK;UACZC,KAAK,EAAEP,IAAI,CAACQ,QAAS;UACrB1B,KAAK,EAAE;YAAE2B,SAAS,EAAE,OAAO;YAAEC,mBAAmB,EAAE,KAAK;YAAEC,oBAAoB,EAAE;UAAM;QAAE;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxF,CAAC,eACF9B,OAAA,CAACZ,WAAW;UAAAgC,QAAA,eACVpB,OAAA,CAACF,UAAU;YAAC0B,OAAO,EAAC,OAAO;YAACC,KAAK,EAAC,eAAe;YAAAL,QAAA,EAC9Ce,IAAI,CAACK;UAAI;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eAGd9B,OAAA,CAACX,WAAW;UAAA+B,QAAA,gBACVpB,OAAA,CAACT,UAAU;YAAA6B,QAAA,eACTpB,OAAA,CAACR,QAAQ;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACb9B,OAAA,CAACT,UAAU;YAAA6B,QAAA,eACTpB,OAAA,CAACP,oBAAoB;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC,eACb9B,OAAA,CAACT,UAAU;YAAA6B,QAAA,eACTpB,OAAA,CAACN,YAAY;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACb9B,OAAA,CAACT,UAAU;YAAA6B,QAAA,eACTpB,OAAA,CAACL,UAAU;cAAAgC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA,GA5BLK,IAAI,CAACzB,EAAE;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA6BZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA9EIF,KAAK;AAAA8C,EAAA,GAAL9C,KAAK;AAgFX,eAAeA,KAAK;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}