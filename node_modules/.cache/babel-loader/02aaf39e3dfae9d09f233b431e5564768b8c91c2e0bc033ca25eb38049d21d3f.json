{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\src\\\\pages\\\\Games.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { newGame, duplicateGame, deleteGame, listDriveGames } from '../apis/driveAPI';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport AddIcon from '@mui/icons-material/Add';\nimport GameCard from '../components/GameCard';\nimport { useAppContext } from '../AppContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Games = () => {\n  _s();\n  const {\n    token,\n    appFolderID,\n    gameList,\n    setGameList,\n    setGameID,\n    updateGameList,\n    setUpdateGameList\n  } = useAppContext();\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const fetchGames = useCallback(async () => {\n    try {\n      setLoading(true);\n      const newUpdatedGameList = await listDriveGames(appFolderID);\n      setGameList(newUpdatedGameList);\n      setUpdateGameList(false);\n    } catch (error) {\n      console.error('Error fetching games:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [appFolderID, setGameList, setUpdateGameList]);\n  useEffect(() => {\n    if (updateGameList) fetchGames();\n  }, [updateGameList, fetchGames]);\n  const handleAction = async (action, ...args) => {\n    try {\n      setLoading(true);\n      if (action === deleteGame) {\n        const confirmed = window.confirm('Are you sure you want to delete this game?');\n        if (!confirmed) {\n          return setLoading(false); // Return early if the action is cancelled\n        }\n      }\n\n      await action(...args);\n      setUpdateGameList(true);\n    } catch (error) {\n      console.error('Error performing game operation:', error.message);\n    }\n  };\n  const handleNavigation = (path, gameID) => {\n    setGameID(gameID);\n    navigate(`/${path}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        // Asegura cobertura total horizontal dentro del contenedor padre\n        bottom: 0,\n        // Asegura cobertura total vertical dentro del contenedor padre\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(255, 255, 255, 0.8)',\n        zIndex: 9999\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        padding: '64px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '100%',\n          maxWidth: '1200px',\n          padding: '64px',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'flex-start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 24\n          }, this),\n          onClick: () => handleAction(newGame, appFolderID, token.access_token),\n          disabled: loading,\n          sx: {\n            mb: 4\n          } // Asegura que el botón \"New Game\" esté alineado a la izquierda\n          ,\n          children: \"New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: '16px',\n            justifyContent: 'flex-start'\n          },\n          children: gameList.map(game => /*#__PURE__*/_jsxDEV(GameCard, {\n            game: game,\n            handleEditGame: () => handleNavigation('edit', game.id),\n            handlePlayGame: () => handleNavigation('play', game.id),\n            handleDuplicateGame: () => handleAction(duplicateGame, game.id),\n            handleDeleteGame: () => handleAction(deleteGame, game.id)\n          }, game.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Games, \"rA7QcOJuM5erCqBwZxvN6bfYjL4=\", false, function () {\n  return [useAppContext, useNavigate];\n});\n_c = Games;\nexport default Games;\nvar _c;\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","newGame","duplicateGame","deleteGame","listDriveGames","Button","CircularProgress","Box","AddIcon","GameCard","useAppContext","useNavigate","jsxDEV","_jsxDEV","Games","_s","token","appFolderID","gameList","setGameList","setGameID","updateGameList","setUpdateGameList","loading","setLoading","navigate","fetchGames","newUpdatedGameList","error","console","handleAction","action","args","confirmed","window","confirm","message","handleNavigation","path","gameID","sx","display","flexDirection","alignItems","children","position","top","left","right","bottom","justifyContent","backgroundColor","zIndex","size","fileName","_jsxFileName","lineNumber","columnNumber","padding","width","maxWidth","variant","color","startIcon","onClick","access_token","disabled","mb","flexWrap","gap","map","game","handleEditGame","id","handlePlayGame","handleDuplicateGame","handleDeleteGame","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/src/pages/Games.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { newGame, duplicateGame, deleteGame, listDriveGames } from '../apis/driveAPI';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport GameCard from '../components/GameCard';\r\nimport { useAppContext } from '../AppContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Games = () => {\r\n  const { token, appFolderID, gameList, setGameList, setGameID, updateGameList, setUpdateGameList } = useAppContext();\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchGames = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const newUpdatedGameList = await listDriveGames(appFolderID);\r\n      setGameList(newUpdatedGameList);\r\n      setUpdateGameList(false);\r\n    } catch (error) {\r\n      console.error('Error fetching games:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [appFolderID, setGameList, setUpdateGameList]);\r\n\r\n  useEffect(() => {\r\n    if (updateGameList) fetchGames();\r\n  }, [updateGameList, fetchGames]);\r\n\r\n  const handleAction = async (action, ...args) => {\r\n    try {\r\n      setLoading(true);\r\n      if (action === deleteGame) {\r\n        const confirmed = window.confirm('Are you sure you want to delete this game?');\r\n        if (!confirmed) {\r\n          return setLoading(false); // Return early if the action is cancelled\r\n        }\r\n      }\r\n      await action(...args);\r\n      setUpdateGameList(true);\r\n    } catch (error) {\r\n      console.error('Error performing game operation:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleNavigation = (path, gameID) => {\r\n    setGameID(gameID);\r\n    navigate(`/${path}`);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      {loading && (\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0, // Asegura cobertura total horizontal dentro del contenedor padre\r\n            bottom: 0, // Asegura cobertura total vertical dentro del contenedor padre\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n            zIndex: 9999,\r\n          }}\r\n        >\r\n          <CircularProgress size={80} />\r\n        </Box>\r\n      )}\r\n      <Box sx={{ padding: '64px' }}>\r\n        <Box sx={{ width: '100%', maxWidth: '1200px', padding: '64px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            onClick={() => handleAction(newGame, appFolderID, token.access_token)}\r\n            disabled={loading}\r\n            sx={{ mb: 4 }} // Asegura que el botón \"New Game\" esté alineado a la izquierda\r\n          >\r\n            New Game\r\n          </Button>\r\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: '16px', justifyContent: 'flex-start' }}>\r\n            {gameList.map((game) => (\r\n              <GameCard key={game.id} game={game}\r\n                handleEditGame={() => handleNavigation('edit', game.id)}\r\n                handlePlayGame={() => handleNavigation('play', game.id)}\r\n                handleDuplicateGame={() => handleAction(duplicateGame, game.id)}\r\n                handleDeleteGame={() => handleAction(deleteGame, game.id)}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Games;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}