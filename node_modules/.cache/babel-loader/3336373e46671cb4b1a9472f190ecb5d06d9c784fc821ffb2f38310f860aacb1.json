{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\src\\\\loop.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\nimport { getUserInfo, initGoogleAPI, login, logout } from './apis/googleAPI';\nimport NavBar from './components/NavBar';\nimport Home from './pages/Home';\nimport Games from './pages/Games';\nimport Editor from './pages/Editor';\nimport Play from './pages/Play';\nimport SessionDialog from './components/SessionDialog';\nimport { useAppContext } from './context';\nimport { folderExists, createFolder } from './apis/driveAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Loop() {\n  _s();\n  const {\n    token,\n    setToken,\n    userInfo,\n    setUserInfo,\n    expirationTime,\n    setExpirationTime,\n    isDialogOpen,\n    setIsDialogOpen,\n    setGamesLoaded,\n    setAppFolderID\n  } = useAppContext();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [lastLocation, setLastLocation] = useState(null);\n\n  // useEffect(() => {\n  //   const checkSessionExpiration = () => {\n  //     const currentTime = new Date().getTime();\n  //     if (expirationTime) {\n  //       const timeUntilExpiration = expirationTime - currentTime;\n  //       const fiveMinutesInMilliseconds = 59.5 * 60 * 1000;\n  //       if (userInfo && timeUntilExpiration <= fiveMinutesInMilliseconds && timeUntilExpiration > 0) {\n  //         setIsDialogOpen(true);\n  //         setLastLocation(location.pathname);\n  //       }\n  //     }\n  //   };\n\n  //   checkSessionExpiration();\n  //   const checkInterval = setInterval(checkSessionExpiration, 1000);\n  //   return () => clearInterval(checkInterval);\n  // }, [expirationTime, setIsDialogOpen, userInfo, location.pathname]);\n\n  useEffect(() => {\n    if (location.pathname.includes('/editor')) {\n      const iframe = document.getElementById('gameIframe');\n      if (iframe) {\n        console.log(\"game saved!!!\");\n        iframe.contentWindow.postMessage('GuardarJuego', '*');\n      }\n    }\n  }, [location.pathname]);\n  const handleLogout = async () => {\n    await logout();\n    setToken(null);\n    setUserInfo(null);\n    setExpirationTime(null);\n    setIsDialogOpen(false);\n    if (location.pathname.includes('/editor')) {\n      navigate('/');\n    }\n  };\n  const handleLogin = async () => {\n    // setIsDialogOpen(false);\n    // setExpirationTime(-1);\n    await initGoogleAPI();\n    const newToken = await login();\n    setToken(newToken);\n    console.log(token);\n    const newExpirationTime = new Date().getTime() + token.expires_in * 1000;\n    setExpirationTime(newExpirationTime);\n    var appFolderID = await folderExists(\"Loop Games\", token.access_token);\n    if (!appFolderID) {\n      appFolderID = await createFolder(\"Loop Games\", 'root', token.access_token);\n    }\n    setAppFolderID(appFolderID);\n    setGamesLoaded(false);\n    const userInfo = await getUserInfo(token.access_token);\n    setUserInfo(userInfo);\n    navigate(lastLocation || '/games');\n  };\n  const isEditorPage = location.pathname.includes('/editor');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '0px'\n    },\n    children: [!isEditorPage && /*#__PURE__*/_jsxDEV(NavBar, {\n      userInfo: userInfo,\n      expirationTime: expirationTime,\n      handleLogin: handleLogin,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/games\",\n        element: /*#__PURE__*/_jsxDEV(Games, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/editor\",\n        element: /*#__PURE__*/_jsxDEV(Editor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/play\",\n        element: /*#__PURE__*/_jsxDEV(Play, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SessionDialog, {\n      isOpen: isDialogOpen,\n      onLogin: handleLogin,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(Loop, \"CSTkyEvWObEJ5zHLPHD3IR8IscQ=\", false, function () {\n  return [useAppContext, useNavigate, useLocation];\n});\n_c = Loop;\nexport default Loop;\nvar _c;\n$RefreshReg$(_c, \"Loop\");","map":{"version":3,"names":["React","useEffect","useState","Routes","Route","useLocation","useNavigate","getUserInfo","initGoogleAPI","login","logout","NavBar","Home","Games","Editor","Play","SessionDialog","useAppContext","folderExists","createFolder","jsxDEV","_jsxDEV","Loop","_s","token","setToken","userInfo","setUserInfo","expirationTime","setExpirationTime","isDialogOpen","setIsDialogOpen","setGamesLoaded","setAppFolderID","navigate","location","lastLocation","setLastLocation","pathname","includes","iframe","document","getElementById","console","log","contentWindow","postMessage","handleLogout","handleLogin","newToken","newExpirationTime","Date","getTime","expires_in","appFolderID","access_token","isEditorPage","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","isOpen","onLogin","onLogout","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/src/loop.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\r\nimport { getUserInfo, initGoogleAPI, login, logout } from './apis/googleAPI';\r\nimport NavBar from './components/NavBar';\r\nimport Home from './pages/Home';\r\nimport Games from './pages/Games';\r\nimport Editor from './pages/Editor';\r\nimport Play from './pages/Play';\r\nimport SessionDialog from './components/SessionDialog';\r\nimport { useAppContext } from './context';\r\nimport { folderExists, createFolder } from './apis/driveAPI';\r\n\r\nfunction Loop() {\r\n  const { token, setToken, userInfo, setUserInfo, expirationTime, setExpirationTime,\r\n    isDialogOpen,\r\n    setIsDialogOpen,\r\n    setGamesLoaded,\r\n    setAppFolderID,\r\n\r\n  } = useAppContext();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [lastLocation, setLastLocation] = useState(null);\r\n\r\n  // useEffect(() => {\r\n  //   const checkSessionExpiration = () => {\r\n  //     const currentTime = new Date().getTime();\r\n  //     if (expirationTime) {\r\n  //       const timeUntilExpiration = expirationTime - currentTime;\r\n  //       const fiveMinutesInMilliseconds = 59.5 * 60 * 1000;\r\n  //       if (userInfo && timeUntilExpiration <= fiveMinutesInMilliseconds && timeUntilExpiration > 0) {\r\n  //         setIsDialogOpen(true);\r\n  //         setLastLocation(location.pathname);\r\n  //       }\r\n  //     }\r\n  //   };\r\n\r\n  //   checkSessionExpiration();\r\n  //   const checkInterval = setInterval(checkSessionExpiration, 1000);\r\n  //   return () => clearInterval(checkInterval);\r\n  // }, [expirationTime, setIsDialogOpen, userInfo, location.pathname]);\r\n\r\n  useEffect(() => {\r\n    if (location.pathname.includes('/editor')) {\r\n      const iframe = document.getElementById('gameIframe');\r\n      if (iframe) {\r\n        console.log(\"game saved!!!\");\r\n        iframe.contentWindow.postMessage('GuardarJuego', '*');\r\n      }\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const handleLogout = async () => {\r\n    await logout();\r\n    setToken(null);\r\n    setUserInfo(null);\r\n    setExpirationTime(null);\r\n    setIsDialogOpen(false);\r\n    if (location.pathname.includes('/editor')) {\r\n      navigate('/');\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    // setIsDialogOpen(false);\r\n    // setExpirationTime(-1);\r\n    await initGoogleAPI();\r\n    const newToken = await login();\r\n    setToken(newToken);\r\n    console.log(token);\r\n    const newExpirationTime = new Date().getTime() + token.expires_in * 1000;\r\n    setExpirationTime(newExpirationTime);\r\n    var appFolderID = await folderExists(\"Loop Games\", token.access_token);\r\n    if (!appFolderID) {\r\n      appFolderID = await createFolder(\"Loop Games\", 'root', token.access_token);\r\n    }\r\n    setAppFolderID(appFolderID);\r\n    setGamesLoaded(false);\r\n\r\n    const userInfo = await getUserInfo(token.access_token);\r\n    setUserInfo(userInfo);\r\n    navigate(lastLocation || '/games');\r\n  };\r\n\r\n  const isEditorPage = location.pathname.includes('/editor');\r\n\r\n  return (\r\n    <div style={{ height: '0px' }}>\r\n      {!isEditorPage && (\r\n        <NavBar userInfo={userInfo} expirationTime={expirationTime} handleLogin={handleLogin} handleLogout={handleLogout} />\r\n      )}\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/games\" element={<Games />} />\r\n        <Route path=\"/editor\" element={<Editor />} />\r\n        <Route path=\"/play\" element={<Play />} />\r\n      </Routes>\r\n      <SessionDialog isOpen={isDialogOpen} onLogin={handleLogin} onLogout={handleLogout} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loop;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}