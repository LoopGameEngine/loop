{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\src\\\\pages\\\\Games.js\",\n  _s = $RefreshSig$();\n// Games.js\nimport React, { useEffect, useState } from 'react';\nimport { newGame, duplicateGame, deleteGame, listDriveGames } from '../apis/driveAPI';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport AddIcon from '@mui/icons-material/Add';\nimport GameCard from '../components/GameCard';\nimport { useAppContext } from '../context';\nimport { useNavigate } from 'react-router-dom';\nimport { getImageDownloadUrl } from '../apis/driveAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Games = () => {\n  _s();\n  const {\n    savedGame,\n    setSavedGame,\n    token,\n    gameID,\n    setGameID,\n    gameList,\n    setGameList,\n    appFolderID\n  } = useAppContext();\n  const [loading, setLoading] = useState(false);\n  const [updateGameList, setUpdateGameList] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchGames = async () => {\n      setLoading(true);\n      try {\n        const updatedGameList = await listDriveGames(appFolderID);\n        setGameList(updatedGameList);\n      } catch (error) {\n        console.error('Error fetching games:', error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (!gameList || gameList.length === 0 || updateGameList) {\n      fetchGames();\n      setUpdateGameList(false);\n    }\n  }, [gameList, setGameList, appFolderID, updateGameList]);\n  useEffect(() => {\n    const updateGameListWithImageUrl = async () => {\n      if (savedGame) {\n        try {\n          const imageUrl = await getImageDownloadUrl(gameID); // Asegúrate de que esta función devuelva una cadena\n          console.log(\"Image URL:\", imageUrl);\n          // Crea una copia de savedGame para modificar\n          const updatedSavedGame = {\n            ...savedGame,\n            imageUrl\n          };\n\n          // Actualiza el estado de gameList con la nueva información\n          setGameList(currentGameList => {\n            return currentGameList.map(game => {\n              if (game.id === updatedSavedGame.id) {\n                return updatedSavedGame;\n              }\n              return game;\n            });\n          });\n\n          // Limpia savedGame después de actualizar\n          setSavedGame(null);\n        } catch (error) {\n          console.error('Error fetching image URL:', error);\n        }\n      }\n    };\n    updateGameListWithImageUrl();\n  }, [savedGame, setSavedGame, setGameList, gameID, getImageDownloadUrl]);\n  const handleNewGame = async () => {\n    try {\n      setLoading(true);\n      await newGame(appFolderID, token.access_token);\n      setUpdateGameList(true);\n    } catch (error) {\n      console.error('Error creating new game:', error.message);\n    }\n  };\n  const handleEditGame = async gameID => {\n    setGameID(gameID);\n    navigate(`/editor`);\n  };\n  const handlePlayGame = async gameID => {\n    setGameID(gameID);\n    navigate(`/play`);\n  };\n  const handleDuplicateGame = async gameID => {\n    try {\n      setLoading(true);\n      await duplicateGame(gameID);\n      setUpdateGameList(true);\n    } catch (error) {\n      console.error('Error duplicating game:', error.message);\n    }\n  };\n  const handleDeleteGame = async (gameID, gameName) => {\n    try {\n      setLoading(true);\n      await deleteGame(gameID, gameName);\n      setUpdateGameList(true);\n    } catch (error) {\n      console.error('Error deleting game:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [loading &&\n    /*#__PURE__*/\n    // Muestra el indicador de carga solo cuando loading es true\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          width: '100%',\n          height: 'calc(100% - 64px)',\n          backgroundColor: `rgba(255,255,255, 0.5)`,\n          zIndex: 9998\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          position: 'fixed',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          zIndex: 9999\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 64\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingLeft: '64px',\n        paddingTop: '64px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          marginBottom: '48px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 24\n          }, this),\n          onClick: handleNewGame,\n          disabled: loading,\n          children: \"New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '16px'\n        },\n        children: gameList.map(game => /*#__PURE__*/_jsxDEV(GameCard, {\n          game: game,\n          handleEditGame: handleEditGame,\n          handlePlayGame: handlePlayGame,\n          handleDuplicateGame: handleDuplicateGame,\n          handleDeleteGame: handleDeleteGame\n        }, game.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(Games, \"uRs61u4RwQbgSiXQKxGgwcPQDFI=\", false, function () {\n  return [useAppContext, useNavigate];\n});\n_c = Games;\nexport default Games;\nvar _c;\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"names":["React","useEffect","useState","newGame","duplicateGame","deleteGame","listDriveGames","Button","CircularProgress","Box","AddIcon","GameCard","useAppContext","useNavigate","getImageDownloadUrl","jsxDEV","_jsxDEV","Fragment","_Fragment","Games","_s","savedGame","setSavedGame","token","gameID","setGameID","gameList","setGameList","appFolderID","loading","setLoading","updateGameList","setUpdateGameList","navigate","fetchGames","updatedGameList","error","console","message","length","updateGameListWithImageUrl","imageUrl","log","updatedSavedGame","currentGameList","map","game","id","handleNewGame","access_token","handleEditGame","handlePlayGame","handleDuplicateGame","handleDeleteGame","gameName","style","position","children","width","height","backgroundColor","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","top","left","transform","size","paddingLeft","paddingTop","display","alignItems","marginBottom","variant","color","startIcon","onClick","disabled","flexWrap","gap","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/src/pages/Games.js"],"sourcesContent":["// Games.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { newGame, duplicateGame, deleteGame, listDriveGames } from '../apis/driveAPI';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport GameCard from '../components/GameCard';\r\nimport { useAppContext } from '../context';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getImageDownloadUrl } from '../apis/driveAPI';\r\n\r\nconst Games = () => {\r\n  const { savedGame, setSavedGame, token, gameID, setGameID, gameList, setGameList, appFolderID } = useAppContext();\r\n  const [loading, setLoading] = useState(false);\r\n  const [updateGameList, setUpdateGameList] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchGames = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const updatedGameList = await listDriveGames(appFolderID);\r\n        setGameList(updatedGameList);\r\n      } catch (error) {\r\n        console.error('Error fetching games:', error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    if (!gameList || gameList.length === 0 || updateGameList) {\r\n      fetchGames();\r\n      setUpdateGameList(false);\r\n    }\r\n  }, [gameList, setGameList, appFolderID, updateGameList]);\r\n\r\n\r\n  useEffect(() => {\r\n    const updateGameListWithImageUrl = async () => {\r\n        if (savedGame) {\r\n            try {\r\n                const imageUrl = await getImageDownloadUrl(gameID); // Asegúrate de que esta función devuelva una cadena\r\n                console.log(\"Image URL:\", imageUrl);\r\n                // Crea una copia de savedGame para modificar\r\n                const updatedSavedGame = { ...savedGame, imageUrl };\r\n\r\n                // Actualiza el estado de gameList con la nueva información\r\n                setGameList(currentGameList => {\r\n                    return currentGameList.map(game => {\r\n                        if (game.id === updatedSavedGame.id) {\r\n                            return updatedSavedGame;\r\n                        }\r\n                        return game;\r\n                    });\r\n                });\r\n\r\n                // Limpia savedGame después de actualizar\r\n                setSavedGame(null);\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching image URL:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    updateGameListWithImageUrl();\r\n}, [savedGame, setSavedGame, setGameList, gameID, getImageDownloadUrl]);\r\n\r\n\r\n\r\n  const handleNewGame = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await newGame(appFolderID, token.access_token);\r\n      setUpdateGameList(true);\r\n    } catch (error) {\r\n      console.error('Error creating new game:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleEditGame = async (gameID) => {\r\n    setGameID(gameID);\r\n    navigate(`/editor`);\r\n  };\r\n\r\n  const handlePlayGame = async (gameID) => {\r\n    setGameID(gameID);\r\n    navigate(`/play`);\r\n  };\r\n\r\n  const handleDuplicateGame = async (gameID) => {\r\n    try {\r\n      setLoading(true);\r\n      await duplicateGame(gameID);\r\n      setUpdateGameList(true);\r\n    } catch (error) {\r\n      console.error('Error duplicating game:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteGame = async (gameID, gameName) => {\r\n    try {\r\n      setLoading(true);\r\n      await deleteGame(gameID, gameName);\r\n      setUpdateGameList(true);\r\n    } catch (error) {\r\n      console.error('Error deleting game:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      {loading && ( // Muestra el indicador de carga solo cuando loading es true\r\n        <>\r\n          <div\r\n            style={{ position: 'fixed', width: '100%', height: 'calc(100% - 64px)', backgroundColor: `rgba(255,255,255, 0.5)`, zIndex: 9998 }}\r\n          ></div>\r\n          <Box\r\n            style={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', zIndex: 9999 }}\r\n          >\r\n            <CircularProgress size={64} />\r\n          </Box>\r\n        </>\r\n      )}\r\n      <div style={{ paddingLeft: '64px', paddingTop: '64px' }}>\r\n        <div style={{ display: 'flex', alignItems: 'center', marginBottom: '48px' }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleNewGame}\r\n            disabled={loading}\r\n          >\r\n            New Game\r\n          </Button>\r\n        </div>\r\n        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '16px' }}>\r\n          {gameList.map((game) => (\r\n            <GameCard key={game.id} game={game}\r\n              handleEditGame={handleEditGame}\r\n              handlePlayGame={handlePlayGame}\r\n              handleDuplicateGame={handleDuplicateGame}\r\n              handleDeleteGame={handleDeleteGame}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Games;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}