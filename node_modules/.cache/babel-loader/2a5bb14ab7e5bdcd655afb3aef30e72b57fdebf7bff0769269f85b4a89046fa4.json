{"ast":null,"code":"// api.js\n/* global gapi, google  */\nimport { useState } from 'react';\nconst CLIENT_ID = '129246923501-4lk4rkmhin21kcaoul91k300s9ar9n1t.apps.googleusercontent.com';\nconst API_KEY = 'AIzaSyCfXON-94Onk-fLyihh8buKZcFIjynGRTc';\nconst DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"];\nconst SCOPES = 'https://www.googleapis.com/auth/drive ';\nlet tokenClient;\nlet gapiInited = false;\nlet gisInited = false;\nlet user;\nexport function initGoogleAPI() {\n  console.log(\"Loading and initializing gapi and gis...\");\n  const gapiInitPromise = new Promise((resolve, reject) => {\n    gapi.load('client', () => {\n      gapi.client.init({\n        apiKey: API_KEY,\n        discoveryDocs: DISCOVERY_DOCS\n      }).then(() => {\n        gapiInited = true;\n        resolve(); // Resuelve la promesa cuando gapi está inicializado\n      }).catch(error => {\n        console.error(\"Error initializing gapi:\", error);\n        reject(error);\n      });\n    });\n  });\n  const gisInitPromise = new Promise(resolve => {\n    console.log(\"Initializing gis...\");\n    tokenClient = google.accounts.oauth2.initTokenClient({\n      client_id: CLIENT_ID,\n      scope: SCOPES,\n      prompt: ''\n    });\n    gisInited = true;\n    console.log(\"gis initialized successfully.\");\n    resolve(); // Resuelve la promesa después de la inicialización de gis\n  });\n\n  return Promise.all([gapiInitPromise, gisInitPromise]);\n}\nexport function signOut(setSignInButtonEnabled, setSignOutButtonEnabled, setNewGameButtonVisible) {\n  google.accounts.id.disableAutoSelect();\n  // Aquí, podrías usar las funciones setState para actualizar el estado y controlar la visibilidad de los botones\n  setSignInButtonEnabled(true);\n  setSignOutButtonEnabled(false);\n  setNewGameButtonVisible(false);\n}\nexport function signIn() {\n  return new Promise((resolve, reject) => {\n    tokenClient.callback = token => {\n      console.log(token);\n      localStorage.setItem(\"token\", JSON.stringify(token));\n      const tokenExpiration = new Date().getTime() + token.expires_in * 1000;\n      localStorage.setItem('tokenExpiration', tokenExpiration);\n      // Puedes agregar más lógica aquí si es necesario\n      resolve(token);\n    };\n    tokenClient.requestAccessToken({\n      prompt: ''\n    });\n  });\n}\nfunction checkTokenExpiration() {\n  const tokenExpiration = localStorage.getItem('tokenExpiration');\n  var now = new Date().getTime();\n  var timeRemaining = Math.floor((tokenExpiration - now) / 1000); // convert to seconds\n  var minutes = Math.floor(timeRemaining / 60);\n  var seconds = timeRemaining % 60;\n  document.querySelector('.title').innerHTML = \"Loop: \" + user + \" (\" + minutes + \" : \" + seconds + \")\";\n  if (timeRemaining < 0) signIn();\n}","map":{"version":3,"names":["useState","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","tokenClient","gapiInited","gisInited","user","initGoogleAPI","console","log","gapiInitPromise","Promise","resolve","reject","gapi","load","client","init","apiKey","discoveryDocs","then","catch","error","gisInitPromise","google","accounts","oauth2","initTokenClient","client_id","scope","prompt","all","signOut","setSignInButtonEnabled","setSignOutButtonEnabled","setNewGameButtonVisible","id","disableAutoSelect","signIn","callback","token","localStorage","setItem","JSON","stringify","tokenExpiration","Date","getTime","expires_in","requestAccessToken","checkTokenExpiration","getItem","now","timeRemaining","Math","floor","minutes","seconds","document","querySelector","innerHTML"],"sources":["D:/xampp/htdocs/app/src/googleAPI.js"],"sourcesContent":["// api.js\r\n/* global gapi, google  */\r\nimport { useState } from 'react';\r\n\r\nconst CLIENT_ID = '129246923501-4lk4rkmhin21kcaoul91k300s9ar9n1t.apps.googleusercontent.com';\r\nconst API_KEY = 'AIzaSyCfXON-94Onk-fLyihh8buKZcFIjynGRTc';\r\nconst DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"];\r\nconst SCOPES = 'https://www.googleapis.com/auth/drive ';\r\n\r\nlet tokenClient;\r\nlet gapiInited = false;\r\nlet gisInited = false;\r\nlet user;\r\n\r\nexport function initGoogleAPI() {\r\n  console.log(\"Loading and initializing gapi and gis...\");\r\n  \r\n  const gapiInitPromise = new Promise((resolve, reject) => {\r\n    gapi.load('client', () => {\r\n      gapi.client.init({\r\n        apiKey: API_KEY,\r\n        discoveryDocs: DISCOVERY_DOCS\r\n      })\r\n      .then(() => {\r\n        gapiInited = true;\r\n        resolve(); // Resuelve la promesa cuando gapi está inicializado\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error initializing gapi:\", error);\r\n        reject(error);\r\n      });\r\n    });\r\n  });\r\n\r\n  const gisInitPromise = new Promise((resolve) => {\r\n    console.log(\"Initializing gis...\");\r\n    tokenClient = google.accounts.oauth2.initTokenClient({\r\n      client_id: CLIENT_ID,\r\n      scope: SCOPES,\r\n      prompt: ''\r\n    });\r\n    gisInited = true;\r\n    console.log(\"gis initialized successfully.\");\r\n    resolve(); // Resuelve la promesa después de la inicialización de gis\r\n  });\r\n\r\n  return Promise.all([gapiInitPromise, gisInitPromise]);\r\n}\r\n\r\nexport function signOut(setSignInButtonEnabled, setSignOutButtonEnabled, setNewGameButtonVisible) {\r\n  google.accounts.id.disableAutoSelect();\r\n  // Aquí, podrías usar las funciones setState para actualizar el estado y controlar la visibilidad de los botones\r\n  setSignInButtonEnabled(true);\r\n  setSignOutButtonEnabled(false);\r\n  setNewGameButtonVisible(false);\r\n}\r\n\r\nexport function signIn() {\r\n  return new Promise((resolve, reject) => {\r\n    tokenClient.callback = (token) => {\r\n      console.log(token);\r\n      localStorage.setItem(\"token\", JSON.stringify(token));\r\n      const tokenExpiration = new Date().getTime() + (token.expires_in * 1000);\r\n      localStorage.setItem('tokenExpiration', tokenExpiration);\r\n      // Puedes agregar más lógica aquí si es necesario\r\n      resolve(token);\r\n    };\r\n    tokenClient.requestAccessToken({ prompt: '' });\r\n  });\r\n}\r\n\r\n\r\nfunction checkTokenExpiration() {\r\n  const tokenExpiration = localStorage.getItem('tokenExpiration');\r\n  var now = new Date().getTime();\r\n  var timeRemaining = Math.floor((tokenExpiration - now) / 1000); // convert to seconds\r\n  var minutes = Math.floor(timeRemaining / 60);\r\n  var seconds = timeRemaining % 60;\r\n  document.querySelector('.title').innerHTML = \"Loop: \" + user + \" (\" + minutes + \" : \" + seconds + \")\";\r\n  if (timeRemaining < 0) signIn();\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}