{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\src\\\\loop.js\",\n  _s = $RefreshSig$();\n// Loop.js\nimport React, { useEffect, useState } from 'react';\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\nimport { initGoogleAPI, login, logout } from './apis/googleAPI';\nimport NavBar from './components/NavBar';\nimport Home from './pages/Home';\nimport Games from './pages/Games';\nimport Editor from './pages/Editor';\nimport Play from './pages/Play';\nimport SessionDialog from './components/SessionDialog';\nimport { useAppContext } from './context';\nimport { folderExists, createFolder } from './apis/driveAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Loop() {\n  _s();\n  const {\n    isDialogOpen,\n    setIsDialogOpen,\n    setGamesLoaded,\n    setAppFolderID,\n    userInfo,\n    expirationTime,\n    setExpirationTime,\n    setToken,\n    setUserInfo\n  } = useAppContext();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [lastLocation, setLastLocation] = useState(null);\n  const [editorUrl, setEditorUrl] = useState(null);\n  useEffect(() => {\n    // Verifica la expiración de la sesión cada cierto intervalo\n    const checkSessionExpiration = () => {\n      const currentTime = new Date().getTime();\n      const timeUntilExpiration = expirationTime - currentTime;\n      const fiveMinutesInMilliseconds = 59.5 * 60 * 1000; // 5 minutos en milisegundos\n\n      // Verifica si el usuario ha iniciado sesión antes de mostrar el diálogo\n      if (userInfo && timeUntilExpiration <= fiveMinutesInMilliseconds && timeUntilExpiration > 0) {\n        setIsDialogOpen(true);\n        // Almacena la última ubicación antes de mostrar el diálogo\n        setLastLocation(location.pathname);\n\n        // Verificar si estás en la página del editor\n        if (location.pathname.includes('/editor')) {\n          // Obtiene la URL completa del editor\n          setEditorUrl(window.location.href);\n        }\n      }\n    };\n\n    // Verifica la expiración de la sesión al cargar la aplicación\n    checkSessionExpiration();\n\n    // Verifica la expiración de la sesión cada cierto intervalo\n    const checkInterval = setInterval(checkSessionExpiration, 1000); // Verifica cada segundo\n\n    // Limpia el intervalo cuando el componente se desmonta\n    return () => {\n      clearInterval(checkInterval);\n    };\n  }, [expirationTime, setIsDialogOpen, userInfo, location.pathname]);\n  const handleLogout = async () => {\n    const token = await logout();\n    setToken(token);\n    setUserInfo(null);\n    setExpirationTime(null); // Limpia el expirationTime al cerrar sesión\n    setIsDialogOpen(false);\n    if (location.pathname.includes('/editor')) {\n      navigate('/');\n    }\n  };\n  const handleLogin = async () => {\n    setIsDialogOpen(false);\n    setExpirationTime(-1);\n    await initGoogleAPI();\n    const {\n      token,\n      userInfo\n    } = await login();\n    // Calculate the exact moment in the future when the token will expire, in milliseconds\n    const newExpirationTime = new Date().getTime() + token.expires_in * 1000;\n    // Verificar y crear el directorio de juegos\n    var appFolderID = await folderExists(\"Loop Games\", token.access_token);\n    if (!appFolderID) {\n      appFolderID = await createFolder(\"Loop Games\", 'root', token.access_token);\n      setAppFolderID(appFolderID);\n    } else {\n      setAppFolderID(appFolderID);\n    }\n    setGamesLoaded(false); // Establece gameList en un array vacío\n    setToken(token);\n    setExpirationTime(newExpirationTime); // Actualiza el expirationTime\n    setUserInfo(userInfo);\n    navigate(lastLocation || '/games');\n  };\n\n  // Verifica si estás en la página del editor para no mostrar la barra global\n  const isEditorPage = location.pathname.includes('/editor');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '0px'\n    },\n    children: [!isEditorPage &&\n    /*#__PURE__*/\n    // Renderiza la barra global en todas las páginas excepto en la del editor\n    _jsxDEV(NavBar, {\n      userInfo: userInfo,\n      expirationTime: expirationTime,\n      handleLogin: handleLogin,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/games\",\n        element: /*#__PURE__*/_jsxDEV(Games, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/editor\",\n        element: /*#__PURE__*/_jsxDEV(Editor, {\n          editorUrl: editorUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/play\",\n        element: /*#__PURE__*/_jsxDEV(Play, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SessionDialog, {\n      isOpen: isDialogOpen,\n      onLogin: handleLogin,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(Loop, \"FVp4uNenYWwppdyLgohHKkAQmK4=\", false, function () {\n  return [useAppContext, useNavigate, useLocation];\n});\n_c = Loop;\nexport default Loop;\nvar _c;\n$RefreshReg$(_c, \"Loop\");","map":{"version":3,"names":["React","useEffect","useState","Routes","Route","useLocation","useNavigate","initGoogleAPI","login","logout","NavBar","Home","Games","Editor","Play","SessionDialog","useAppContext","folderExists","createFolder","jsxDEV","_jsxDEV","Loop","_s","isDialogOpen","setIsDialogOpen","setGamesLoaded","setAppFolderID","userInfo","expirationTime","setExpirationTime","setToken","setUserInfo","navigate","location","lastLocation","setLastLocation","editorUrl","setEditorUrl","checkSessionExpiration","currentTime","Date","getTime","timeUntilExpiration","fiveMinutesInMilliseconds","pathname","includes","window","href","checkInterval","setInterval","clearInterval","handleLogout","token","handleLogin","newExpirationTime","expires_in","appFolderID","access_token","isEditorPage","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","isOpen","onLogin","onLogout","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/src/loop.js"],"sourcesContent":["// Loop.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\r\nimport { initGoogleAPI, login, logout } from './apis/googleAPI';\r\nimport NavBar from './components/NavBar';\r\nimport Home from './pages/Home';\r\nimport Games from './pages/Games';\r\nimport Editor from './pages/Editor';\r\nimport Play from './pages/Play';\r\nimport SessionDialog from './components/SessionDialog';\r\nimport { useAppContext } from './context';\r\nimport { folderExists, createFolder } from './apis/driveAPI';\r\n\r\nfunction Loop() {\r\n  const { isDialogOpen, setIsDialogOpen, setGamesLoaded, setAppFolderID, userInfo, expirationTime, setExpirationTime, setToken, setUserInfo } = useAppContext();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [lastLocation, setLastLocation] = useState(null);\r\n  const [editorUrl, setEditorUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Verifica la expiración de la sesión cada cierto intervalo\r\n    const checkSessionExpiration = () => {\r\n      const currentTime = new Date().getTime();\r\n      const timeUntilExpiration = expirationTime - currentTime;\r\n      const fiveMinutesInMilliseconds = 59.5 * 60 * 1000; // 5 minutos en milisegundos\r\n\r\n      // Verifica si el usuario ha iniciado sesión antes de mostrar el diálogo\r\n      if (userInfo && timeUntilExpiration <= fiveMinutesInMilliseconds && timeUntilExpiration > 0) {\r\n        setIsDialogOpen(true);\r\n        // Almacena la última ubicación antes de mostrar el diálogo\r\n        setLastLocation(location.pathname);\r\n\r\n        // Verificar si estás en la página del editor\r\n        if (location.pathname.includes('/editor')) {\r\n          // Obtiene la URL completa del editor\r\n          setEditorUrl(window.location.href);\r\n        }\r\n      }\r\n    };\r\n\r\n    // Verifica la expiración de la sesión al cargar la aplicación\r\n    checkSessionExpiration();\r\n\r\n    // Verifica la expiración de la sesión cada cierto intervalo\r\n    const checkInterval = setInterval(checkSessionExpiration, 1000); // Verifica cada segundo\r\n\r\n    // Limpia el intervalo cuando el componente se desmonta\r\n    return () => {\r\n      clearInterval(checkInterval);\r\n    };\r\n  }, [expirationTime, setIsDialogOpen, userInfo, location.pathname]);\r\n\r\n  const handleLogout = async () => {\r\n    const token = await logout();\r\n    setToken(token);\r\n    setUserInfo(null);\r\n    setExpirationTime(null); // Limpia el expirationTime al cerrar sesión\r\n    setIsDialogOpen(false);\r\n    if (location.pathname.includes('/editor')) {\r\n      navigate('/');\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    setIsDialogOpen(false);\r\n    setExpirationTime(-1);\r\n    await initGoogleAPI();\r\n    const { token, userInfo } = await login();\r\n    // Calculate the exact moment in the future when the token will expire, in milliseconds\r\n    const newExpirationTime = new Date().getTime() + token.expires_in * 1000;\r\n    // Verificar y crear el directorio de juegos\r\n    var appFolderID = await folderExists(\"Loop Games\", token.access_token);\r\n    if (!appFolderID) {\r\n      appFolderID = await createFolder(\"Loop Games\", 'root', token.access_token);\r\n      setAppFolderID(appFolderID);\r\n    } else {\r\n      setAppFolderID(appFolderID);\r\n    }\r\n    setGamesLoaded(false); // Establece gameList en un array vacío\r\n    setToken(token);\r\n    setExpirationTime(newExpirationTime); // Actualiza el expirationTime\r\n    setUserInfo(userInfo);\r\n    navigate(lastLocation || '/games');\r\n  };\r\n\r\n  // Verifica si estás en la página del editor para no mostrar la barra global\r\n  const isEditorPage = location.pathname.includes('/editor');\r\n\r\n  return (\r\n    <div style={{ height: '0px' }}>\r\n      {!isEditorPage && (\r\n        // Renderiza la barra global en todas las páginas excepto en la del editor\r\n        <NavBar userInfo={userInfo} expirationTime={expirationTime} handleLogin={handleLogin} handleLogout={handleLogout} />\r\n      )}\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/games\" element={<Games />} />\r\n        <Route path=\"/editor\" element={<Editor editorUrl={editorUrl} />} />\r\n        <Route path=\"/play\" element={<Play />} />\r\n      </Routes>\r\n      <SessionDialog\r\n        isOpen={isDialogOpen}\r\n        onLogin={handleLogin}\r\n        onLogout={handleLogout}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loop;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}