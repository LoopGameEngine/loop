{"ast":null,"code":"// googleAPI.js\n/* global gapi, google  */\n\nconst CLIENT_ID = '129246923501-4lk4rkmhin21kcaoul91k300s9ar9n1t.apps.googleusercontent.com';\nconst API_KEY = 'AIzaSyCfXON-94Onk-fLyihh8buKZcFIjynGRTc';\nconst DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"];\nconst SCOPES = 'https://www.googleapis.com/auth/drive.file ';\nlet tokenClient;\nexport function initGoogleAPI() {\n  const gapiInitPromise = new Promise((resolve, reject) => {\n    gapi.load('client', () => {\n      gapi.client.init({\n        apiKey: API_KEY,\n        discoveryDocs: DISCOVERY_DOCS\n      }).then(() => {\n        resolve();\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  });\n  const gisInitPromise = new Promise(resolve => {\n    tokenClient = google.accounts.oauth2.initTokenClient({\n      client_id: CLIENT_ID,\n      scope: SCOPES,\n      prompt: ''\n    });\n    resolve();\n  });\n  return Promise.all([gapiInitPromise, gisInitPromise]);\n}\nexport function logout() {\n  return new Promise(resolve => {\n    google.accounts.id.disableAutoSelect();\n    resolve({\n      access_token: '',\n      expires_in: 0\n    });\n  });\n}\nexport function login() {\n  return new Promise(resolve => {\n    tokenClient.callback = token => {\n      getUserInfo(token.access_token).then(userInfo => {\n        resolve({\n          token,\n          userInfo\n        });\n      });\n    };\n    tokenClient.requestAccessToken({\n      prompt: ''\n    });\n  });\n}\nfunction getUserInfo(accessToken) {\n  const userInfoEndpoint = 'https://www.googleapis.com/oauth2/v1/userinfo';\n  return fetch(userInfoEndpoint, {\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  }).then(response => response.json());\n}","map":{"version":3,"names":["CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","tokenClient","initGoogleAPI","gapiInitPromise","Promise","resolve","reject","gapi","load","client","init","apiKey","discoveryDocs","then","catch","error","gisInitPromise","google","accounts","oauth2","initTokenClient","client_id","scope","prompt","all","logout","id","disableAutoSelect","access_token","expires_in","login","callback","token","getUserInfo","userInfo","requestAccessToken","accessToken","userInfoEndpoint","fetch","headers","Authorization","response","json"],"sources":["D:/xampp/htdocs/app/src/googleAPI.js"],"sourcesContent":["// googleAPI.js\r\n/* global gapi, google  */\r\n\r\nconst CLIENT_ID = '129246923501-4lk4rkmhin21kcaoul91k300s9ar9n1t.apps.googleusercontent.com';\r\nconst API_KEY = 'AIzaSyCfXON-94Onk-fLyihh8buKZcFIjynGRTc';\r\nconst DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"];\r\nconst SCOPES = 'https://www.googleapis.com/auth/drive.file ';\r\n\r\nlet tokenClient;\r\n\r\nexport function initGoogleAPI() {\r\n  const gapiInitPromise = new Promise((resolve, reject) => {\r\n    gapi.load('client', () => {\r\n      gapi.client.init({\r\n        apiKey: API_KEY,\r\n        discoveryDocs: DISCOVERY_DOCS\r\n      })\r\n        .then(() => { resolve(); })\r\n        .catch((error) => { reject(error); });\r\n    });\r\n  });\r\n\r\n  const gisInitPromise = new Promise((resolve) => {\r\n    tokenClient = google.accounts.oauth2.initTokenClient({\r\n      client_id: CLIENT_ID,\r\n      scope: SCOPES,\r\n      prompt: ''\r\n    });\r\n    resolve();\r\n  });\r\n\r\n  return Promise.all([gapiInitPromise, gisInitPromise]);\r\n}\r\n\r\nexport function logout() {\r\n  return new Promise((resolve) => {\r\n    google.accounts.id.disableAutoSelect();\r\n    resolve({ access_token: '', expires_in: 0 });\r\n  });\r\n}\r\n\r\nexport function login() {\r\n  return new Promise((resolve) => {\r\n    tokenClient.callback = (token) => {\r\n      getUserInfo(token.access_token)\r\n        .then(userInfo => { resolve({ token, userInfo }); })\r\n    };\r\n    tokenClient.requestAccessToken({ prompt: '' });\r\n  });\r\n}\r\n\r\nfunction getUserInfo(accessToken) {\r\n  const userInfoEndpoint = 'https://www.googleapis.com/oauth2/v1/userinfo';\r\n  return fetch(userInfoEndpoint, {\r\n    headers: { Authorization: `Bearer ${accessToken}` }\r\n  })\r\n    .then(response => response.json())\r\n}\r\n"],"mappings":"AAAA;AACA;;AAEA,MAAMA,SAAS,GAAG,0EAA0E;AAC5F,MAAMC,OAAO,GAAG,yCAAyC;AACzD,MAAMC,cAAc,GAAG,CAAC,4DAA4D,CAAC;AACrF,MAAMC,MAAM,GAAG,6CAA6C;AAE5D,IAAIC,WAAW;AAEf,OAAO,SAASC,aAAaA,CAAA,EAAG;EAC9B,MAAMC,eAAe,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACvDC,IAAI,CAACC,IAAI,CAAC,QAAQ,EAAE,MAAM;MACxBD,IAAI,CAACE,MAAM,CAACC,IAAI,CAAC;QACfC,MAAM,EAAEb,OAAO;QACfc,aAAa,EAAEb;MACjB,CAAC,CAAC,CACCc,IAAI,CAAC,MAAM;QAAER,OAAO,CAAC,CAAC;MAAE,CAAC,CAAC,CAC1BS,KAAK,CAAEC,KAAK,IAAK;QAAET,MAAM,CAACS,KAAK,CAAC;MAAE,CAAC,CAAC;IACzC,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAG,IAAIZ,OAAO,CAAEC,OAAO,IAAK;IAC9CJ,WAAW,GAAGgB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACC,eAAe,CAAC;MACnDC,SAAS,EAAExB,SAAS;MACpByB,KAAK,EAAEtB,MAAM;MACbuB,MAAM,EAAE;IACV,CAAC,CAAC;IACFlB,OAAO,CAAC,CAAC;EACX,CAAC,CAAC;EAEF,OAAOD,OAAO,CAACoB,GAAG,CAAC,CAACrB,eAAe,EAAEa,cAAc,CAAC,CAAC;AACvD;AAEA,OAAO,SAASS,MAAMA,CAAA,EAAG;EACvB,OAAO,IAAIrB,OAAO,CAAEC,OAAO,IAAK;IAC9BY,MAAM,CAACC,QAAQ,CAACQ,EAAE,CAACC,iBAAiB,CAAC,CAAC;IACtCtB,OAAO,CAAC;MAAEuB,YAAY,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAE,CAAC,CAAC;EAC9C,CAAC,CAAC;AACJ;AAEA,OAAO,SAASC,KAAKA,CAAA,EAAG;EACtB,OAAO,IAAI1B,OAAO,CAAEC,OAAO,IAAK;IAC9BJ,WAAW,CAAC8B,QAAQ,GAAIC,KAAK,IAAK;MAChCC,WAAW,CAACD,KAAK,CAACJ,YAAY,CAAC,CAC5Bf,IAAI,CAACqB,QAAQ,IAAI;QAAE7B,OAAO,CAAC;UAAE2B,KAAK;UAAEE;QAAS,CAAC,CAAC;MAAE,CAAC,CAAC;IACxD,CAAC;IACDjC,WAAW,CAACkC,kBAAkB,CAAC;MAAEZ,MAAM,EAAE;IAAG,CAAC,CAAC;EAChD,CAAC,CAAC;AACJ;AAEA,SAASU,WAAWA,CAACG,WAAW,EAAE;EAChC,MAAMC,gBAAgB,GAAG,+CAA+C;EACxE,OAAOC,KAAK,CAACD,gBAAgB,EAAE;IAC7BE,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASJ,WAAY;IAAE;EACpD,CAAC,CAAC,CACCvB,IAAI,CAAC4B,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;AACtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}