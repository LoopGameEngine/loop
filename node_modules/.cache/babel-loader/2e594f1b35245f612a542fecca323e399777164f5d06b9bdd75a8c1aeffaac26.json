{"ast":null,"code":"//driverAPI.js\n/* global gapi */\n\nlet accessToken;\nvar listcontainer = document.querySelector('.list ul');\nvar expandContainer = document.querySelector('.expand-container');\nvar expandContainerUl = document.querySelector('.expand-container ul');\nvar openWindows = {};\nvar appFolderID;\nfunction setDriveAccessToken(token) {\n  accessToken = token;\n}\nfunction checkDriveFolder(loopGamesFolder) {\n  return new Promise(function (resolve, reject) {\n    gapi.client.drive.files.list({\n      q: \"name ='\" + loopGamesFolder + \"' and trashed=false\",\n      fields: 'files(id,name,owners(displayName))'\n    }).then(function (response) {\n      var files = response.result.files;\n      if (files && files.length > 0) {\n        resolve(files[0].id);\n      } else {\n        createFolder(loopGamesFolder, 'root', accessToken).then(function (folderId) {\n          resolve(folderId);\n        }).catch(function (error) {\n          reject(new Error('Failed to create folder: ' + error.message));\n        });\n      }\n    }).catch(function (error) {\n      reject(new Error('Failed to list files: ' + error.message));\n    });\n  });\n}\nfunction listDriveGames(appFolderID) {\n  return new Promise((resolve, reject) => {\n    if (appFolderID) {\n      gapi.client.drive.files.list({\n        'q': `parents in \"${appFolderID}\"` // list user games\n      }).then(function (response) {\n        const files = response.result.files;\n        console.log(files);\n        resolve(files);\n      }).catch(function (error) {\n        reject(new Error('Error listing drive games: ' + error.message));\n      });\n    }\n  });\n}\n\n// function expand(v) {\n//   var click_position = v.getBoundingClientRect();\n//   if (expandContainer.style.display === 'block') {\n//     expandContainer.style.display = 'none';\n//     expandContainerUl.setAttribute('data-id', '');\n//   } else {\n//     expandContainer.style.display = 'block';\n//     expandContainer.style.left = (click_position.left + window.scrollX) - 120 + 'px';\n//     expandContainer.style.top = (click_position.top + window.scrollY) + 25 + 'px';\n//     expandContainerUl.setAttribute('gameid', v.getAttribute('gameid'));\n//   }\n// }\n\nfunction newGame() {\n  var gameID;\n  createFolder(\"Untitled Game\", appFolderID).then(function (folderId) {\n    gameID = folderId;\n    createEmptyJson(gameID);\n    return createEmptyImage(gameID);\n  }).then(function (imageFileId) {\n    return createFolder(\"images\", gameID);\n  }).then(function () {\n    return createFolder(\"sounds\", gameID);\n  }).then(function () {\n    listDriveGames(appFolderID);\n  }).catch(function (error) {\n    console.error(\"Failed to create game:\", error);\n  });\n}\nfunction editGame(menuItemHTML) {\n  var gameID = menuItemHTML.parentNode.getAttribute(\"gameid\");\n  var url = \"editor/?id=\" + gameID;\n  if (openWindows[url] && !openWindows[url].closed) openWindows[url].focus();else openWindows[url] = window.open(url, \"_blank\");\n  expandContainer.style.display = 'none';\n  expandContainerUl.setAttribute('gameid', '');\n}\n\n// function deleteMenu(event) {\n//   if (!(event.target.tagName === 'svg' || event.target.tagName === 'path') && event.target !== expandContainer) {\n//     expandContainer.style.display = 'none';\n//     expandContainerUl.setAttribute('gameid', '');\n//   }\n// }\n\nfunction playGame(menuItemHTML) {\n  var gameID = menuItemHTML.parentNode.getAttribute(\"gameid\");\n  var url = \"engine/?id=\" + gameID;\n  if (openWindows[url] && !openWindows[url].closed) openWindows[url].focus();else openWindows[url] = window.open(url, \"_blank\");\n  expandContainer.style.display = 'none';\n  expandContainerUl.setAttribute('gameid', '');\n}\nfunction deleteGame(menuItemHTML) {\n  var gameID = menuItemHTML.parentNode.getAttribute(\"gameid\");\n  var gameName = document.querySelector('[gameid=\"' + gameID + '\"]').parentNode.children[0].innerHTML;\n  expandContainer.style.display = 'none';\n  expandContainerUl.setAttribute('gameid', '');\n  var result = window.confirm('Do you want to delete the \"' + gameName + '\" game ? ');\n  if (result) {\n    var request = gapi.client.drive.files.delete({\n      'fileId': gameID\n    });\n    request.execute(function (res) {\n      console.log('File Deleted');\n      listDriveGames(appFolderID);\n    });\n  } else {\n    console.log(\"Option selected: false\");\n  }\n}\nfunction duplicateGame(menuItemHTML) {\n  var directoryId = menuItemHTML.parentNode.getAttribute(\"gameid\");\n  var request = gapi.client.drive.files.get({\n    'fileId': directoryId,\n    'fields': 'name, parents'\n  });\n  request.execute(function (res) {\n    console.log('Game Folder Retrieved');\n    var duplicateFolderName = res.name + ' - Copy';\n    var copyRequest = gapi.client.drive.files.create({\n      'resource': {\n        'name': duplicateFolderName,\n        'mimeType': 'application/vnd.google-apps.folder',\n        'parents': res.parents\n      }\n    });\n    copyRequest.execute(function (copyRes) {\n      console.log('Game Folder Duplicated');\n      var duplicatedDirectoryId = copyRes.id;\n      copyDirectoryContents(directoryId, duplicatedDirectoryId, duplicateFolderName);\n      expandContainer.style.display = 'none';\n      expandContainerUl.setAttribute('gameid', '');\n      listDriveGames(appFolderID);\n    });\n  });\n}\nfunction copyDirectoryContents(sourceDirectoryId, destinationDirectoryId, duplicateFolderName) {\n  var request = gapi.client.drive.files.list({\n    'q': \"'\" + sourceDirectoryId + \"' in parents\",\n    'fields': 'files(id, name, mimeType)'\n  });\n  request.execute(function (res) {\n    var files = res.files;\n    files.forEach(function (file) {\n      if (file.mimeType === 'application/vnd.google-apps.folder') {\n        duplicateSubdirectory(file.id, destinationDirectoryId);\n      } else {\n        var copyRequest = gapi.client.drive.files.copy({\n          'fileId': file.id,\n          'parents': [destinationDirectoryId]\n        });\n        copyRequest.execute(function (copyRes) {\n          console.log('File Copied: ' + copyRes.name);\n          if (copyRes.name == \"game.json\") {\n            getJson(sourceDirectoryId).then(function (originalGameJsonId) {\n              console.log('ID del archivo game.json:', originalGameJsonId);\n              changeNameInJson(copyRes.id, originalGameJsonId, duplicateFolderName);\n            }).catch(function (error) {\n              console.error(error);\n            });\n          }\n        });\n      }\n    });\n  });\n}\nfunction getJson(directoryId) {\n  var request = gapi.client.drive.files.list({\n    'q': \"name='game.json' and '\" + directoryId + \"' in parents\",\n    'fields': 'files(id)'\n  });\n  return new Promise(function (resolve, reject) {\n    request.execute(function (res) {\n      if (res.files.length > 0) {\n        var gameJsonId = res.files[0].id;\n        resolve(gameJsonId);\n      } else {\n        reject(new Error('No se encontr√≥ el archivo game.json en la carpeta original.'));\n      }\n    });\n  });\n}\nfunction changeNameInJson(duplicatedDirectoryId, originalGameJsonId, newName) {\n  var request = gapi.client.drive.files.get({\n    'fileId': originalGameJsonId,\n    'alt': 'media'\n  });\n  request.execute(function (res) {\n    var gameJsonContent = res;\n    gameJsonContent.name = newName;\n    var updatedJsonString = JSON.stringify(gameJsonContent);\n    var updateRequest = gapi.client.request({\n      'path': '/upload/drive/v3/files/' + duplicatedDirectoryId,\n      'method': 'PATCH',\n      'params': {\n        'uploadType': 'media'\n      },\n      'headers': {\n        'Content-Type': 'application/json'\n      },\n      'body': updatedJsonString\n    });\n    updateRequest.execute(function (updateRes) {\n      console.log('Nombre del juego duplicado actualizado: ' + newName);\n    });\n  });\n}\nfunction duplicateSubdirectory(sourceSubdirectoryId, destinationParentId) {\n  var request = gapi.client.drive.files.get({\n    'fileId': sourceSubdirectoryId,\n    'fields': 'name, parents'\n  });\n  request.execute(function (res) {\n    console.log('Subdirectory Retrieved');\n    var subdirectoryData = res;\n    var copyRequest = gapi.client.drive.files.create({\n      'resource': {\n        'name': subdirectoryData.name,\n        'mimeType': 'application/vnd.google-apps.folder',\n        'parents': [destinationParentId]\n      }\n    });\n    copyRequest.execute(function (copyRes) {\n      console.log('Subdirectory Duplicated');\n      var duplicatedSubdirectoryId = copyRes.id;\n      copyDirectoryContents(sourceSubdirectoryId, duplicatedSubdirectoryId);\n    });\n  });\n}\nfunction createFolder(folderName, parent) {\n  console.log(\"createFolder \", folderName, parent);\n  return new Promise(function (resolve, reject) {\n    var request = gapi.client.request({\n      path: '/drive/v3/files',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + accessToken\n      },\n      body: {\n        'name': folderName,\n        'mimeType': 'application/vnd.google-apps.folder',\n        'parents': [parent]\n      }\n    });\n    request.execute(function (response) {\n      if (response.error) {\n        reject(new Error('Failed to create folder: ' + response.error.message));\n      } else if (response.id) {\n        resolve(response.id);\n      } else {\n        reject(new Error('Failed to create folder.'));\n      }\n    });\n  });\n}\n// Exporta las funciones necesarias si es necesario\nfunction createEmptyJson(gameID) {\n  return new Promise(function (resolve, reject) {\n    var request = gapi.client.request({\n      path: '/drive/v3/files',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + JSON.parse(localStorage.getItem(\"token\")).accessToken\n      },\n      body: {\n        'name': 'game.json',\n        'mimeType': 'application/json',\n        'parents': [gameID]\n      }\n    });\n    request.execute(function (response) {\n      if (response.error) {\n        reject(new Error('Failed to create JSON file: ' + response.error.message));\n      } else if (response.id) {\n        resolve(response.id);\n      } else {\n        reject(new Error('Failed to create JSON file.'));\n      }\n    });\n  });\n}\nfunction createEmptyImage(gameID) {\n  return new Promise(function (resolve, reject) {\n    var metadata = {\n      'name': 'image.jpg',\n      'parents': [gameID]\n    };\n    // Crear una imagen en blanco de 1x1 p√≠xeles\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    var context = canvas.getContext('2d');\n    context.fillStyle = '#ffffff'; // Color blanco\n    context.fillRect(0, 0, 1, 1);\n    canvas.toBlob(function (blob) {\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        var base64Data = reader.result.split(',')[1];\n        var boundary = '-------314159265358979323846';\n        var delimiter = '\\r\\n--' + boundary + '\\r\\n';\n        var close_delim = '\\r\\n--' + boundary + '--';\n        var multipartRequestBody = delimiter + 'Content-Type: application/json\\r\\n\\r\\n' + JSON.stringify(metadata) + delimiter + 'Content-Type: image/jpeg\\r\\n' + 'Content-Transfer-Encoding: base64\\r\\n' + '\\r\\n' + base64Data + close_delim;\n        gapi.client.request({\n          path: '/upload/drive/v3/files',\n          method: 'POST',\n          params: {\n            'uploadType': 'multipart'\n          },\n          headers: {\n            'Content-Type': 'multipart/related; boundary=\"' + boundary + '\"',\n            'Authorization': 'Bearer ' + accessToken\n          },\n          body: multipartRequestBody\n        }).then(function (response) {\n          var fileId = response.result.id;\n          resolve(fileId);\n        }).catch(function (error) {\n          reject(new Error('Failed to create image file: ' + error.result.error.message));\n        });\n      };\n      reader.readAsDataURL(blob);\n    }, 'image/jpeg');\n  });\n}\nexport { setDriveAccessToken, checkDriveFolder, listDriveGames, newGame, editGame, playGame, deleteGame, duplicateGame };","map":{"version":3,"names":["accessToken","listcontainer","document","querySelector","expandContainer","expandContainerUl","openWindows","appFolderID","setDriveAccessToken","token","checkDriveFolder","loopGamesFolder","Promise","resolve","reject","gapi","client","drive","files","list","q","fields","then","response","result","length","id","createFolder","folderId","catch","error","Error","message","listDriveGames","console","log","newGame","gameID","createEmptyJson","createEmptyImage","imageFileId","editGame","menuItemHTML","parentNode","getAttribute","url","closed","focus","window","open","style","display","setAttribute","playGame","deleteGame","gameName","children","innerHTML","confirm","request","delete","execute","res","duplicateGame","directoryId","get","duplicateFolderName","name","copyRequest","create","parents","copyRes","duplicatedDirectoryId","copyDirectoryContents","sourceDirectoryId","destinationDirectoryId","forEach","file","mimeType","duplicateSubdirectory","copy","getJson","originalGameJsonId","changeNameInJson","gameJsonId","newName","gameJsonContent","updatedJsonString","JSON","stringify","updateRequest","updateRes","sourceSubdirectoryId","destinationParentId","subdirectoryData","duplicatedSubdirectoryId","folderName","parent","path","method","headers","body","parse","localStorage","getItem","metadata","canvas","createElement","width","height","context","getContext","fillStyle","fillRect","toBlob","blob","reader","FileReader","onloadend","base64Data","split","boundary","delimiter","close_delim","multipartRequestBody","params","fileId","readAsDataURL"],"sources":["D:/xampp/htdocs/app/src/driveAPI.js"],"sourcesContent":["\r\n//driverAPI.js\r\n/* global gapi */\r\n\r\nlet accessToken;\r\nvar listcontainer = document.querySelector('.list ul');\r\nvar expandContainer = document.querySelector('.expand-container');\r\nvar expandContainerUl = document.querySelector('.expand-container ul');\r\nvar openWindows = {};\r\nvar appFolderID;\r\n\r\nfunction setDriveAccessToken(token) {\r\n  accessToken = token;\r\n}\r\n\r\nfunction checkDriveFolder(loopGamesFolder) {\r\n  return new Promise(function (resolve, reject) {\r\n    gapi.client.drive.files.list({\r\n      q: \"name ='\" + loopGamesFolder + \"' and trashed=false\",\r\n      fields: 'files(id,name,owners(displayName))'\r\n    }).then(function (response) {\r\n      var files = response.result.files;\r\n      if (files && files.length > 0) {\r\n        resolve(files[0].id);\r\n      } else {\r\n        createFolder(loopGamesFolder, 'root', accessToken).then(function (folderId) {\r\n          resolve(folderId);\r\n        }).catch(function (error) {\r\n          reject(new Error('Failed to create folder: ' + error.message));\r\n        });\r\n      }\r\n    }).catch(function (error) {\r\n      reject(new Error('Failed to list files: ' + error.message));\r\n    });\r\n  });\r\n}\r\n\r\nfunction listDriveGames(appFolderID) {\r\n  return new Promise((resolve, reject) => {\r\n    if (appFolderID) {\r\n      gapi.client.drive.files.list({\r\n        'q': `parents in \"${appFolderID}\"` // list user games\r\n      }).then(function (response) {\r\n        const files = response.result.files;\r\n        console.log(files);\r\n        resolve(files);\r\n      }).catch(function (error) {\r\n        reject(new Error('Error listing drive games: ' + error.message));\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\n// function expand(v) {\r\n//   var click_position = v.getBoundingClientRect();\r\n//   if (expandContainer.style.display === 'block') {\r\n//     expandContainer.style.display = 'none';\r\n//     expandContainerUl.setAttribute('data-id', '');\r\n//   } else {\r\n//     expandContainer.style.display = 'block';\r\n//     expandContainer.style.left = (click_position.left + window.scrollX) - 120 + 'px';\r\n//     expandContainer.style.top = (click_position.top + window.scrollY) + 25 + 'px';\r\n//     expandContainerUl.setAttribute('gameid', v.getAttribute('gameid'));\r\n//   }\r\n// }\r\n\r\nfunction newGame() {\r\n  var gameID;\r\n  createFolder(\"Untitled Game\", appFolderID).then(function (folderId) {\r\n    gameID = folderId;\r\n    createEmptyJson(gameID);\r\n    return createEmptyImage(gameID);\r\n  }).then(function (imageFileId) {\r\n    return createFolder(\"images\", gameID);\r\n  }).then(function () {\r\n    return createFolder(\"sounds\", gameID);\r\n  }).then(function () {\r\n    listDriveGames(appFolderID);\r\n  }).catch(function (error) {\r\n    console.error(\"Failed to create game:\", error);\r\n  });\r\n}\r\n\r\nfunction editGame(menuItemHTML) {\r\n  var gameID = menuItemHTML.parentNode.getAttribute(\"gameid\");\r\n  var url = \"editor/?id=\" + gameID;\r\n  if (openWindows[url] && !openWindows[url].closed) openWindows[url].focus();\r\n  else openWindows[url] = window.open(url, \"_blank\");\r\n  expandContainer.style.display = 'none';\r\n  expandContainerUl.setAttribute('gameid', '');\r\n}\r\n\r\n// function deleteMenu(event) {\r\n//   if (!(event.target.tagName === 'svg' || event.target.tagName === 'path') && event.target !== expandContainer) {\r\n//     expandContainer.style.display = 'none';\r\n//     expandContainerUl.setAttribute('gameid', '');\r\n//   }\r\n// }\r\n\r\nfunction playGame(menuItemHTML) {\r\n  var gameID = menuItemHTML.parentNode.getAttribute(\"gameid\");\r\n  var url = \"engine/?id=\" + gameID;\r\n  if (openWindows[url] && !openWindows[url].closed) openWindows[url].focus();\r\n  else openWindows[url] = window.open(url, \"_blank\");\r\n  expandContainer.style.display = 'none';\r\n  expandContainerUl.setAttribute('gameid', '');\r\n}\r\n\r\nfunction deleteGame(menuItemHTML) {\r\n  var gameID = menuItemHTML.parentNode.getAttribute(\"gameid\");\r\n  var gameName = document.querySelector('[gameid=\"' + gameID + '\"]').parentNode.children[0].innerHTML;\r\n  expandContainer.style.display = 'none';\r\n  expandContainerUl.setAttribute('gameid', '');\r\n  var result = window.confirm('Do you want to delete the \"' + gameName + '\" game ? ');\r\n  if (result) {\r\n    var request = gapi.client.drive.files.delete({\r\n      'fileId': gameID\r\n    });\r\n    request.execute(function (res) {\r\n      console.log('File Deleted');\r\n      listDriveGames(appFolderID);\r\n    })\r\n  } else {\r\n    console.log(\"Option selected: false\");\r\n  }\r\n}\r\n\r\nfunction duplicateGame(menuItemHTML) {\r\n  var directoryId = menuItemHTML.parentNode.getAttribute(\"gameid\");\r\n  var request = gapi.client.drive.files.get({\r\n    'fileId': directoryId,\r\n    'fields': 'name, parents'\r\n  });\r\n  request.execute(function (res) {\r\n    console.log('Game Folder Retrieved');\r\n    var duplicateFolderName = res.name + ' - Copy';\r\n    var copyRequest = gapi.client.drive.files.create({\r\n      'resource': {\r\n        'name': duplicateFolderName,\r\n        'mimeType': 'application/vnd.google-apps.folder',\r\n        'parents': res.parents\r\n      }\r\n    });\r\n    copyRequest.execute(function (copyRes) {\r\n      console.log('Game Folder Duplicated');\r\n      var duplicatedDirectoryId = copyRes.id;\r\n      copyDirectoryContents(directoryId, duplicatedDirectoryId, duplicateFolderName);\r\n      expandContainer.style.display = 'none';\r\n      expandContainerUl.setAttribute('gameid', '');\r\n      listDriveGames(appFolderID);\r\n    });\r\n  });\r\n}\r\n\r\nfunction copyDirectoryContents(sourceDirectoryId, destinationDirectoryId, duplicateFolderName) {\r\n  var request = gapi.client.drive.files.list({\r\n    'q': \"'\" + sourceDirectoryId + \"' in parents\",\r\n    'fields': 'files(id, name, mimeType)'\r\n  });\r\n  request.execute(function (res) {\r\n    var files = res.files;\r\n    files.forEach(function (file) {\r\n      if (file.mimeType === 'application/vnd.google-apps.folder') {\r\n        duplicateSubdirectory(file.id, destinationDirectoryId);\r\n      } else {\r\n        var copyRequest = gapi.client.drive.files.copy({\r\n          'fileId': file.id,\r\n          'parents': [destinationDirectoryId]\r\n        });\r\n        copyRequest.execute(function (copyRes) {\r\n          console.log('File Copied: ' + copyRes.name);\r\n          if (copyRes.name == \"game.json\") {\r\n            getJson(sourceDirectoryId)\r\n              .then(function (originalGameJsonId) {\r\n                console.log('ID del archivo game.json:', originalGameJsonId);\r\n                changeNameInJson(copyRes.id, originalGameJsonId, duplicateFolderName);\r\n              })\r\n              .catch(function (error) {\r\n                console.error(error);\r\n              });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction getJson(directoryId) {\r\n  var request = gapi.client.drive.files.list({\r\n    'q': \"name='game.json' and '\" + directoryId + \"' in parents\",\r\n    'fields': 'files(id)'\r\n  });\r\n\r\n  return new Promise(function (resolve, reject) {\r\n    request.execute(function (res) {\r\n      if (res.files.length > 0) {\r\n        var gameJsonId = res.files[0].id;\r\n        resolve(gameJsonId);\r\n      } else {\r\n        reject(new Error('No se encontr√≥ el archivo game.json en la carpeta original.'));\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction changeNameInJson(duplicatedDirectoryId, originalGameJsonId, newName) {\r\n  var request = gapi.client.drive.files.get({\r\n    'fileId': originalGameJsonId,\r\n    'alt': 'media'\r\n  });\r\n\r\n  request.execute(function (res) {\r\n    var gameJsonContent = res;\r\n    gameJsonContent.name = newName;\r\n\r\n    var updatedJsonString = JSON.stringify(gameJsonContent);\r\n\r\n    var updateRequest = gapi.client.request({\r\n      'path': '/upload/drive/v3/files/' + duplicatedDirectoryId,\r\n      'method': 'PATCH',\r\n      'params': {\r\n        'uploadType': 'media'\r\n      },\r\n      'headers': {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      'body': updatedJsonString\r\n    });\r\n\r\n    updateRequest.execute(function (updateRes) {\r\n      console.log('Nombre del juego duplicado actualizado: ' + newName);\r\n    });\r\n  });\r\n}\r\n\r\nfunction duplicateSubdirectory(sourceSubdirectoryId, destinationParentId) {\r\n  var request = gapi.client.drive.files.get({\r\n    'fileId': sourceSubdirectoryId,\r\n    'fields': 'name, parents'\r\n  });\r\n  request.execute(function (res) {\r\n    console.log('Subdirectory Retrieved');\r\n    var subdirectoryData = res;\r\n    var copyRequest = gapi.client.drive.files.create({\r\n      'resource': {\r\n        'name': subdirectoryData.name,\r\n        'mimeType': 'application/vnd.google-apps.folder',\r\n        'parents': [destinationParentId]\r\n      }\r\n    });\r\n    copyRequest.execute(function (copyRes) {\r\n      console.log('Subdirectory Duplicated');\r\n      var duplicatedSubdirectoryId = copyRes.id;\r\n      copyDirectoryContents(sourceSubdirectoryId, duplicatedSubdirectoryId);\r\n    });\r\n  });\r\n}\r\n\r\n\r\nfunction createFolder(folderName, parent) {\r\n  console.log(\"createFolder \", folderName, parent);\r\n  return new Promise(function (resolve, reject) {\r\n    var request = gapi.client.request({\r\n      path: '/drive/v3/files',\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + accessToken,\r\n      },\r\n      body: {\r\n        'name': folderName,\r\n        'mimeType': 'application/vnd.google-apps.folder',\r\n        'parents': [parent]\r\n      }\r\n    });\r\n    request.execute(function (response) {\r\n      if (response.error) {\r\n        reject(new Error('Failed to create folder: ' + response.error.message));\r\n      } else if (response.id) {\r\n        resolve(response.id);\r\n      } else {\r\n        reject(new Error('Failed to create folder.'));\r\n      }\r\n    });\r\n  });\r\n}\r\n// Exporta las funciones necesarias si es necesario\r\nfunction createEmptyJson(gameID) {\r\n  return new Promise(function (resolve, reject) {\r\n    var request = gapi.client.request({\r\n      path: '/drive/v3/files',\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + JSON.parse(localStorage.getItem(\"token\")).accessToken,\r\n      },\r\n      body: {\r\n        'name': 'game.json',\r\n        'mimeType': 'application/json',\r\n        'parents': [gameID]\r\n      }\r\n    });\r\n    request.execute(function (response) {\r\n      if (response.error) {\r\n        reject(new Error('Failed to create JSON file: ' + response.error.message));\r\n      } else if (response.id) {\r\n        resolve(response.id);\r\n      } else {\r\n        reject(new Error('Failed to create JSON file.'));\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction createEmptyImage(gameID) {\r\n  return new Promise(function (resolve, reject) {\r\n\r\n    var metadata = {\r\n      'name': 'image.jpg',\r\n      'parents': [gameID]\r\n    };\r\n    // Crear una imagen en blanco de 1x1 p√≠xeles\r\n    var canvas = document.createElement('canvas');\r\n    canvas.width = 1;\r\n    canvas.height = 1;\r\n    var context = canvas.getContext('2d');\r\n    context.fillStyle = '#ffffff'; // Color blanco\r\n    context.fillRect(0, 0, 1, 1);\r\n    canvas.toBlob(function (blob) {\r\n      var reader = new FileReader();\r\n      reader.onloadend = function () {\r\n        var base64Data = reader.result.split(',')[1];\r\n\r\n        var boundary = '-------314159265358979323846';\r\n        var delimiter = '\\r\\n--' + boundary + '\\r\\n';\r\n        var close_delim = '\\r\\n--' + boundary + '--';\r\n\r\n        var multipartRequestBody =\r\n          delimiter +\r\n          'Content-Type: application/json\\r\\n\\r\\n' +\r\n          JSON.stringify(metadata) +\r\n          delimiter +\r\n          'Content-Type: image/jpeg\\r\\n' +\r\n          'Content-Transfer-Encoding: base64\\r\\n' +\r\n          '\\r\\n' +\r\n          base64Data +\r\n          close_delim;\r\n\r\n        gapi.client.request({\r\n          path: '/upload/drive/v3/files',\r\n          method: 'POST',\r\n          params: {\r\n            'uploadType': 'multipart'\r\n          },\r\n          headers: {\r\n            'Content-Type': 'multipart/related; boundary=\"' + boundary + '\"',\r\n            'Authorization': 'Bearer ' + accessToken\r\n          },\r\n          body: multipartRequestBody\r\n        }).then(function (response) {\r\n          var fileId = response.result.id;\r\n          resolve(fileId);\r\n        }).catch(function (error) {\r\n          reject(new Error('Failed to create image file: ' + error.result.error.message));\r\n        });\r\n      };\r\n\r\n      reader.readAsDataURL(blob);\r\n    }, 'image/jpeg');\r\n  });\r\n}\r\n\r\nexport {\r\n  setDriveAccessToken,\r\n  checkDriveFolder,\r\n  listDriveGames,\r\n  newGame,\r\n  editGame,\r\n  playGame,\r\n  deleteGame,\r\n  duplicateGame\r\n};\r\n\r\n"],"mappings":"AACA;AACA;;AAEA,IAAIA,WAAW;AACf,IAAIC,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;AACtD,IAAIC,eAAe,GAAGF,QAAQ,CAACC,aAAa,CAAC,mBAAmB,CAAC;AACjE,IAAIE,iBAAiB,GAAGH,QAAQ,CAACC,aAAa,CAAC,sBAAsB,CAAC;AACtE,IAAIG,WAAW,GAAG,CAAC,CAAC;AACpB,IAAIC,WAAW;AAEf,SAASC,mBAAmBA,CAACC,KAAK,EAAE;EAClCT,WAAW,GAAGS,KAAK;AACrB;AAEA,SAASC,gBAAgBA,CAACC,eAAe,EAAE;EACzC,OAAO,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;IAC5CC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,KAAK,CAACC,IAAI,CAAC;MAC3BC,CAAC,EAAE,SAAS,GAAGT,eAAe,GAAG,qBAAqB;MACtDU,MAAM,EAAE;IACV,CAAC,CAAC,CAACC,IAAI,CAAC,UAAUC,QAAQ,EAAE;MAC1B,IAAIL,KAAK,GAAGK,QAAQ,CAACC,MAAM,CAACN,KAAK;MACjC,IAAIA,KAAK,IAAIA,KAAK,CAACO,MAAM,GAAG,CAAC,EAAE;QAC7BZ,OAAO,CAACK,KAAK,CAAC,CAAC,CAAC,CAACQ,EAAE,CAAC;MACtB,CAAC,MAAM;QACLC,YAAY,CAAChB,eAAe,EAAE,MAAM,EAAEX,WAAW,CAAC,CAACsB,IAAI,CAAC,UAAUM,QAAQ,EAAE;UAC1Ef,OAAO,CAACe,QAAQ,CAAC;QACnB,CAAC,CAAC,CAACC,KAAK,CAAC,UAAUC,KAAK,EAAE;UACxBhB,MAAM,CAAC,IAAIiB,KAAK,CAAC,2BAA2B,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC;QAChE,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,CAACH,KAAK,CAAC,UAAUC,KAAK,EAAE;MACxBhB,MAAM,CAAC,IAAIiB,KAAK,CAAC,wBAAwB,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC;IAC7D,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEA,SAASC,cAAcA,CAAC1B,WAAW,EAAE;EACnC,OAAO,IAAIK,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,IAAIP,WAAW,EAAE;MACfQ,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,KAAK,CAACC,IAAI,CAAC;QAC3B,GAAG,EAAG,eAAcZ,WAAY,GAAE,CAAC;MACrC,CAAC,CAAC,CAACe,IAAI,CAAC,UAAUC,QAAQ,EAAE;QAC1B,MAAML,KAAK,GAAGK,QAAQ,CAACC,MAAM,CAACN,KAAK;QACnCgB,OAAO,CAACC,GAAG,CAACjB,KAAK,CAAC;QAClBL,OAAO,CAACK,KAAK,CAAC;MAChB,CAAC,CAAC,CAACW,KAAK,CAAC,UAAUC,KAAK,EAAE;QACxBhB,MAAM,CAAC,IAAIiB,KAAK,CAAC,6BAA6B,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC;MAClE,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASI,OAAOA,CAAA,EAAG;EACjB,IAAIC,MAAM;EACVV,YAAY,CAAC,eAAe,EAAEpB,WAAW,CAAC,CAACe,IAAI,CAAC,UAAUM,QAAQ,EAAE;IAClES,MAAM,GAAGT,QAAQ;IACjBU,eAAe,CAACD,MAAM,CAAC;IACvB,OAAOE,gBAAgB,CAACF,MAAM,CAAC;EACjC,CAAC,CAAC,CAACf,IAAI,CAAC,UAAUkB,WAAW,EAAE;IAC7B,OAAOb,YAAY,CAAC,QAAQ,EAAEU,MAAM,CAAC;EACvC,CAAC,CAAC,CAACf,IAAI,CAAC,YAAY;IAClB,OAAOK,YAAY,CAAC,QAAQ,EAAEU,MAAM,CAAC;EACvC,CAAC,CAAC,CAACf,IAAI,CAAC,YAAY;IAClBW,cAAc,CAAC1B,WAAW,CAAC;EAC7B,CAAC,CAAC,CAACsB,KAAK,CAAC,UAAUC,KAAK,EAAE;IACxBI,OAAO,CAACJ,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;EAChD,CAAC,CAAC;AACJ;AAEA,SAASW,QAAQA,CAACC,YAAY,EAAE;EAC9B,IAAIL,MAAM,GAAGK,YAAY,CAACC,UAAU,CAACC,YAAY,CAAC,QAAQ,CAAC;EAC3D,IAAIC,GAAG,GAAG,aAAa,GAAGR,MAAM;EAChC,IAAI/B,WAAW,CAACuC,GAAG,CAAC,IAAI,CAACvC,WAAW,CAACuC,GAAG,CAAC,CAACC,MAAM,EAAExC,WAAW,CAACuC,GAAG,CAAC,CAACE,KAAK,CAAC,CAAC,CAAC,KACtEzC,WAAW,CAACuC,GAAG,CAAC,GAAGG,MAAM,CAACC,IAAI,CAACJ,GAAG,EAAE,QAAQ,CAAC;EAClDzC,eAAe,CAAC8C,KAAK,CAACC,OAAO,GAAG,MAAM;EACtC9C,iBAAiB,CAAC+C,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAQA,CAACX,YAAY,EAAE;EAC9B,IAAIL,MAAM,GAAGK,YAAY,CAACC,UAAU,CAACC,YAAY,CAAC,QAAQ,CAAC;EAC3D,IAAIC,GAAG,GAAG,aAAa,GAAGR,MAAM;EAChC,IAAI/B,WAAW,CAACuC,GAAG,CAAC,IAAI,CAACvC,WAAW,CAACuC,GAAG,CAAC,CAACC,MAAM,EAAExC,WAAW,CAACuC,GAAG,CAAC,CAACE,KAAK,CAAC,CAAC,CAAC,KACtEzC,WAAW,CAACuC,GAAG,CAAC,GAAGG,MAAM,CAACC,IAAI,CAACJ,GAAG,EAAE,QAAQ,CAAC;EAClDzC,eAAe,CAAC8C,KAAK,CAACC,OAAO,GAAG,MAAM;EACtC9C,iBAAiB,CAAC+C,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC;AAC9C;AAEA,SAASE,UAAUA,CAACZ,YAAY,EAAE;EAChC,IAAIL,MAAM,GAAGK,YAAY,CAACC,UAAU,CAACC,YAAY,CAAC,QAAQ,CAAC;EAC3D,IAAIW,QAAQ,GAAGrD,QAAQ,CAACC,aAAa,CAAC,WAAW,GAAGkC,MAAM,GAAG,IAAI,CAAC,CAACM,UAAU,CAACa,QAAQ,CAAC,CAAC,CAAC,CAACC,SAAS;EACnGrD,eAAe,CAAC8C,KAAK,CAACC,OAAO,GAAG,MAAM;EACtC9C,iBAAiB,CAAC+C,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC;EAC5C,IAAI5B,MAAM,GAAGwB,MAAM,CAACU,OAAO,CAAC,6BAA6B,GAAGH,QAAQ,GAAG,WAAW,CAAC;EACnF,IAAI/B,MAAM,EAAE;IACV,IAAImC,OAAO,GAAG5C,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,KAAK,CAAC0C,MAAM,CAAC;MAC3C,QAAQ,EAAEvB;IACZ,CAAC,CAAC;IACFsB,OAAO,CAACE,OAAO,CAAC,UAAUC,GAAG,EAAE;MAC7B5B,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3BF,cAAc,CAAC1B,WAAW,CAAC;IAC7B,CAAC,CAAC;EACJ,CAAC,MAAM;IACL2B,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACvC;AACF;AAEA,SAAS4B,aAAaA,CAACrB,YAAY,EAAE;EACnC,IAAIsB,WAAW,GAAGtB,YAAY,CAACC,UAAU,CAACC,YAAY,CAAC,QAAQ,CAAC;EAChE,IAAIe,OAAO,GAAG5C,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,KAAK,CAAC+C,GAAG,CAAC;IACxC,QAAQ,EAAED,WAAW;IACrB,QAAQ,EAAE;EACZ,CAAC,CAAC;EACFL,OAAO,CAACE,OAAO,CAAC,UAAUC,GAAG,EAAE;IAC7B5B,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,IAAI+B,mBAAmB,GAAGJ,GAAG,CAACK,IAAI,GAAG,SAAS;IAC9C,IAAIC,WAAW,GAAGrD,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,KAAK,CAACmD,MAAM,CAAC;MAC/C,UAAU,EAAE;QACV,MAAM,EAAEH,mBAAmB;QAC3B,UAAU,EAAE,oCAAoC;QAChD,SAAS,EAAEJ,GAAG,CAACQ;MACjB;IACF,CAAC,CAAC;IACFF,WAAW,CAACP,OAAO,CAAC,UAAUU,OAAO,EAAE;MACrCrC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC,IAAIqC,qBAAqB,GAAGD,OAAO,CAAC7C,EAAE;MACtC+C,qBAAqB,CAACT,WAAW,EAAEQ,qBAAqB,EAAEN,mBAAmB,CAAC;MAC9E9D,eAAe,CAAC8C,KAAK,CAACC,OAAO,GAAG,MAAM;MACtC9C,iBAAiB,CAAC+C,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC;MAC5CnB,cAAc,CAAC1B,WAAW,CAAC;IAC7B,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEA,SAASkE,qBAAqBA,CAACC,iBAAiB,EAAEC,sBAAsB,EAAET,mBAAmB,EAAE;EAC7F,IAAIP,OAAO,GAAG5C,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,KAAK,CAACC,IAAI,CAAC;IACzC,GAAG,EAAE,GAAG,GAAGuD,iBAAiB,GAAG,cAAc;IAC7C,QAAQ,EAAE;EACZ,CAAC,CAAC;EACFf,OAAO,CAACE,OAAO,CAAC,UAAUC,GAAG,EAAE;IAC7B,IAAI5C,KAAK,GAAG4C,GAAG,CAAC5C,KAAK;IACrBA,KAAK,CAAC0D,OAAO,CAAC,UAAUC,IAAI,EAAE;MAC5B,IAAIA,IAAI,CAACC,QAAQ,KAAK,oCAAoC,EAAE;QAC1DC,qBAAqB,CAACF,IAAI,CAACnD,EAAE,EAAEiD,sBAAsB,CAAC;MACxD,CAAC,MAAM;QACL,IAAIP,WAAW,GAAGrD,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,KAAK,CAAC8D,IAAI,CAAC;UAC7C,QAAQ,EAAEH,IAAI,CAACnD,EAAE;UACjB,SAAS,EAAE,CAACiD,sBAAsB;QACpC,CAAC,CAAC;QACFP,WAAW,CAACP,OAAO,CAAC,UAAUU,OAAO,EAAE;UACrCrC,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGoC,OAAO,CAACJ,IAAI,CAAC;UAC3C,IAAII,OAAO,CAACJ,IAAI,IAAI,WAAW,EAAE;YAC/Bc,OAAO,CAACP,iBAAiB,CAAC,CACvBpD,IAAI,CAAC,UAAU4D,kBAAkB,EAAE;cAClChD,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE+C,kBAAkB,CAAC;cAC5DC,gBAAgB,CAACZ,OAAO,CAAC7C,EAAE,EAAEwD,kBAAkB,EAAEhB,mBAAmB,CAAC;YACvE,CAAC,CAAC,CACDrC,KAAK,CAAC,UAAUC,KAAK,EAAE;cACtBI,OAAO,CAACJ,KAAK,CAACA,KAAK,CAAC;YACtB,CAAC,CAAC;UACN;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEA,SAASmD,OAAOA,CAACjB,WAAW,EAAE;EAC5B,IAAIL,OAAO,GAAG5C,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,KAAK,CAACC,IAAI,CAAC;IACzC,GAAG,EAAE,wBAAwB,GAAG6C,WAAW,GAAG,cAAc;IAC5D,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,OAAO,IAAIpD,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;IAC5C6C,OAAO,CAACE,OAAO,CAAC,UAAUC,GAAG,EAAE;MAC7B,IAAIA,GAAG,CAAC5C,KAAK,CAACO,MAAM,GAAG,CAAC,EAAE;QACxB,IAAI2D,UAAU,GAAGtB,GAAG,CAAC5C,KAAK,CAAC,CAAC,CAAC,CAACQ,EAAE;QAChCb,OAAO,CAACuE,UAAU,CAAC;MACrB,CAAC,MAAM;QACLtE,MAAM,CAAC,IAAIiB,KAAK,CAAC,6DAA6D,CAAC,CAAC;MAClF;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEA,SAASoD,gBAAgBA,CAACX,qBAAqB,EAAEU,kBAAkB,EAAEG,OAAO,EAAE;EAC5E,IAAI1B,OAAO,GAAG5C,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,KAAK,CAAC+C,GAAG,CAAC;IACxC,QAAQ,EAAEiB,kBAAkB;IAC5B,KAAK,EAAE;EACT,CAAC,CAAC;EAEFvB,OAAO,CAACE,OAAO,CAAC,UAAUC,GAAG,EAAE;IAC7B,IAAIwB,eAAe,GAAGxB,GAAG;IACzBwB,eAAe,CAACnB,IAAI,GAAGkB,OAAO;IAE9B,IAAIE,iBAAiB,GAAGC,IAAI,CAACC,SAAS,CAACH,eAAe,CAAC;IAEvD,IAAII,aAAa,GAAG3E,IAAI,CAACC,MAAM,CAAC2C,OAAO,CAAC;MACtC,MAAM,EAAE,yBAAyB,GAAGa,qBAAqB;MACzD,QAAQ,EAAE,OAAO;MACjB,QAAQ,EAAE;QACR,YAAY,EAAE;MAChB,CAAC;MACD,SAAS,EAAE;QACT,cAAc,EAAE;MAClB,CAAC;MACD,MAAM,EAAEe;IACV,CAAC,CAAC;IAEFG,aAAa,CAAC7B,OAAO,CAAC,UAAU8B,SAAS,EAAE;MACzCzD,OAAO,CAACC,GAAG,CAAC,0CAA0C,GAAGkD,OAAO,CAAC;IACnE,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEA,SAASN,qBAAqBA,CAACa,oBAAoB,EAAEC,mBAAmB,EAAE;EACxE,IAAIlC,OAAO,GAAG5C,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,KAAK,CAAC+C,GAAG,CAAC;IACxC,QAAQ,EAAE2B,oBAAoB;IAC9B,QAAQ,EAAE;EACZ,CAAC,CAAC;EACFjC,OAAO,CAACE,OAAO,CAAC,UAAUC,GAAG,EAAE;IAC7B5B,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrC,IAAI2D,gBAAgB,GAAGhC,GAAG;IAC1B,IAAIM,WAAW,GAAGrD,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,KAAK,CAACmD,MAAM,CAAC;MAC/C,UAAU,EAAE;QACV,MAAM,EAAEyB,gBAAgB,CAAC3B,IAAI;QAC7B,UAAU,EAAE,oCAAoC;QAChD,SAAS,EAAE,CAAC0B,mBAAmB;MACjC;IACF,CAAC,CAAC;IACFzB,WAAW,CAACP,OAAO,CAAC,UAAUU,OAAO,EAAE;MACrCrC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtC,IAAI4D,wBAAwB,GAAGxB,OAAO,CAAC7C,EAAE;MACzC+C,qBAAqB,CAACmB,oBAAoB,EAAEG,wBAAwB,CAAC;IACvE,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAGA,SAASpE,YAAYA,CAACqE,UAAU,EAAEC,MAAM,EAAE;EACxC/D,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE6D,UAAU,EAAEC,MAAM,CAAC;EAChD,OAAO,IAAIrF,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;IAC5C,IAAI6C,OAAO,GAAG5C,IAAI,CAACC,MAAM,CAAC2C,OAAO,CAAC;MAChCuC,IAAI,EAAE,iBAAiB;MACvBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAAS,GAAGpG;MAC/B,CAAC;MACDqG,IAAI,EAAE;QACJ,MAAM,EAAEL,UAAU;QAClB,UAAU,EAAE,oCAAoC;QAChD,SAAS,EAAE,CAACC,MAAM;MACpB;IACF,CAAC,CAAC;IACFtC,OAAO,CAACE,OAAO,CAAC,UAAUtC,QAAQ,EAAE;MAClC,IAAIA,QAAQ,CAACO,KAAK,EAAE;QAClBhB,MAAM,CAAC,IAAIiB,KAAK,CAAC,2BAA2B,GAAGR,QAAQ,CAACO,KAAK,CAACE,OAAO,CAAC,CAAC;MACzE,CAAC,MAAM,IAAIT,QAAQ,CAACG,EAAE,EAAE;QACtBb,OAAO,CAACU,QAAQ,CAACG,EAAE,CAAC;MACtB,CAAC,MAAM;QACLZ,MAAM,CAAC,IAAIiB,KAAK,CAAC,0BAA0B,CAAC,CAAC;MAC/C;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AACA;AACA,SAASO,eAAeA,CAACD,MAAM,EAAE;EAC/B,OAAO,IAAIzB,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;IAC5C,IAAI6C,OAAO,GAAG5C,IAAI,CAACC,MAAM,CAAC2C,OAAO,CAAC;MAChCuC,IAAI,EAAE,iBAAiB;MACvBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAAS,GAAGZ,IAAI,CAACc,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAACxG;MACzE,CAAC;MACDqG,IAAI,EAAE;QACJ,MAAM,EAAE,WAAW;QACnB,UAAU,EAAE,kBAAkB;QAC9B,SAAS,EAAE,CAAChE,MAAM;MACpB;IACF,CAAC,CAAC;IACFsB,OAAO,CAACE,OAAO,CAAC,UAAUtC,QAAQ,EAAE;MAClC,IAAIA,QAAQ,CAACO,KAAK,EAAE;QAClBhB,MAAM,CAAC,IAAIiB,KAAK,CAAC,8BAA8B,GAAGR,QAAQ,CAACO,KAAK,CAACE,OAAO,CAAC,CAAC;MAC5E,CAAC,MAAM,IAAIT,QAAQ,CAACG,EAAE,EAAE;QACtBb,OAAO,CAACU,QAAQ,CAACG,EAAE,CAAC;MACtB,CAAC,MAAM;QACLZ,MAAM,CAAC,IAAIiB,KAAK,CAAC,6BAA6B,CAAC,CAAC;MAClD;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEA,SAASQ,gBAAgBA,CAACF,MAAM,EAAE;EAChC,OAAO,IAAIzB,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;IAE5C,IAAI2F,QAAQ,GAAG;MACb,MAAM,EAAE,WAAW;MACnB,SAAS,EAAE,CAACpE,MAAM;IACpB,CAAC;IACD;IACA,IAAIqE,MAAM,GAAGxG,QAAQ,CAACyG,aAAa,CAAC,QAAQ,CAAC;IAC7CD,MAAM,CAACE,KAAK,GAAG,CAAC;IAChBF,MAAM,CAACG,MAAM,GAAG,CAAC;IACjB,IAAIC,OAAO,GAAGJ,MAAM,CAACK,UAAU,CAAC,IAAI,CAAC;IACrCD,OAAO,CAACE,SAAS,GAAG,SAAS,CAAC,CAAC;IAC/BF,OAAO,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC5BP,MAAM,CAACQ,MAAM,CAAC,UAAUC,IAAI,EAAE;MAC5B,IAAIC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC7BD,MAAM,CAACE,SAAS,GAAG,YAAY;QAC7B,IAAIC,UAAU,GAAGH,MAAM,CAAC5F,MAAM,CAACgG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAE5C,IAAIC,QAAQ,GAAG,8BAA8B;QAC7C,IAAIC,SAAS,GAAG,QAAQ,GAAGD,QAAQ,GAAG,MAAM;QAC5C,IAAIE,WAAW,GAAG,QAAQ,GAAGF,QAAQ,GAAG,IAAI;QAE5C,IAAIG,oBAAoB,GACtBF,SAAS,GACT,wCAAwC,GACxClC,IAAI,CAACC,SAAS,CAACgB,QAAQ,CAAC,GACxBiB,SAAS,GACT,8BAA8B,GAC9B,uCAAuC,GACvC,MAAM,GACNH,UAAU,GACVI,WAAW;QAEb5G,IAAI,CAACC,MAAM,CAAC2C,OAAO,CAAC;UAClBuC,IAAI,EAAE,wBAAwB;UAC9BC,MAAM,EAAE,MAAM;UACd0B,MAAM,EAAE;YACN,YAAY,EAAE;UAChB,CAAC;UACDzB,OAAO,EAAE;YACP,cAAc,EAAE,+BAA+B,GAAGqB,QAAQ,GAAG,GAAG;YAChE,eAAe,EAAE,SAAS,GAAGzH;UAC/B,CAAC;UACDqG,IAAI,EAAEuB;QACR,CAAC,CAAC,CAACtG,IAAI,CAAC,UAAUC,QAAQ,EAAE;UAC1B,IAAIuG,MAAM,GAAGvG,QAAQ,CAACC,MAAM,CAACE,EAAE;UAC/Bb,OAAO,CAACiH,MAAM,CAAC;QACjB,CAAC,CAAC,CAACjG,KAAK,CAAC,UAAUC,KAAK,EAAE;UACxBhB,MAAM,CAAC,IAAIiB,KAAK,CAAC,+BAA+B,GAAGD,KAAK,CAACN,MAAM,CAACM,KAAK,CAACE,OAAO,CAAC,CAAC;QACjF,CAAC,CAAC;MACJ,CAAC;MAEDoF,MAAM,CAACW,aAAa,CAACZ,IAAI,CAAC;IAC5B,CAAC,EAAE,YAAY,CAAC;EAClB,CAAC,CAAC;AACJ;AAEA,SACE3G,mBAAmB,EACnBE,gBAAgB,EAChBuB,cAAc,EACdG,OAAO,EACPK,QAAQ,EACRY,QAAQ,EACRC,UAAU,EACVS,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}