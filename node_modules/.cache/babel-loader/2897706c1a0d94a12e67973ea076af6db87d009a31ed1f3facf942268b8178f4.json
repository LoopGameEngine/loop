{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = \"129246923501-4lk4rkmhin21kcaoul91k300s9ar9n1t.apps.googleusercontent.com\";\nconst SCOPES = \"https://www.googleapis.com/auth/drive\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState({});\n  const [tokenClient, setTokenClient] = useState({});\n  function handleCallbackResponse(response) {\n    console.log(response.credential);\n    var userObject = jwtDecode(response.credential);\n    console.log(userObject);\n    setUser(userObject);\n    document.getElementById('signInDiv').hidden = true;\n  }\n  function handleSignOut(event) {\n    setUser({});\n    document.getElementById('signInDiv').hidden = false;\n  }\n  function createDriveFile() {\n    tokenClient.requestAccessToken();\n  }\n  useEffect(() => {\n    /* global google */\n    const google = window.google;\n    google.accounts.id.initialize({\n      client_id: CLIENT_ID,\n      callback: handleCallbackResponse\n    });\n    google.accounts.id.renderButton(document.getElementById(\"signInDiv\"), {\n      theme: \"outline\",\n      size: \"large\"\n    });\n\n    // Access Tokens\n    setTokenClient(google.accounts.oauth2.initTokenClient({\n      client_id: CLIENT_ID,\n      scope: SCOPES,\n      callback: tokenResponse => {\n        console.log(tokenResponse);\n        if (tokenResponse && tokenResponse.access_token) {\n          fetch(\"https://www.googleapis.com/drive/v3/files\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${tokenResponse.access_token}`\n            },\n            body: JSON.stringify({\n              \"name\": \"loop test\",\n              \"mimeType\": \"text/plain\"\n            })\n          }); // gapi\n        }\n        // we now have access to a live token to use for GOOGLE DRIVE API\n      }\n    }));\n    // tokenClient.requestAccessTokn();\n    google.accounts.id.prompt();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"signInDiv\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), Object.keys(user).length != 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => handleSignOut(e),\n      children: \"Sign Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.picture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: user.given_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: createDriveFile,\n        value: \"Create File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RZAf3xTeIHTm71D6YjOF5XpYB2Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jwtDecode","jsxDEV","_jsxDEV","CLIENT_ID","SCOPES","App","_s","user","setUser","tokenClient","setTokenClient","handleCallbackResponse","response","console","log","credential","userObject","document","getElementById","hidden","handleSignOut","event","createDriveFile","requestAccessToken","google","window","accounts","id","initialize","client_id","callback","renderButton","theme","size","oauth2","initTokenClient","scope","tokenResponse","access_token","fetch","method","headers","body","JSON","stringify","prompt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","onClick","e","src","picture","given_name","type","value","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/app/src/App.js"],"sourcesContent":["import './App.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nconst CLIENT_ID = \"129246923501-4lk4rkmhin21kcaoul91k300s9ar9n1t.apps.googleusercontent.com\";\r\nconst SCOPES = \"https://www.googleapis.com/auth/drive\";\r\n\r\nfunction App() {\r\n\r\n  const [user, setUser] = useState({});\r\n  const [tokenClient, setTokenClient] = useState({});\r\n\r\n  function handleCallbackResponse(response) {\r\n    console.log(response.credential);\r\n    var userObject = jwtDecode(response.credential);\r\n    console.log(userObject);\r\n    setUser(userObject);\r\n    document.getElementById('signInDiv').hidden = true;\r\n  }\r\n\r\n  function handleSignOut(event) {\r\n    setUser({});\r\n    document.getElementById('signInDiv').hidden = false;\r\n  }\r\n\r\n  function createDriveFile() {\r\n    tokenClient.requestAccessToken();\r\n  }\r\n\r\n  useEffect(() => {\r\n    /* global google */\r\n    const google = window.google;\r\n    google.accounts.id.initialize({\r\n      client_id: CLIENT_ID,\r\n      callback: handleCallbackResponse\r\n    });\r\n\r\n    google.accounts.id.renderButton(\r\n      document.getElementById(\"signInDiv\"),\r\n      { theme: \"outline\", size: \"large\" }\r\n    );\r\n\r\n    // Access Tokens\r\n    setTokenClient(\r\n      google.accounts.oauth2.initTokenClient({\r\n        client_id: CLIENT_ID,\r\n        scope: SCOPES,\r\n        callback: (tokenResponse) => {\r\n          console.log(tokenResponse);\r\n          if (tokenResponse && tokenResponse.access_token) {\r\n            fetch(\"https://www.googleapis.com/drive/v3/files\", {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${tokenResponse.access_token}`\r\n              },\r\n              body: JSON.stringify({ \"name\": \"loop test\", \"mimeType\": \"text/plain\" })\r\n            }\r\n            ); // gapi\r\n          }\r\n          // we now have access to a live token to use for GOOGLE DRIVE API\r\n        }\r\n      })\r\n    );\r\n    // tokenClient.requestAccessTokn();\r\n    google.accounts.id.prompt();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div id=\"signInDiv\"></div>\r\n      {Object.keys(user).length != 0 &&\r\n        <button onClick={(e) => handleSignOut(e)}>Sign Out</button>\r\n      }\r\n      {user &&\r\n        <div>\r\n          <img src={user.picture}></img>\r\n          <h3>{user.given_name}</h3>\r\n          <input type='submit' onClick={createDriveFile} value=\"Create File\" />\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAG,0EAA0E;AAC5F,MAAMC,MAAM,GAAG,uCAAuC;AAEtD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElD,SAASY,sBAAsBA,CAACC,QAAQ,EAAE;IACxCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,UAAU,CAAC;IAChC,IAAIC,UAAU,GAAGhB,SAAS,CAACY,QAAQ,CAACG,UAAU,CAAC;IAC/CF,OAAO,CAACC,GAAG,CAACE,UAAU,CAAC;IACvBR,OAAO,CAACQ,UAAU,CAAC;IACnBC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,MAAM,GAAG,IAAI;EACpD;EAEA,SAASC,aAAaA,CAACC,KAAK,EAAE;IAC5Bb,OAAO,CAAC,CAAC,CAAC,CAAC;IACXS,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,MAAM,GAAG,KAAK;EACrD;EAEA,SAASG,eAAeA,CAAA,EAAG;IACzBb,WAAW,CAACc,kBAAkB,CAAC,CAAC;EAClC;EAEAzB,SAAS,CAAC,MAAM;IACd;IACA,MAAM0B,MAAM,GAAGC,MAAM,CAACD,MAAM;IAC5BA,MAAM,CAACE,QAAQ,CAACC,EAAE,CAACC,UAAU,CAAC;MAC5BC,SAAS,EAAE1B,SAAS;MACpB2B,QAAQ,EAAEnB;IACZ,CAAC,CAAC;IAEFa,MAAM,CAACE,QAAQ,CAACC,EAAE,CAACI,YAAY,CAC7Bd,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,EACpC;MAAEc,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAQ,CACpC,CAAC;;IAED;IACAvB,cAAc,CACZc,MAAM,CAACE,QAAQ,CAACQ,MAAM,CAACC,eAAe,CAAC;MACrCN,SAAS,EAAE1B,SAAS;MACpBiC,KAAK,EAAEhC,MAAM;MACb0B,QAAQ,EAAGO,aAAa,IAAK;QAC3BxB,OAAO,CAACC,GAAG,CAACuB,aAAa,CAAC;QAC1B,IAAIA,aAAa,IAAIA,aAAa,CAACC,YAAY,EAAE;UAC/CC,KAAK,CAAC,2CAA2C,EAAE;YACjDC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE,kBAAkB;cAClC,eAAe,EAAG,UAASJ,aAAa,CAACC,YAAa;YACxD,CAAC;YACDI,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAE,MAAM,EAAE,WAAW;cAAE,UAAU,EAAE;YAAa,CAAC;UACxE,CACA,CAAC,CAAC,CAAC;QACL;QACA;MACF;IACF,CAAC,CACH,CAAC;IACD;IACApB,MAAM,CAACE,QAAQ,CAACC,EAAE,CAACkB,MAAM,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE3C,OAAA;IAAK4C,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB7C,OAAA;MAAKyB,EAAE,EAAC;IAAW;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACzBC,MAAM,CAACC,IAAI,CAAC9C,IAAI,CAAC,CAAC+C,MAAM,IAAI,CAAC,iBAC5BpD,OAAA;MAAQqD,OAAO,EAAGC,CAAC,IAAKpC,aAAa,CAACoC,CAAC,CAAE;MAAAT,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE5D5C,IAAI,iBACHL,OAAA;MAAA6C,QAAA,gBACE7C,OAAA;QAAKuD,GAAG,EAAElD,IAAI,CAACmD;MAAQ;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC9BjD,OAAA;QAAA6C,QAAA,EAAKxC,IAAI,CAACoD;MAAU;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1BjD,OAAA;QAAO0D,IAAI,EAAC,QAAQ;QAACL,OAAO,EAAEjC,eAAgB;QAACuC,KAAK,EAAC;MAAa;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEV;AAAC7C,EAAA,CA5EQD,GAAG;AAAAyD,EAAA,GAAHzD,GAAG;AA8EZ,eAAeA,GAAG;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}