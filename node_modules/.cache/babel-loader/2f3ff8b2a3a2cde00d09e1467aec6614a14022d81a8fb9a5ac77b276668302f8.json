{"ast":null,"code":"'use strict';\n\nvar through2 = require('through2');\nvar fs = require('graceful-fs');\nvar File = require('vinyl');\nfunction wrapWithVinylFile(options) {\n  // A stat property is exposed on file objects as a (wanted) side effect\n  function resolveFile(globFile, enc, cb) {\n    fs.lstat(globFile.path, function (err, stat) {\n      if (err) {\n        return cb(err);\n      }\n      globFile.stat = stat;\n      if (!stat.isSymbolicLink() || !options.followSymlinks) {\n        var vinylFile = new File(globFile);\n        if (globFile.originalSymlinkPath) {\n          // If we reach here, it means there is at least one\n          // symlink on the path and we need to rewrite the path\n          // to its original value.\n          // Updated file stats will tell getContents() to actually read it.\n          vinylFile.path = globFile.originalSymlinkPath;\n        }\n        return cb(null, vinylFile);\n      }\n      fs.realpath(globFile.path, function (err, filePath) {\n        if (err) {\n          return cb(err);\n        }\n        if (!globFile.originalSymlinkPath) {\n          // Store the original symlink path before the recursive call\n          // to later rewrite it back.\n          globFile.originalSymlinkPath = globFile.path;\n        }\n        globFile.path = filePath;\n\n        // Recurse to get real file stat\n        resolveFile(globFile, enc, cb);\n      });\n    });\n  }\n  return through2.obj(options, resolveFile);\n}\nmodule.exports = wrapWithVinylFile;","map":{"version":3,"names":["through2","require","fs","File","wrapWithVinylFile","options","resolveFile","globFile","enc","cb","lstat","path","err","stat","isSymbolicLink","followSymlinks","vinylFile","originalSymlinkPath","realpath","filePath","obj","module","exports"],"sources":["D:/xampp/htdocs/app/node_modules/vinyl-fs/lib/src/wrapWithVinylFile.js"],"sourcesContent":["'use strict';\n\nvar through2 = require('through2');\nvar fs = require('graceful-fs');\nvar File = require('vinyl');\n\nfunction wrapWithVinylFile(options) {\n\n  // A stat property is exposed on file objects as a (wanted) side effect\n  function resolveFile(globFile, enc, cb) {\n    fs.lstat(globFile.path, function(err, stat) {\n      if (err) {\n        return cb(err);\n      }\n\n      globFile.stat = stat;\n\n      if (!stat.isSymbolicLink() || !options.followSymlinks) {\n        var vinylFile = new File(globFile);\n        if (globFile.originalSymlinkPath) {\n          // If we reach here, it means there is at least one\n          // symlink on the path and we need to rewrite the path\n          // to its original value.\n          // Updated file stats will tell getContents() to actually read it.\n          vinylFile.path = globFile.originalSymlinkPath;\n        }\n        return cb(null, vinylFile);\n      }\n\n      fs.realpath(globFile.path, function(err, filePath) {\n        if (err) {\n          return cb(err);\n        }\n\n        if (!globFile.originalSymlinkPath) {\n          // Store the original symlink path before the recursive call\n          // to later rewrite it back.\n          globFile.originalSymlinkPath = globFile.path;\n        }\n        globFile.path = filePath;\n\n        // Recurse to get real file stat\n        resolveFile(globFile, enc, cb);\n      });\n    });\n  }\n\n  return through2.obj(options, resolveFile);\n}\n\nmodule.exports = wrapWithVinylFile;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,IAAIC,EAAE,GAAGD,OAAO,CAAC,aAAa,CAAC;AAC/B,IAAIE,IAAI,GAAGF,OAAO,CAAC,OAAO,CAAC;AAE3B,SAASG,iBAAiBA,CAACC,OAAO,EAAE;EAElC;EACA,SAASC,WAAWA,CAACC,QAAQ,EAAEC,GAAG,EAAEC,EAAE,EAAE;IACtCP,EAAE,CAACQ,KAAK,CAACH,QAAQ,CAACI,IAAI,EAAE,UAASC,GAAG,EAAEC,IAAI,EAAE;MAC1C,IAAID,GAAG,EAAE;QACP,OAAOH,EAAE,CAACG,GAAG,CAAC;MAChB;MAEAL,QAAQ,CAACM,IAAI,GAAGA,IAAI;MAEpB,IAAI,CAACA,IAAI,CAACC,cAAc,CAAC,CAAC,IAAI,CAACT,OAAO,CAACU,cAAc,EAAE;QACrD,IAAIC,SAAS,GAAG,IAAIb,IAAI,CAACI,QAAQ,CAAC;QAClC,IAAIA,QAAQ,CAACU,mBAAmB,EAAE;UAChC;UACA;UACA;UACA;UACAD,SAAS,CAACL,IAAI,GAAGJ,QAAQ,CAACU,mBAAmB;QAC/C;QACA,OAAOR,EAAE,CAAC,IAAI,EAAEO,SAAS,CAAC;MAC5B;MAEAd,EAAE,CAACgB,QAAQ,CAACX,QAAQ,CAACI,IAAI,EAAE,UAASC,GAAG,EAAEO,QAAQ,EAAE;QACjD,IAAIP,GAAG,EAAE;UACP,OAAOH,EAAE,CAACG,GAAG,CAAC;QAChB;QAEA,IAAI,CAACL,QAAQ,CAACU,mBAAmB,EAAE;UACjC;UACA;UACAV,QAAQ,CAACU,mBAAmB,GAAGV,QAAQ,CAACI,IAAI;QAC9C;QACAJ,QAAQ,CAACI,IAAI,GAAGQ,QAAQ;;QAExB;QACAb,WAAW,CAACC,QAAQ,EAAEC,GAAG,EAAEC,EAAE,CAAC;MAChC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,OAAOT,QAAQ,CAACoB,GAAG,CAACf,OAAO,EAAEC,WAAW,CAAC;AAC3C;AAEAe,MAAM,CAACC,OAAO,GAAGlB,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}