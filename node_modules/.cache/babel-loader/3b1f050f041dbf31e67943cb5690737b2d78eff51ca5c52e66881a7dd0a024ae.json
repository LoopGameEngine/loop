{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\app\\\\src\\\\pages\\\\Games.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { folderExists, createFolder, listDriveGames, newGame, duplicateGame, deleteGame } from '../driveAPI';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport AddIcon from '@mui/icons-material/Add';\nimport GameCard from '../components/GameCard';\nimport { useAppContext } from '../AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Games = () => {\n  _s();\n  const {\n    token,\n    setGameID\n  } = useAppContext();\n  const [appFolderID, setAppFolderID] = useState([]);\n  const [gameList, setGameList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const initDrive = async () => {\n      try {\n        setLoading(true);\n        let folderID = await folderExists(\"Loop Games\");\n        if (!folderID) folderID = await createFolder(\"Loop Games\", 'root', token === null || token === void 0 ? void 0 : token.access_token);\n        setAppFolderID(folderID);\n        const gameList = await listDriveGames(folderID);\n        setGameList(gameList);\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initDrive();\n  }, [token]);\n  const handleNewGame = async () => {\n    try {\n      setLoading(true);\n      const createdGameID = await newGame(appFolderID, token.access_token);\n      const updatedgameList = await listDriveGames(appFolderID);\n      setGameList(updatedgameList);\n      setGameID(createdGameID); // Selecciona el nuevo juego después de crearlo\n    } catch (error) {\n      console.error('Error creating new game:', error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEditGame = async gameID => {\n    setGameID(gameID); // Selecciona el juego al que se le hizo clic\n    navigate(`/editor/${gameID}`);\n  };\n  const handleDuplicateGame = async gameID => {\n    try {\n      setLoading(true);\n      await duplicateGame(gameID);\n      const updatedgameList = await listDriveGames(appFolderID);\n      setGameList(updatedgameList);\n    } catch (error) {\n      console.error('Error duplicating game:', error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteGame = async (gameID, gameName) => {\n    try {\n      setLoading(true);\n      await deleteGame(gameID, gameName);\n      const updatedgameList = await listDriveGames(appFolderID);\n      setGameList(updatedgameList);\n      setGameID(null); // Limpiar gameID al eliminar un juego\n    } catch (error) {\n      console.error('Error deleting game:', error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          width: '100%',\n          height: 'calc(100% - 64px)',\n          backgroundColor: `rgba(255,255,255, 0.5)`,\n          zIndex: 9998\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          position: 'fixed',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          zIndex: 9999\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 64\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingLeft: '64px',\n        paddingTop: '64px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          marginBottom: '48px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 24\n          }, this),\n          onClick: handleNewGame,\n          disabled: loading,\n          children: \"New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '16px'\n        },\n        children: gameList.map(game => /*#__PURE__*/_jsxDEV(GameCard, {\n          game: game,\n          handleEditGame: () => handleEditGame(game.id),\n          handleDuplicateGame: handleDuplicateGame,\n          handleDeleteGame: handleDeleteGame\n        }, game.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Games, \"U/jXSJko1TdiMIF7pkB0uCNhlxQ=\", false, function () {\n  return [useAppContext, useNavigate];\n});\n_c = Games;\nexport default Games;\nvar _c;\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","folderExists","createFolder","listDriveGames","newGame","duplicateGame","deleteGame","Button","CircularProgress","Box","AddIcon","GameCard","useAppContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Games","_s","token","setGameID","appFolderID","setAppFolderID","gameList","setGameList","loading","setLoading","navigate","initDrive","folderID","access_token","error","console","message","handleNewGame","createdGameID","updatedgameList","handleEditGame","gameID","handleDuplicateGame","handleDeleteGame","gameName","style","position","children","width","height","backgroundColor","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","top","left","transform","size","paddingLeft","paddingTop","display","alignItems","marginBottom","variant","color","startIcon","onClick","disabled","flexWrap","gap","map","game","id","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/app/src/pages/Games.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { folderExists, createFolder, listDriveGames, newGame, duplicateGame, deleteGame } from '../driveAPI';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport GameCard from '../components/GameCard';\r\nimport { useAppContext } from '../AppContext';\r\n\r\nconst Games = () => {\r\n  const { token, setGameID } = useAppContext();\r\n  const [appFolderID, setAppFolderID] = useState([]);\r\n  const [gameList, setGameList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const initDrive = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        let folderID = await folderExists(\"Loop Games\");\r\n        if (!folderID) folderID = await createFolder(\"Loop Games\", 'root', token?.access_token);\r\n        setAppFolderID(folderID);\r\n\r\n        const gameList = await listDriveGames(folderID);\r\n        setGameList(gameList);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initDrive();\r\n  }, [token]);\r\n\r\n  const handleNewGame = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const createdGameID = await newGame(appFolderID, token.access_token);\r\n      const updatedgameList = await listDriveGames(appFolderID);\r\n      setGameList(updatedgameList);\r\n      setGameID(createdGameID); // Selecciona el nuevo juego después de crearlo\r\n    } catch (error) {\r\n      console.error('Error creating new game:', error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEditGame = async (gameID) => {\r\n    setGameID(gameID); // Selecciona el juego al que se le hizo clic\r\n    navigate(`/editor/${gameID}`);\r\n  };\r\n\r\n  const handleDuplicateGame = async (gameID) => {\r\n    try {\r\n      setLoading(true);\r\n      await duplicateGame(gameID);\r\n      const updatedgameList = await listDriveGames(appFolderID);\r\n      setGameList(updatedgameList);\r\n    } catch (error) {\r\n      console.error('Error duplicating game:', error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteGame = async (gameID, gameName) => {\r\n    try {\r\n      setLoading(true);\r\n      await deleteGame(gameID, gameName);\r\n      const updatedgameList = await listDriveGames(appFolderID);\r\n      setGameList(updatedgameList);\r\n      setGameID(null); // Limpiar gameID al eliminar un juego\r\n    } catch (error) {\r\n      console.error('Error deleting game:', error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      {loading && (\r\n        <>\r\n          <div\r\n            style={{ position: 'fixed', width: '100%', height: 'calc(100% - 64px)', backgroundColor: `rgba(255,255,255, 0.5)`, zIndex: 9998 }}\r\n          ></div>\r\n          <Box\r\n            style={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', zIndex: 9999 }}\r\n          >\r\n            <CircularProgress size={64} />\r\n          </Box>\r\n        </>\r\n      )}\r\n      <div style={{ paddingLeft: '64px', paddingTop: '64px' }}>\r\n        <div style={{ display: 'flex', alignItems: 'center', marginBottom: '48px' }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleNewGame}\r\n            disabled={loading}\r\n          >\r\n            New Game\r\n          </Button>\r\n        </div>\r\n        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '16px' }}>\r\n          {gameList.map((game) => (\r\n            <GameCard key={game.id} game={game}\r\n              handleEditGame={() => handleEditGame(game.id)}\r\n              handleDuplicateGame={handleDuplicateGame}\r\n              handleDeleteGame={handleDeleteGame}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Games;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}