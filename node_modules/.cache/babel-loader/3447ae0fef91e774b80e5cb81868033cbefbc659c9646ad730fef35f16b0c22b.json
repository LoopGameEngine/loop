{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\src\\\\pages\\\\Games.js\",\n  _s = $RefreshSig$();\n// Games.js\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { listDriveGames, newGame, duplicateGame, deleteGame } from '../apis/driveAPI';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport AddIcon from '@mui/icons-material/Add';\nimport GameCard from '../components/GameCard';\nimport { useAppContext } from '../context';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Games() {\n  _s();\n  const {\n    appFolderID,\n    setGameID,\n    gameList,\n    setGameList\n  } = useAppContext();\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const fetchGames = useCallback(async () => {\n    setLoading(true);\n    try {\n      const games = await listDriveGames(appFolderID);\n      setGameList(games);\n    } catch (error) {\n      console.error('Failed to load games:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [appFolderID, setGameList]);\n  useEffect(() => {\n    fetchGames();\n  }, [fetchGames]);\n  async function performGameAction(action, gameId = null) {\n    setLoading(true);\n    try {\n      const result = await action(gameId || appFolderID);\n      if (action === newGame) {\n        console.log('New game created successfully');\n      } else {\n        console.log('Operation successful');\n      }\n      fetchGames(); // Refetch games to reflect the changes\n    } catch (error) {\n      console.error('Error performing game operation:', error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  function handleNavigate(gameId, path) {\n    setGameID(gameId);\n    navigate(`/${path}`);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative',\n      p: 3\n    },\n    children: [loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => performGameAction(newGame),\n      variant: \"contained\",\n      startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 20\n      }, this),\n      disabled: loading,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), gameList.map(game => /*#__PURE__*/_jsxDEV(GameCard, {\n      game: game,\n      onEdit: () => handleNavigate(game.id, 'edit'),\n      onPlay: () => handleNavigate(game.id, 'play'),\n      onDuplicate: () => performGameAction(duplicateGame, game.id),\n      onDelete: () => performGameAction(deleteGame, game.id)\n    }, game.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Games, \"IbaimekMsFSurjN0ThZMJ8tApnc=\", false, function () {\n  return [useAppContext, useNavigate];\n});\n_c = Games;\nexport default Games;\nvar _c;\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","listDriveGames","newGame","duplicateGame","deleteGame","Button","CircularProgress","Box","AddIcon","GameCard","useAppContext","useNavigate","jsxDEV","_jsxDEV","Games","_s","appFolderID","setGameID","gameList","setGameList","loading","setLoading","navigate","fetchGames","games","error","console","performGameAction","action","gameId","result","log","handleNavigate","path","sx","position","p","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","startIcon","disabled","map","game","onEdit","id","onPlay","onDuplicate","onDelete","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/src/pages/Games.js"],"sourcesContent":["// Games.js\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport { listDriveGames, newGame, duplicateGame, deleteGame } from '../apis/driveAPI';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport GameCard from '../components/GameCard';\r\nimport { useAppContext } from '../context';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Games() {\r\n  const { appFolderID, setGameID, gameList, setGameList } = useAppContext();\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchGames = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const games = await listDriveGames(appFolderID);\r\n      setGameList(games);\r\n    } catch (error) {\r\n      console.error('Failed to load games:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [appFolderID, setGameList]);\r\n\r\n  useEffect(() => {\r\n    fetchGames();\r\n  }, [fetchGames]);\r\n\r\n  async function performGameAction(action, gameId = null) {\r\n    setLoading(true);\r\n    try {\r\n      const result = await action(gameId || appFolderID);\r\n      if (action === newGame) {\r\n        console.log('New game created successfully');\r\n      } else {\r\n        console.log('Operation successful');\r\n      }\r\n      fetchGames(); // Refetch games to reflect the changes\r\n    } catch (error) {\r\n      console.error('Error performing game operation:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function handleNavigate(gameId, path) {\r\n    setGameID(gameId);\r\n    navigate(`/${path}`);\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative', p: 3 }}>\r\n      {loading && <CircularProgress />}\r\n      <Button\r\n        onClick={() => performGameAction(newGame)}\r\n        variant=\"contained\"\r\n        startIcon={<AddIcon />}\r\n        disabled={loading}\r\n      >\r\n        New Game\r\n      </Button>\r\n      {gameList.map(game => (\r\n        <GameCard\r\n          key={game.id}\r\n          game={game}\r\n          onEdit={() => handleNavigate(game.id, 'edit')}\r\n          onPlay={() => handleNavigate(game.id, 'play')}\r\n          onDuplicate={() => performGameAction(duplicateGame, game.id)}\r\n          onDelete={() => performGameAction(deleteGame, game.id)}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Games;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}