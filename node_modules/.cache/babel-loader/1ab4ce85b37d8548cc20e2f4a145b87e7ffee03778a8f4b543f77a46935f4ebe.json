{"ast":null,"code":"// /src/api/googleAPI.js\n/* global gapi, google */\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"];\nconst SCOPES = 'https://www.googleapis.com/auth/drive.file';\nlet tokenClient;\nexport async function initGoogleAPI() {\n  try {\n    await gapi.load('client:auth2', async () => {\n      await gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES\n      });\n    });\n    tokenClient = google.accounts.oauth2.initTokenClient({\n      client_id: CLIENT_ID,\n      scope: SCOPES,\n      access_type: \"offline\"\n    });\n  } catch (error) {\n    console.error(\"Google API initialization failed: \", error);\n    throw new Error(`Failed to initialize Google API: ${error.message}`);\n  }\n}\nexport async function logout() {\n  google.accounts.id.disableAutoSelect();\n  return {\n    access_token: '',\n    expires_in: 0\n  };\n}\nexport async function login() {\n  return new Promise((resolve, reject) => {\n    tokenClient.callback = async response => {\n      if (response.error) {\n        reject(`Failed to login: ${response.error}`);\n        return;\n      }\n      try {\n        const userInfo = await getUserInfo(response.access_token);\n        resolve({\n          token: response,\n          userInfo\n        });\n      } catch (error) {\n        reject(`Failed to retrieve user info: ${error.message}`);\n      }\n    };\n    tokenClient.requestAccessToken({\n      prompt: 'consent'\n    });\n  });\n}\nasync function getUserInfo(accessToken) {\n  const userInfoEndpoint = 'https://www.googleapis.com/oauth2/v1/userinfo';\n  const response = await fetch(userInfoEndpoint, {\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error(`Failed to fetch user info: ${response.statusText}`);\n  }\n  return response.json();\n}","map":{"version":3,"names":["CLIENT_ID","process","env","REACT_APP_CLIENT_ID","API_KEY","REACT_APP_API_KEY","DISCOVERY_DOCS","SCOPES","tokenClient","initGoogleAPI","gapi","load","client","init","apiKey","clientId","discoveryDocs","scope","google","accounts","oauth2","initTokenClient","client_id","access_type","error","console","Error","message","logout","id","disableAutoSelect","access_token","expires_in","login","Promise","resolve","reject","callback","response","userInfo","getUserInfo","token","requestAccessToken","prompt","accessToken","userInfoEndpoint","fetch","headers","Authorization","ok","statusText","json"],"sources":["D:/xampp/htdocs/src/apis/googleAPI.js"],"sourcesContent":["// /src/api/googleAPI.js\r\n/* global gapi, google */\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\nconst DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"];\r\nconst SCOPES = 'https://www.googleapis.com/auth/drive.file';\r\n\r\nlet tokenClient;\r\n\r\nexport async function initGoogleAPI() {\r\n  try {\r\n    await gapi.load('client:auth2', async () => {\r\n      await gapi.client.init({\r\n        apiKey: API_KEY,\r\n        clientId: CLIENT_ID,\r\n        discoveryDocs: DISCOVERY_DOCS,\r\n        scope: SCOPES,\r\n      });\r\n    });\r\n\r\n    tokenClient = google.accounts.oauth2.initTokenClient({\r\n      client_id: CLIENT_ID,\r\n      scope: SCOPES,\r\n      access_type: \"offline\",\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Google API initialization failed: \", error);\r\n    throw new Error(`Failed to initialize Google API: ${error.message}`);\r\n  }\r\n}\r\n\r\nexport async function logout() {\r\n  google.accounts.id.disableAutoSelect();\r\n  return { access_token: '', expires_in: 0 };\r\n}\r\n\r\nexport async function login() {\r\n  return new Promise((resolve, reject) => {\r\n    tokenClient.callback = async (response) => {\r\n      if (response.error) {\r\n        reject(`Failed to login: ${response.error}`);\r\n        return;\r\n      }\r\n      try {\r\n        const userInfo = await getUserInfo(response.access_token);\r\n        resolve({ token: response, userInfo });\r\n      } catch (error) {\r\n        reject(`Failed to retrieve user info: ${error.message}`);\r\n      }\r\n    };\r\n    tokenClient.requestAccessToken({ prompt: 'consent' });\r\n  });\r\n}\r\n\r\nasync function getUserInfo(accessToken) {\r\n  const userInfoEndpoint = 'https://www.googleapis.com/oauth2/v1/userinfo';\r\n  const response = await fetch(userInfoEndpoint, {\r\n    headers: { Authorization: `Bearer ${accessToken}` },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`Failed to fetch user info: ${response.statusText}`);\r\n  }\r\n\r\n  return response.json();\r\n}\r\n\r\n"],"mappings":"AAAA;AACA;AACA,MAAMA,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB;AACjD,MAAMC,OAAO,GAAGH,OAAO,CAACC,GAAG,CAACG,iBAAiB;AAC7C,MAAMC,cAAc,GAAG,CAAC,4DAA4D,CAAC;AACrF,MAAMC,MAAM,GAAG,4CAA4C;AAE3D,IAAIC,WAAW;AAEf,OAAO,eAAeC,aAAaA,CAAA,EAAG;EACpC,IAAI;IACF,MAAMC,IAAI,CAACC,IAAI,CAAC,cAAc,EAAE,YAAY;MAC1C,MAAMD,IAAI,CAACE,MAAM,CAACC,IAAI,CAAC;QACrBC,MAAM,EAAEV,OAAO;QACfW,QAAQ,EAAEf,SAAS;QACnBgB,aAAa,EAAEV,cAAc;QAC7BW,KAAK,EAAEV;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFC,WAAW,GAAGU,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACC,eAAe,CAAC;MACnDC,SAAS,EAAEtB,SAAS;MACpBiB,KAAK,EAAEV,MAAM;MACbgB,WAAW,EAAE;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAM,IAAIE,KAAK,CAAE,oCAAmCF,KAAK,CAACG,OAAQ,EAAC,CAAC;EACtE;AACF;AAEA,OAAO,eAAeC,MAAMA,CAAA,EAAG;EAC7BV,MAAM,CAACC,QAAQ,CAACU,EAAE,CAACC,iBAAiB,CAAC,CAAC;EACtC,OAAO;IAAEC,YAAY,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAE,CAAC;AAC5C;AAEA,OAAO,eAAeC,KAAKA,CAAA,EAAG;EAC5B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC5B,WAAW,CAAC6B,QAAQ,GAAG,MAAOC,QAAQ,IAAK;MACzC,IAAIA,QAAQ,CAACd,KAAK,EAAE;QAClBY,MAAM,CAAE,oBAAmBE,QAAQ,CAACd,KAAM,EAAC,CAAC;QAC5C;MACF;MACA,IAAI;QACF,MAAMe,QAAQ,GAAG,MAAMC,WAAW,CAACF,QAAQ,CAACP,YAAY,CAAC;QACzDI,OAAO,CAAC;UAAEM,KAAK,EAAEH,QAAQ;UAAEC;QAAS,CAAC,CAAC;MACxC,CAAC,CAAC,OAAOf,KAAK,EAAE;QACdY,MAAM,CAAE,iCAAgCZ,KAAK,CAACG,OAAQ,EAAC,CAAC;MAC1D;IACF,CAAC;IACDnB,WAAW,CAACkC,kBAAkB,CAAC;MAAEC,MAAM,EAAE;IAAU,CAAC,CAAC;EACvD,CAAC,CAAC;AACJ;AAEA,eAAeH,WAAWA,CAACI,WAAW,EAAE;EACtC,MAAMC,gBAAgB,GAAG,+CAA+C;EACxE,MAAMP,QAAQ,GAAG,MAAMQ,KAAK,CAACD,gBAAgB,EAAE;IAC7CE,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASJ,WAAY;IAAE;EACpD,CAAC,CAAC;EAEF,IAAI,CAACN,QAAQ,CAACW,EAAE,EAAE;IAChB,MAAM,IAAIvB,KAAK,CAAE,8BAA6BY,QAAQ,CAACY,UAAW,EAAC,CAAC;EACtE;EAEA,OAAOZ,QAAQ,CAACa,IAAI,CAAC,CAAC;AACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}