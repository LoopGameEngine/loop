{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\app\\\\src\\\\pages\\\\Games.js\",\n  _s = $RefreshSig$();\n// Games.js\nimport React, { useState, useEffect } from 'react';\nimport { setDriveAccessToken, checkDriveFolder, listDriveGames } from '../driveAPI';\nimport { Card, CardContent, CardActions, Button, Typography } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Games = ({\n  token\n}) => {\n  _s();\n  const [folderID, setFolderID] = useState([]);\n  const [games, setGames] = useState([]);\n  useEffect(() => {\n    const initDrive = async () => {\n      try {\n        await setDriveAccessToken(token.access_token);\n        const id = await checkDriveFolder(\"Loop Games\");\n        setFolderID(id);\n        const files = await listDriveGames(id);\n        setGames(files);\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n      }\n    };\n    initDrive();\n  }, [token.access_token]);\n  const handleEdit = gameId => {\n    // Lógica para editar el juego\n  };\n  const handlePlay = gameId => {\n    // Lógica para jugar el juego\n  };\n  const handleDuplicate = gameId => {\n    // Lógica para duplicar el juego\n  };\n  const handleDelete = gameId => {\n    // Lógica para borrar el juego\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List of Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      children: games.map((game, index) => /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: 200,\n          margin: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            children: game.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: () => handleEdit(game.id),\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: () => handlePlay(game.id),\n            children: /*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: () => handleDuplicate(game.id),\n            children: /*#__PURE__*/_jsxDEV(FileCopyIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 77\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: () => handleDelete(game.id),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 74\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Games, \"+ZYy+014AXZfDh1P+X/GEjb/taE=\");\n_c = Games;\nexport default Games;\nvar _c;\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"names":["React","useState","useEffect","setDriveAccessToken","checkDriveFolder","listDriveGames","Card","CardContent","CardActions","Button","Typography","EditIcon","PlayArrowIcon","FileCopyIcon","DeleteIcon","jsxDEV","_jsxDEV","Games","token","_s","folderID","setFolderID","games","setGames","initDrive","access_token","id","files","error","console","message","handleEdit","gameId","handlePlay","handleDuplicate","handleDelete","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexWrap","map","game","index","width","margin","variant","component","name","size","onClick","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/app/src/pages/Games.js"],"sourcesContent":["// Games.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { setDriveAccessToken, checkDriveFolder, listDriveGames } from '../driveAPI';\r\nimport { Card, CardContent, CardActions, Button, Typography } from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nconst Games = ({ token }) => {\r\n  const [folderID, setFolderID] = useState([]);\r\n  const [games, setGames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const initDrive = async () => {\r\n      try {\r\n        await setDriveAccessToken(token.access_token);\r\n        const id = await checkDriveFolder(\"Loop Games\");\r\n        setFolderID(id);\r\n        const files = await listDriveGames(id);\r\n        setGames(files);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error.message);\r\n      }\r\n    };\r\n\r\n    initDrive();\r\n  }, [token.access_token]); \r\n\r\n  const handleEdit = (gameId) => {\r\n    // Lógica para editar el juego\r\n  };\r\n\r\n  const handlePlay = (gameId) => {\r\n    // Lógica para jugar el juego\r\n  };\r\n\r\n  const handleDuplicate = (gameId) => {\r\n    // Lógica para duplicar el juego\r\n  };\r\n\r\n  const handleDelete = (gameId) => {\r\n    // Lógica para borrar el juego\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>List of Games</h2>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n        {games.map((game, index) => (\r\n          <Card key={index} style={{ width: 200, margin: 10 }}>\r\n            {/* Aquí puedes agregar la imagen del juego si tienes la URL de la imagen */}\r\n            {/* <CardMedia component=\"img\" height=\"140\" image={game.imageUrl} alt={game.name} /> */}\r\n            <CardContent>\r\n              <Typography variant=\"h6\" component=\"div\">\r\n                {game.name}\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button size=\"small\" onClick={() => handleEdit(game.id)}><EditIcon /></Button>\r\n              <Button size=\"small\" onClick={() => handlePlay(game.id)}><PlayArrowIcon /></Button>\r\n              <Button size=\"small\" onClick={() => handleDuplicate(game.id)}><FileCopyIcon /></Button>\r\n              <Button size=\"small\" onClick={() => handleDelete(game.id)}><DeleteIcon /></Button>\r\n            </CardActions>\r\n          </Card>\r\n        ))}\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Games;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}