{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\app\\\\src\\\\pages\\\\Games.js\",\n  _s = $RefreshSig$();\n// src/pages/Games.js\nimport React, { useState, useEffect } from 'react';\nimport { setDriveAccessToken, folderExist, checkDriveFolder, listDriveGames, newGame, duplicateGame, deleteGame, folderExists } from '../driveAPI';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport GameCard from '../components/GameCard'; // Ajusta la ruta según tu estructura de carpetas\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Games = ({\n  token\n}) => {\n  _s();\n  const [appFolderID, setAppFolderID] = useState([]);\n  const [games, setGames] = useState([]);\n  useEffect(() => {\n    const initDrive = async () => {\n      try {\n        console.log(\":::::::::::::::::::::::::::::::::::::::::::::::::\");\n        console.log(folderExists(\"Loop Games\"));\n        // await setDriveAccessToken(token.access_token);\n        //  const id = await checkDriveFolder(\"Loop Games\");\n        //  setAppFolderID(id);\n        //   const gamesList = await listDriveGames(id);\n        //  setGames(gamesList);\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n      }\n    };\n    initDrive();\n  }, [token.access_token]);\n  const handleNewGame = async () => {\n    try {\n      const createdGameID = await newGame(appFolderID);\n      const updatedGamesList = await listDriveGames(appFolderID);\n      setGames(updatedGamesList);\n      console.log(updatedGamesList);\n      console.log(\"New game created with ID:\", createdGameID);\n    } catch (error) {\n      console.error('Error creating new game:', error.message);\n    }\n  };\n  const handleDuplicateGame = async gameID => {\n    try {\n      console.log(\"duplicate \", gameID);\n      await duplicateGame(gameID);\n      console.log(\"end duplicate\");\n      const updatedGamesList = await listDriveGames(appFolderID);\n      setGames(updatedGamesList);\n    } catch (error) {\n      console.error('Error duplicating game:', error.message);\n    }\n  };\n  const handleDeleteGame = async (gameID, gameName) => {\n    try {\n      console.log(\"delete \", gameID);\n      await deleteGame(gameID, gameName);\n      const updatedGamesList = await listDriveGames(appFolderID);\n      setGames(updatedGamesList);\n      console.log(\"Game deleted with ID:\", gameID);\n    } catch (error) {\n      console.error('Error deleting game:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingLeft: '64px',\n      paddingTop: '64px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '48px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 22\n        }, this),\n        onClick: handleNewGame,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '16px'\n      },\n      children: games.map(game => /*#__PURE__*/_jsxDEV(GameCard, {\n        game: game,\n        handleDuplicateGame: handleDuplicateGame,\n        handleDeleteGame: handleDeleteGame\n      }, game.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Games, \"Ta0fFpOzmkXUBwInWdoqaiyJPO0=\");\n_c = Games;\nexport default Games;\nvar _c;\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"names":["React","useState","useEffect","setDriveAccessToken","folderExist","checkDriveFolder","listDriveGames","newGame","duplicateGame","deleteGame","folderExists","Button","AddIcon","GameCard","jsxDEV","_jsxDEV","Games","token","_s","appFolderID","setAppFolderID","games","setGames","initDrive","console","log","error","message","access_token","handleNewGame","createdGameID","updatedGamesList","handleDuplicateGame","gameID","handleDeleteGame","gameName","style","paddingLeft","paddingTop","children","display","alignItems","marginBottom","variant","color","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","flexWrap","gap","map","game","id","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/app/src/pages/Games.js"],"sourcesContent":["// src/pages/Games.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { setDriveAccessToken, folderExist, checkDriveFolder, listDriveGames, newGame, duplicateGame, deleteGame, folderExists } from '../driveAPI';\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport GameCard from '../components/GameCard'; // Ajusta la ruta según tu estructura de carpetas\r\n\r\nconst Games = ({ token }) => {\r\n  const [appFolderID, setAppFolderID] = useState([]);\r\n  const [games, setGames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const initDrive = async () => {\r\n      try {\r\n        console.log(\":::::::::::::::::::::::::::::::::::::::::::::::::\");\r\n        console.log(folderExists(\"Loop Games\"));\r\n       // await setDriveAccessToken(token.access_token);\r\n      //  const id = await checkDriveFolder(\"Loop Games\");\r\n      //  setAppFolderID(id);\r\n     //   const gamesList = await listDriveGames(id);\r\n      //  setGames(gamesList);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error.message);\r\n      }\r\n    };\r\n\r\n    initDrive();\r\n  }, [token.access_token]);\r\n\r\n  const handleNewGame = async () => {\r\n    try {\r\n      const createdGameID = await newGame(appFolderID);\r\n      const updatedGamesList = await listDriveGames(appFolderID);\r\n      setGames(updatedGamesList);\r\n      console.log(updatedGamesList);\r\n      console.log(\"New game created with ID:\", createdGameID);\r\n    } catch (error) {\r\n      console.error('Error creating new game:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleDuplicateGame = async (gameID) => {\r\n    try {\r\n      console.log(\"duplicate \", gameID);\r\n      await duplicateGame(gameID);\r\n      console.log(\"end duplicate\");\r\n      const updatedGamesList = await listDriveGames(appFolderID);\r\n      setGames(updatedGamesList);\r\n\r\n    } catch (error) {\r\n      console.error('Error duplicating game:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteGame = async (gameID, gameName) => {\r\n    try {\r\n      console.log(\"delete \", gameID);\r\n      await deleteGame(gameID, gameName);\r\n      const updatedGamesList = await listDriveGames(appFolderID);\r\n      setGames(updatedGamesList);\r\n      console.log(\"Game deleted with ID:\", gameID);\r\n    } catch (error) {\r\n      console.error('Error deleting game:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ paddingLeft: '64px', paddingTop: '64px' }}>\r\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '48px' }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleNewGame}\r\n        >\r\n          New Game\r\n        </Button>\r\n      </div>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap', gap: '16px' }}>\r\n        {games.map((game) => (\r\n          <GameCard key={game.id} game={game}\r\n            handleDuplicateGame={handleDuplicateGame}\r\n            handleDeleteGame={handleDeleteGame}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Games;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}