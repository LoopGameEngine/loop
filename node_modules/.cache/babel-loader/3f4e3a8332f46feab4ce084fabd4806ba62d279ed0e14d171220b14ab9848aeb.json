{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\src\\\\loop.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\nimport { getUserInfo, initGoogleAPI, login, logout } from './apis/googleAPI';\nimport NavBar from './components/NavBar';\nimport Home from './pages/Home';\nimport Games from './pages/Games';\nimport Edit from './pages/Edit';\nimport Play from './pages/Play';\nimport SessionDialog from './components/SessionDialog';\nimport { useAppContext } from './context';\nimport { folderExists, createFolder } from './apis/driveAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Loop() {\n  _s();\n  const {\n    setToken,\n    setUserInfo,\n    setExpirationTime,\n    setAppFolderID,\n    CLIENT_ID,\n    API_KEY,\n    DISCOVERY_DOCS,\n    SCOPES\n  } = useAppContext();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // useEffect(() => {\n  //   const checkSessionExpiration = () => {\n  //     const currentTime = new Date().getTime();\n  //     if (expirationTime) {\n  //       const timeUntilExpiration = expirationTime - currentTime;\n  //       const fiveMinutesInMilliseconds = 59.5 * 60 * 1000;\n  //       if (userInfo && timeUntilExpiration <= fiveMinutesInMilliseconds && timeUntilExpiration > 0) {\n  //         setIsDialogOpen(true);\n  //         setLastLocation(location.pathname);\n  //       }\n  //     }\n  //   };\n\n  //   checkSessionExpiration();\n  //   const checkInterval = setInterval(checkSessionExpiration, 1000);\n  //   return () => clearInterval(checkInterval);\n  // }, [expirationTime, setIsDialogOpen, userInfo, location.pathname]);\n\n  // useEffect(() => {\n  //   if (location.pathname.includes('/editor')) {\n  //     const iframe = document.getElementById('gameIframe');\n  //     if (iframe) {\n  //       console.log(\"game saved!!!\");\n  //       iframe.contentWindow.postMessage('GuardarJuego', '*');\n  //     }\n  //   }\n  // }, [location.pathname]);\n\n  const handleLogin = async () => {\n    await initGoogleAPI(CLIENT_ID, API_KEY, DISCOVERY_DOCS, SCOPES);\n    const newToken = await login();\n    setToken(newToken);\n    const newExpirationTime = new Date().getTime() + newToken.expires_in * 1000;\n    setExpirationTime(newExpirationTime);\n    var newAppFolderID = await folderExists(\"Loop Games\", newToken.access_token);\n    if (!newAppFolderID) {\n      newAppFolderID = await createFolder(\"Loop Games\", 'root', newToken.access_token);\n    }\n    setAppFolderID(newAppFolderID);\n    const newUserInfo = await getUserInfo(newToken.access_token);\n    setUserInfo(newUserInfo);\n    navigate('/games');\n  };\n  const handleLogout = async () => {\n    await logout();\n    setToken(null);\n    setUserInfo(null);\n    setExpirationTime(null);\n    setAppFolderID(null);\n  };\n  const isEditorPage = location.pathname.includes('/edit');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '0px'\n    },\n    children: [!isEditorPage && /*#__PURE__*/_jsxDEV(NavBar, {\n      handleLogin: handleLogin,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/games\",\n        element: /*#__PURE__*/_jsxDEV(Games, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/edit\",\n        element: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/play\",\n        element: /*#__PURE__*/_jsxDEV(Play, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SessionDialog, {\n      onLogin: handleLogin,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(Loop, \"WyRB49ryyM2vTHPanCyaRUHBQaM=\", false, function () {\n  return [useAppContext, useNavigate, useLocation];\n});\n_c = Loop;\nexport default Loop;\nvar _c;\n$RefreshReg$(_c, \"Loop\");","map":{"version":3,"names":["React","Routes","Route","useLocation","useNavigate","getUserInfo","initGoogleAPI","login","logout","NavBar","Home","Games","Edit","Play","SessionDialog","useAppContext","folderExists","createFolder","jsxDEV","_jsxDEV","Loop","_s","setToken","setUserInfo","setExpirationTime","setAppFolderID","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","navigate","location","handleLogin","newToken","newExpirationTime","Date","getTime","expires_in","newAppFolderID","access_token","newUserInfo","handleLogout","isEditorPage","pathname","includes","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLogin","onLogout","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/src/loop.js"],"sourcesContent":["import React from 'react';\r\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\r\nimport { getUserInfo, initGoogleAPI, login, logout } from './apis/googleAPI';\r\nimport NavBar from './components/NavBar';\r\nimport Home from './pages/Home';\r\nimport Games from './pages/Games';\r\nimport Edit from './pages/Edit';\r\nimport Play from './pages/Play';\r\nimport SessionDialog from './components/SessionDialog';\r\nimport { useAppContext } from './context';\r\nimport { folderExists, createFolder } from './apis/driveAPI';\r\n\r\nfunction Loop() {\r\n  const { setToken, setUserInfo, setExpirationTime, setAppFolderID, CLIENT_ID, API_KEY, DISCOVERY_DOCS, SCOPES} = useAppContext();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // useEffect(() => {\r\n  //   const checkSessionExpiration = () => {\r\n  //     const currentTime = new Date().getTime();\r\n  //     if (expirationTime) {\r\n  //       const timeUntilExpiration = expirationTime - currentTime;\r\n  //       const fiveMinutesInMilliseconds = 59.5 * 60 * 1000;\r\n  //       if (userInfo && timeUntilExpiration <= fiveMinutesInMilliseconds && timeUntilExpiration > 0) {\r\n  //         setIsDialogOpen(true);\r\n  //         setLastLocation(location.pathname);\r\n  //       }\r\n  //     }\r\n  //   };\r\n\r\n  //   checkSessionExpiration();\r\n  //   const checkInterval = setInterval(checkSessionExpiration, 1000);\r\n  //   return () => clearInterval(checkInterval);\r\n  // }, [expirationTime, setIsDialogOpen, userInfo, location.pathname]);\r\n\r\n  // useEffect(() => {\r\n  //   if (location.pathname.includes('/editor')) {\r\n  //     const iframe = document.getElementById('gameIframe');\r\n  //     if (iframe) {\r\n  //       console.log(\"game saved!!!\");\r\n  //       iframe.contentWindow.postMessage('GuardarJuego', '*');\r\n  //     }\r\n  //   }\r\n  // }, [location.pathname]);\r\n\r\n  const handleLogin = async () => {\r\n    await initGoogleAPI(CLIENT_ID, API_KEY, DISCOVERY_DOCS, SCOPES);\r\n    const newToken = await login();\r\n    setToken(newToken);\r\n    const newExpirationTime = new Date().getTime() + newToken.expires_in * 1000;\r\n    setExpirationTime(newExpirationTime);\r\n    var newAppFolderID = await folderExists(\"Loop Games\", newToken.access_token);\r\n    if (!newAppFolderID) {\r\n      newAppFolderID = await createFolder(\"Loop Games\", 'root', newToken.access_token);\r\n    }\r\n    setAppFolderID(newAppFolderID);\r\n    const newUserInfo = await getUserInfo(newToken.access_token);\r\n    setUserInfo(newUserInfo);\r\n    navigate('/games');\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    await logout();\r\n    setToken(null);\r\n    setUserInfo(null);\r\n    setExpirationTime(null);\r\n    setAppFolderID(null);\r\n  };\r\n\r\n  const isEditorPage = location.pathname.includes('/edit');\r\n\r\n  return (\r\n    <div style={{ height: '0px' }}>\r\n      {!isEditorPage && (\r\n        <NavBar handleLogin={handleLogin} handleLogout={handleLogout} />\r\n      )}\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/games\" element={<Games />} />\r\n        <Route path=\"/edit\" element={<Edit />} />\r\n        <Route path=\"/play\" element={<Play />} />\r\n      </Routes>\r\n      <SessionDialog onLogin={handleLogin} onLogout={handleLogout} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loop;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}