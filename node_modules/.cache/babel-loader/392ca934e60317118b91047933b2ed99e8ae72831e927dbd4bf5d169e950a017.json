{"ast":null,"code":"var Readable = require('readable-stream/readable');\nvar isReadable = require('is-stream').readable;\nvar util = require('util');\nfunction addStream(streams, stream) {\n  if (!isReadable(stream)) throw new Error('All input streams must be readable');\n  var self = this;\n  stream._buffer = [];\n  stream.on('readable', function () {\n    var chunk = stream.read();\n    if (chunk === null) return;\n    if (this === streams[0]) self.push(chunk);else this._buffer.push(chunk);\n  });\n  stream.on('end', function () {\n    for (var stream = streams[0]; stream && stream._readableState.ended; stream = streams[0]) {\n      while (stream._buffer.length) self.push(stream._buffer.shift());\n      streams.shift();\n    }\n    if (!streams.length) self.push(null);\n  });\n  stream.on('error', this.emit.bind(this, 'error'));\n  streams.push(stream);\n}\nfunction OrderedStreams(streams, options) {\n  if (!(this instanceof OrderedStreams)) {\n    return new OrderedStreams(streams, options);\n  }\n  streams = streams || [];\n  options = options || {};\n  options.objectMode = true;\n  Readable.call(this, options);\n  if (!Array.isArray(streams)) streams = [streams];\n  if (!streams.length) return this.push(null); // no streams, close\n\n  var addStream_bind = addStream.bind(this, []);\n  streams.forEach(function (item) {\n    if (Array.isArray(item)) item.forEach(addStream_bind);else addStream_bind(item);\n  });\n}\nutil.inherits(OrderedStreams, Readable);\nOrderedStreams.prototype._read = function () {};\nmodule.exports = OrderedStreams;","map":{"version":3,"names":["Readable","require","isReadable","readable","util","addStream","streams","stream","Error","self","_buffer","on","chunk","read","push","_readableState","ended","length","shift","emit","bind","OrderedStreams","options","objectMode","call","Array","isArray","addStream_bind","forEach","item","inherits","prototype","_read","module","exports"],"sources":["D:/xampp/htdocs/app/node_modules/ordered-read-streams/index.js"],"sourcesContent":["var Readable = require('readable-stream/readable');\nvar isReadable = require('is-stream').readable;\nvar util = require('util');\n\nfunction addStream(streams, stream)\n{\n  if(!isReadable(stream)) throw new Error('All input streams must be readable');\n\n  var self = this;\n\n  stream._buffer = [];\n\n  stream.on('readable', function()\n  {\n    var chunk = stream.read();\n    if (chunk === null)\n      return;\n\n    if(this === streams[0])\n      self.push(chunk);\n\n    else\n      this._buffer.push(chunk);\n  });\n\n  stream.on('end', function()\n  {\n    for(var stream = streams[0];\n        stream && stream._readableState.ended;\n        stream = streams[0])\n    {\n      while(stream._buffer.length)\n        self.push(stream._buffer.shift());\n\n      streams.shift();\n    }\n\n    if(!streams.length) self.push(null);\n  });\n\n  stream.on('error', this.emit.bind(this, 'error'));\n\n  streams.push(stream);\n}\n\n\nfunction OrderedStreams(streams, options) {\n  if (!(this instanceof(OrderedStreams))) {\n    return new OrderedStreams(streams, options);\n  }\n\n  streams = streams || [];\n  options = options || {};\n\n  options.objectMode = true;\n\n  Readable.call(this, options);\n\n\n  if(!Array.isArray(streams)) streams = [streams];\n  if(!streams.length) return this.push(null);  // no streams, close\n\n\n  var addStream_bind = addStream.bind(this, []);\n\n\n  streams.forEach(function(item)\n  {\n    if(Array.isArray(item))\n      item.forEach(addStream_bind);\n\n    else\n      addStream_bind(item);\n  });\n}\nutil.inherits(OrderedStreams, Readable);\n\nOrderedStreams.prototype._read = function () {};\n\n\nmodule.exports = OrderedStreams;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}