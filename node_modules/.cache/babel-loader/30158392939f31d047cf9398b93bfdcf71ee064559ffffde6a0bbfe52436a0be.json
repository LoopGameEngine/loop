{"ast":null,"code":"// /src/api/googleAPI.js\n/* global gapi, google  */\n\nconst userInfoEndpoint = 'https://www.googleapis.com/oauth2/v1/userinfo';\nlet tokenClient;\nexport async function initGoogleAPI(CLIENT_ID, API_KEY, DISCOVERY_DOCS, SCOPES) {\n  try {\n    await new Promise((resolve, reject) => {\n      gapi.load('client', () => {\n        gapi.client.init({\n          apiKey: API_KEY,\n          discoveryDocs: DISCOVERY_DOCS\n        }).then(resolve).catch(reject);\n      });\n    });\n    tokenClient = google.accounts.oauth2.initTokenClient({\n      client_id: CLIENT_ID,\n      scope: SCOPES,\n      prompt: ''\n    });\n  } catch (error) {\n    throw new Error(`Google API initialization failed: ${error.message}`);\n  }\n}\nexport async function login() {\n  try {\n    const token = await new Promise((resolve, reject) => {\n      tokenClient.callback = response => {\n        if (response.error) {\n          reject(`Login failed: ${response.error}`);\n        } else {\n          resolve(response);\n        }\n      };\n      tokenClient.requestAccessToken({\n        prompt: 'select_account'\n      });\n    });\n    return token;\n  } catch (error) {\n    throw new Error(`Error during login or user info retrieval: ${error.message}`);\n  }\n}\nexport async function logout() {\n  google.accounts.id.disableAutoSelect();\n}\nexport async function getUserInfo() {\n  try {\n    // Utiliza gapi.client.request para hacer una solicitud directa\n    const response = await gapi.client.request({\n      'path': 'https://www.googleapis.com/oauth2/v3/userinfo'\n    });\n    return response.result;\n  } catch (error) {\n    throw new Error(`Error during user info retrieval with gapi: ${error.message}`);\n  }\n}","map":{"version":3,"names":["userInfoEndpoint","tokenClient","initGoogleAPI","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","Promise","resolve","reject","gapi","load","client","init","apiKey","discoveryDocs","then","catch","google","accounts","oauth2","initTokenClient","client_id","scope","prompt","error","Error","message","login","token","callback","response","requestAccessToken","logout","id","disableAutoSelect","getUserInfo","request","result"],"sources":["D:/xampp/htdocs/src/apis/googleAPI.js"],"sourcesContent":["// /src/api/googleAPI.js\r\n/* global gapi, google  */\r\n\r\nconst userInfoEndpoint = 'https://www.googleapis.com/oauth2/v1/userinfo';\r\n\r\nlet tokenClient;\r\n\r\nexport async function initGoogleAPI(CLIENT_ID, API_KEY, DISCOVERY_DOCS, SCOPES) {\r\n  try {\r\n    await new Promise((resolve, reject) => {\r\n      gapi.load('client', () => {\r\n        gapi.client.init({\r\n          apiKey: API_KEY,\r\n          discoveryDocs: DISCOVERY_DOCS,\r\n        }).then(resolve).catch(reject);\r\n      });\r\n    });\r\n    tokenClient = google.accounts.oauth2.initTokenClient({\r\n      client_id: CLIENT_ID,\r\n      scope: SCOPES,\r\n      prompt: '',\r\n    });\r\n  } catch (error) {\r\n    throw new Error(`Google API initialization failed: ${error.message}`);\r\n  }\r\n}\r\n\r\nexport async function login() {\r\n  try {\r\n    const token = await new Promise((resolve, reject) => {\r\n      tokenClient.callback = (response) => {\r\n        if (response.error) {\r\n          reject(`Login failed: ${response.error}`);\r\n        } else {\r\n          resolve(response);\r\n        }\r\n      };\r\n      tokenClient.requestAccessToken({ prompt: 'select_account' });\r\n    });\r\n    return token;\r\n  } catch (error) {\r\n    throw new Error(`Error during login or user info retrieval: ${error.message}`);\r\n  }\r\n}\r\n\r\nexport async function logout() {\r\n  google.accounts.id.disableAutoSelect();\r\n}\r\n\r\nexport async function getUserInfo() {\r\n  try {\r\n    // Utiliza gapi.client.request para hacer una solicitud directa\r\n    const response = await gapi.client.request({\r\n      'path': 'https://www.googleapis.com/oauth2/v3/userinfo',\r\n    });\r\n    return response.result;\r\n  } catch (error) {\r\n    throw new Error(`Error during user info retrieval with gapi: ${error.message}`);\r\n  }\r\n}\r\n\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA,MAAMA,gBAAgB,GAAG,+CAA+C;AAExE,IAAIC,WAAW;AAEf,OAAO,eAAeC,aAAaA,CAACC,SAAS,EAAEC,OAAO,EAAEC,cAAc,EAAEC,MAAM,EAAE;EAC9E,IAAI;IACF,MAAM,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACrCC,IAAI,CAACC,IAAI,CAAC,QAAQ,EAAE,MAAM;QACxBD,IAAI,CAACE,MAAM,CAACC,IAAI,CAAC;UACfC,MAAM,EAAEV,OAAO;UACfW,aAAa,EAAEV;QACjB,CAAC,CAAC,CAACW,IAAI,CAACR,OAAO,CAAC,CAACS,KAAK,CAACR,MAAM,CAAC;MAChC,CAAC,CAAC;IACJ,CAAC,CAAC;IACFR,WAAW,GAAGiB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACC,eAAe,CAAC;MACnDC,SAAS,EAAEnB,SAAS;MACpBoB,KAAK,EAAEjB,MAAM;MACbkB,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAE,qCAAoCD,KAAK,CAACE,OAAQ,EAAC,CAAC;EACvE;AACF;AAEA,OAAO,eAAeC,KAAKA,CAAA,EAAG;EAC5B,IAAI;IACF,MAAMC,KAAK,GAAG,MAAM,IAAItB,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACnDR,WAAW,CAAC6B,QAAQ,GAAIC,QAAQ,IAAK;QACnC,IAAIA,QAAQ,CAACN,KAAK,EAAE;UAClBhB,MAAM,CAAE,iBAAgBsB,QAAQ,CAACN,KAAM,EAAC,CAAC;QAC3C,CAAC,MAAM;UACLjB,OAAO,CAACuB,QAAQ,CAAC;QACnB;MACF,CAAC;MACD9B,WAAW,CAAC+B,kBAAkB,CAAC;QAAER,MAAM,EAAE;MAAiB,CAAC,CAAC;IAC9D,CAAC,CAAC;IACF,OAAOK,KAAK;EACd,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAE,8CAA6CD,KAAK,CAACE,OAAQ,EAAC,CAAC;EAChF;AACF;AAEA,OAAO,eAAeM,MAAMA,CAAA,EAAG;EAC7Bf,MAAM,CAACC,QAAQ,CAACe,EAAE,CAACC,iBAAiB,CAAC,CAAC;AACxC;AAEA,OAAO,eAAeC,WAAWA,CAAA,EAAG;EAClC,IAAI;IACF;IACA,MAAML,QAAQ,GAAG,MAAMrB,IAAI,CAACE,MAAM,CAACyB,OAAO,CAAC;MACzC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,OAAON,QAAQ,CAACO,MAAM;EACxB,CAAC,CAAC,OAAOb,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAE,+CAA8CD,KAAK,CAACE,OAAQ,EAAC,CAAC;EACjF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}