{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\app\\\\src\\\\pages\\\\Games.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { setDriveAccessToken, checkDriveFolder, listDriveGames, newGame } from '../driveAPI';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Games = ({\n  token\n}) => {\n  _s();\n  const [folderID, setFolderID] = useState([]);\n  const [games, setGames] = useState([]);\n  useEffect(() => {\n    const initDrive = async () => {\n      try {\n        await setDriveAccessToken(token.access_token);\n        const id = await checkDriveFolder(\"Loop Games\");\n        setFolderID(id);\n        const gamesList = await listDriveGames(id);\n        setGames(gamesList);\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n      }\n    };\n    initDrive();\n  }, [token.access_token]);\n  const handleNewGameClick = async () => {\n    try {\n      await newGame();\n      const updatedGamesList = await listDriveGames(folderID);\n      setGames(updatedGamesList);\n    } catch (error) {\n      console.error('Error creating new game:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '16px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        marginBottom: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 22\n        }, this),\n        onClick: handleNewGameClick,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '16px',\n        justifyContent: 'center'\n      },\n      children: games.map(game => /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          maxWidth: '200px',\n          minWidth: '200px',\n          margin: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: game.imageUrl,\n            alt: game.name,\n            style: {\n              width: '100%',\n              height: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          style: {\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(FileCopyIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, game.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Games, \"+ZYy+014AXZfDh1P+X/GEjb/taE=\");\n_c = Games;\nexport default Games;\nvar _c;\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"names":["React","useState","useEffect","setDriveAccessToken","checkDriveFolder","listDriveGames","newGame","Card","CardContent","CardActions","IconButton","EditIcon","PlayArrowIcon","FileCopyIcon","DeleteIcon","AddIcon","Button","jsxDEV","_jsxDEV","Games","token","_s","folderID","setFolderID","games","setGames","initDrive","access_token","id","gamesList","error","console","message","handleNewGameClick","updatedGamesList","style","padding","children","display","justifyContent","marginBottom","variant","color","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","flexWrap","gap","map","game","maxWidth","minWidth","margin","src","imageUrl","alt","name","width","height","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/app/src/pages/Games.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { setDriveAccessToken, checkDriveFolder, listDriveGames, newGame } from '../driveAPI';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst Games = ({ token }) => {\r\n  const [folderID, setFolderID] = useState([]);\r\n  const [games, setGames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const initDrive = async () => {\r\n      try {\r\n        await setDriveAccessToken(token.access_token);\r\n        const id = await checkDriveFolder(\"Loop Games\");\r\n        setFolderID(id);\r\n        const gamesList = await listDriveGames(id);\r\n        setGames(gamesList);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error.message);\r\n      }\r\n    };\r\n\r\n    initDrive();\r\n  }, [token.access_token]);\r\n\r\n  const handleNewGameClick = async () => {\r\n    try {\r\n      await newGame();\r\n      const updatedGamesList = await listDriveGames(folderID);\r\n      setGames(updatedGamesList);\r\n    } catch (error) {\r\n      console.error('Error creating new game:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '16px' }}>\r\n      <div style={{ display: 'flex', justifyContent: 'flex-start', marginBottom: '16px' }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleNewGameClick}\r\n        >\r\n          New Game\r\n        </Button>\r\n      </div>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap', gap: '16px', justifyContent: 'center' }}>\r\n        {games.map((game) => (\r\n          <Card key={game.id} style={{ maxWidth: '200px', minWidth: '200px', margin: '8px' }}>\r\n            {/* Contenido de la tarjeta */}\r\n            <CardContent>\r\n              {/* Aseg√∫rate de tener la URL de la imagen en el campo imageUrl del juego */}\r\n              <img src={game.imageUrl} alt={game.name} style={{ width: '100%', height: 'auto' }} />\r\n            </CardContent>\r\n\r\n            {/* Acciones de la tarjeta */}\r\n            <CardActions style={{ justifyContent: 'center' }}>\r\n              <IconButton>\r\n                <EditIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <PlayArrowIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <FileCopyIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </CardActions>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Games;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,mBAAmB,EAAEC,gBAAgB,EAAEC,cAAc,EAAEC,OAAO,QAAQ,aAAa;AAC5F,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMwB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMvB,mBAAmB,CAACiB,KAAK,CAACO,YAAY,CAAC;QAC7C,MAAMC,EAAE,GAAG,MAAMxB,gBAAgB,CAAC,YAAY,CAAC;QAC/CmB,WAAW,CAACK,EAAE,CAAC;QACf,MAAMC,SAAS,GAAG,MAAMxB,cAAc,CAACuB,EAAE,CAAC;QAC1CH,QAAQ,CAACI,SAAS,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACE,OAAO,CAAC;MACtD;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACN,KAAK,CAACO,YAAY,CAAC,CAAC;EAExB,MAAMM,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAM3B,OAAO,CAAC,CAAC;MACf,MAAM4B,gBAAgB,GAAG,MAAM7B,cAAc,CAACiB,QAAQ,CAAC;MACvDG,QAAQ,CAACS,gBAAgB,CAAC;IAC5B,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC1D;EACF,CAAC;EAED,oBACEd,OAAA;IAAKiB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BnB,OAAA;MAAKiB,KAAK,EAAE;QAAEG,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,YAAY;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAH,QAAA,eAClFnB,OAAA,CAACF,MAAM;QACLyB,OAAO,EAAC,WAAW;QACnBC,KAAK,EAAC,SAAS;QACfC,SAAS,eAAEzB,OAAA,CAACH,OAAO;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QACvBC,OAAO,EAAEf,kBAAmB;QAAAI,QAAA,EAC7B;MAED;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACN7B,OAAA;MAAKiB,KAAK,EAAE;QAAEG,OAAO,EAAE,MAAM;QAAEW,QAAQ,EAAE,MAAM;QAAEC,GAAG,EAAE,MAAM;QAAEX,cAAc,EAAE;MAAS,CAAE;MAAAF,QAAA,EACtFb,KAAK,CAAC2B,GAAG,CAAEC,IAAI,iBACdlC,OAAA,CAACX,IAAI;QAAe4B,KAAK,EAAE;UAAEkB,QAAQ,EAAE,OAAO;UAAEC,QAAQ,EAAE,OAAO;UAAEC,MAAM,EAAE;QAAM,CAAE;QAAAlB,QAAA,gBAEjFnB,OAAA,CAACV,WAAW;UAAA6B,QAAA,eAEVnB,OAAA;YAAKsC,GAAG,EAAEJ,IAAI,CAACK,QAAS;YAACC,GAAG,EAAEN,IAAI,CAACO,IAAK;YAACxB,KAAK,EAAE;cAAEyB,KAAK,EAAE,MAAM;cAAEC,MAAM,EAAE;YAAO;UAAE;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1E,CAAC,eAGd7B,OAAA,CAACT,WAAW;UAAC0B,KAAK,EAAE;YAAEI,cAAc,EAAE;UAAS,CAAE;UAAAF,QAAA,gBAC/CnB,OAAA,CAACR,UAAU;YAAA2B,QAAA,eACTnB,OAAA,CAACP,QAAQ;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACb7B,OAAA,CAACR,UAAU;YAAA2B,QAAA,eACTnB,OAAA,CAACN,aAAa;cAAAgC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACb7B,OAAA,CAACR,UAAU;YAAA2B,QAAA,eACTnB,OAAA,CAACL,YAAY;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACb7B,OAAA,CAACR,UAAU;YAAA2B,QAAA,eACTnB,OAAA,CAACJ,UAAU;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA,GArBLK,IAAI,CAACxB,EAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAsBZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAvEIF,KAAK;AAAA2C,EAAA,GAAL3C,KAAK;AAyEX,eAAeA,KAAK;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}