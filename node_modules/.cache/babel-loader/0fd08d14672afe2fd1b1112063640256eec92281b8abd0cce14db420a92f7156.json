{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\app\\\\src\\\\pages\\\\Games.js\",\n  _s = $RefreshSig$();\n// src/pages/Games.js\nimport React, { useState, useEffect } from 'react';\nimport { setDriveAccessToken, checkDriveFolder, listDriveGames, newGame } from '../driveAPI';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport GameCard from '../components/GameCard'; // Ajusta la ruta según tu estructura de carpetas\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Games = ({\n  token\n}) => {\n  _s();\n  const [gamesFolderID, setGamesFolderID] = useState([]);\n  const [games, setGames] = useState([]);\n  useEffect(() => {\n    const initDrive = async () => {\n      try {\n        await setDriveAccessToken(token.access_token);\n        const id = await checkDriveFolder(\"Loop Games\");\n        setGamesFolderID(id);\n        const gamesList = await listDriveGames(id);\n        setGames(gamesList);\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n      }\n    };\n    initDrive();\n  }, [token.access_token]);\n  const handleNewGameClick = async () => {\n    try {\n      const createdGameID = await newGame(gamesFolderID);\n      const updatedGamesList = await listDriveGames(gamesFolderID);\n      setGames(updatedGamesList);\n      console.log(\"New game created with ID:\", createdGameID);\n    } catch (error) {\n      console.error('Error creating new game:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingLeft: '64px',\n      paddingTop: '64px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '48px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 22\n        }, this),\n        onClick: handleNewGameClick,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '16px'\n      },\n      children: games.map(game => /*#__PURE__*/_jsxDEV(GameCard, {\n        game: game\n      }, game.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Games, \"7wXC8Ba9CepYsSokaKlIIJ5Nb4Q=\");\n_c = Games;\nexport default Games;\nvar _c;\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"names":["React","useState","useEffect","setDriveAccessToken","checkDriveFolder","listDriveGames","newGame","Button","AddIcon","GameCard","jsxDEV","_jsxDEV","Games","token","_s","gamesFolderID","setGamesFolderID","games","setGames","initDrive","access_token","id","gamesList","error","console","message","handleNewGameClick","createdGameID","updatedGamesList","log","style","paddingLeft","paddingTop","children","display","alignItems","marginBottom","variant","color","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","flexWrap","gap","map","game","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/app/src/pages/Games.js"],"sourcesContent":["// src/pages/Games.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { setDriveAccessToken, checkDriveFolder, listDriveGames, newGame } from '../driveAPI';\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport GameCard from '../components/GameCard'; // Ajusta la ruta según tu estructura de carpetas\r\n\r\nconst Games = ({ token }) => {\r\n  const [gamesFolderID, setGamesFolderID] = useState([]);\r\n  const [games, setGames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const initDrive = async () => {\r\n      try {\r\n        await setDriveAccessToken(token.access_token);\r\n        const id = await checkDriveFolder(\"Loop Games\");\r\n        setGamesFolderID(id);\r\n        const gamesList = await listDriveGames(id);\r\n        setGames(gamesList);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error.message);\r\n      }\r\n    };\r\n\r\n    initDrive();\r\n  }, [token.access_token]);\r\n\r\n  const handleNewGameClick = async () => {\r\n    try {\r\n      const createdGameID = await newGame(gamesFolderID);\r\n      const updatedGamesList = await listDriveGames(gamesFolderID);\r\n      setGames(updatedGamesList);\r\n      console.log(\"New game created with ID:\", createdGameID);\r\n    } catch (error) {\r\n      console.error('Error creating new game:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ paddingLeft: '64px', paddingTop: '64px' }}>\r\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '48px' }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleNewGameClick}\r\n        >\r\n          New Game\r\n        </Button>\r\n      </div>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap', gap: '16px' }}>\r\n        {games.map((game) => (\r\n          <GameCard key={game.id} game={game} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Games;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}