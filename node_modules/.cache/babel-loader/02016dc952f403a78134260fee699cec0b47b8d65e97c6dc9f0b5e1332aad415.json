{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\src\\\\loop.js\",\n  _s = $RefreshSig$();\n// loop.js\nimport React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { initGoogleAPI, login, logout } from './apis/googleAPI';\nimport NavBar from './components/NavBar';\nimport Wellcome from './pages/Home';\nimport Games from './pages/Games';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppContext } from './context';\nimport { folderExists, createFolder } from './apis/driveAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Loop() {\n  _s();\n  const {\n    appFolderID,\n    setAppFolderID,\n    userInfo,\n    expirationTime,\n    setExpirationTime,\n    setToken,\n    setUserInfo\n  } = useAppContext();\n  const navigate = useNavigate();\n  const handleLogout = async () => {\n    const token = await logout();\n    setToken(token);\n    setUserInfo(null);\n  };\n  const handleLogin = async () => {\n    await initGoogleAPI();\n    const {\n      token,\n      userInfo\n    } = await login();\n    // Calculate the exact moment in the future when the token will expire, in milliseconds\n    const expirationTime = new Date().getTime() + token.expires_in * 1000;\n\n    // Verificar y crear el directorio de juegos\n\n    appFolderID = await folderExists(\"Loop Games\", token.access_token);\n    if (!appFolderID) {\n      console.log(\"create folder\");\n      appFolderID = await createFolder(\"Loop Games\", 'root', token.access_token);\n      setAppFolderID(appFolderID);\n    } else {\n      setAppFolderID(appFolderID);\n    }\n    console.log(appFolderID, folderID, newFolderID);\n    setToken(token);\n    setExpirationTime(expirationTime); // Store the expiration time\n    setUserInfo(userInfo);\n    navigate('/games');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      userInfo: userInfo,\n      expirationTime: expirationTime,\n      handleLogin: handleLogin,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Wellcome, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/games\",\n        element: /*#__PURE__*/_jsxDEV(Games, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Loop, \"er6GKz6JT5arFHRGcgwOUTDJeGE=\", false, function () {\n  return [useAppContext, useNavigate];\n});\n_c = Loop;\nexport default Loop;\nvar _c;\n$RefreshReg$(_c, \"Loop\");","map":{"version":3,"names":["React","Routes","Route","initGoogleAPI","login","logout","NavBar","Wellcome","Games","useNavigate","useAppContext","folderExists","createFolder","jsxDEV","_jsxDEV","Loop","_s","appFolderID","setAppFolderID","userInfo","expirationTime","setExpirationTime","setToken","setUserInfo","navigate","handleLogout","token","handleLogin","Date","getTime","expires_in","access_token","console","log","folderID","newFolderID","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/src/loop.js"],"sourcesContent":["// loop.js\r\nimport React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { initGoogleAPI, login, logout } from './apis/googleAPI';\r\nimport NavBar from './components/NavBar';\r\nimport Wellcome from './pages/Home';\r\nimport Games from './pages/Games';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAppContext } from './context';\r\nimport { folderExists, createFolder, } from './apis/driveAPI';\r\n\r\nfunction Loop() {\r\n  const { appFolderID, setAppFolderID, userInfo, expirationTime, setExpirationTime, setToken, setUserInfo } = useAppContext();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = async () => {\r\n    const token = await logout();\r\n    setToken(token);\r\n    setUserInfo(null);\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    await initGoogleAPI();\r\n    const { token, userInfo } = await login();\r\n    // Calculate the exact moment in the future when the token will expire, in milliseconds\r\n    const expirationTime = new Date().getTime() + token.expires_in * 1000;\r\n\r\n\r\n    // Verificar y crear el directorio de juegos\r\n\r\n    appFolderID = await folderExists(\"Loop Games\", token.access_token);\r\n    if (!appFolderID) {\r\n      console.log(\"create folder\");\r\n      appFolderID = await createFolder(\"Loop Games\", 'root', token.access_token);\r\n      setAppFolderID(appFolderID);\r\n    } else {\r\n      setAppFolderID(appFolderID);\r\n    }\r\n\r\n    console.log(appFolderID, folderID, newFolderID);\r\n    setToken(token);\r\n    setExpirationTime(expirationTime); // Store the expiration time\r\n    setUserInfo(userInfo);\r\n    navigate('/games');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar userInfo={userInfo} expirationTime={expirationTime} handleLogin={handleLogin} handleLogout={handleLogout} />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Wellcome />} />\r\n        <Route path=\"/games\" element={<Games />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loop;\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,SAASC,aAAa,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAC/D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,QAAQ,WAAW;AACzC,SAASC,YAAY,EAAEC,YAAY,QAAS,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC,WAAW;IAAEC,cAAc;IAAEC,QAAQ;IAAEC,cAAc;IAAEC,iBAAiB;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAGb,aAAa,CAAC,CAAC;EAC3H,MAAMc,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,KAAK,GAAG,MAAMrB,MAAM,CAAC,CAAC;IAC5BiB,QAAQ,CAACI,KAAK,CAAC;IACfH,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMxB,aAAa,CAAC,CAAC;IACrB,MAAM;MAAEuB,KAAK;MAAEP;IAAS,CAAC,GAAG,MAAMf,KAAK,CAAC,CAAC;IACzC;IACA,MAAMgB,cAAc,GAAG,IAAIQ,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAGH,KAAK,CAACI,UAAU,GAAG,IAAI;;IAGrE;;IAEAb,WAAW,GAAG,MAAMN,YAAY,CAAC,YAAY,EAAEe,KAAK,CAACK,YAAY,CAAC;IAClE,IAAI,CAACd,WAAW,EAAE;MAChBe,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5BhB,WAAW,GAAG,MAAML,YAAY,CAAC,YAAY,EAAE,MAAM,EAAEc,KAAK,CAACK,YAAY,CAAC;MAC1Eb,cAAc,CAACD,WAAW,CAAC;IAC7B,CAAC,MAAM;MACLC,cAAc,CAACD,WAAW,CAAC;IAC7B;IAEAe,OAAO,CAACC,GAAG,CAAChB,WAAW,EAAEiB,QAAQ,EAAEC,WAAW,CAAC;IAC/Cb,QAAQ,CAACI,KAAK,CAAC;IACfL,iBAAiB,CAACD,cAAc,CAAC,CAAC,CAAC;IACnCG,WAAW,CAACJ,QAAQ,CAAC;IACrBK,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEV,OAAA;IAAAsB,QAAA,gBACEtB,OAAA,CAACR,MAAM;MAACa,QAAQ,EAAEA,QAAS;MAACC,cAAc,EAAEA,cAAe;MAACO,WAAW,EAAEA,WAAY;MAACF,YAAY,EAAEA;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpH1B,OAAA,CAACb,MAAM;MAAAmC,QAAA,gBACLtB,OAAA,CAACZ,KAAK;QAACuC,IAAI,EAAC,GAAG;QAACC,OAAO,eAAE5B,OAAA,CAACP,QAAQ;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzC1B,OAAA,CAACZ,KAAK;QAACuC,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAE5B,OAAA,CAACN,KAAK;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACxB,EAAA,CA5CQD,IAAI;EAAA,QACiGL,aAAa,EACxGD,WAAW;AAAA;AAAAkC,EAAA,GAFrB5B,IAAI;AA8Cb,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}