{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\app\\\\src\\\\context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// /src/context.js\nimport React, { createContext, useContext, useState } from 'react';\nimport { folderExists, createFolder, listDriveGames } from './driveAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const AppContextProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(null);\n  const [userInfo, setUserInfo] = useState(null);\n  const [gameID, setGameID] = useState(null);\n  const [appFolderID, setAppFolderID] = useState(null);\n  const [gameList, setGameList] = useState([]);\n  const loadGames = async () => {\n    if (!gameList || gameList.length === 0) {\n      if (!appFolderID) {\n        var folderID = await folderExists(\"Loop Games\", token === null || token === void 0 ? void 0 : token.access_token);\n        if (!folderID) {\n          folderID = await createFolder(\"Loop Games\", 'root', token === null || token === void 0 ? void 0 : token.access_token);\n          setAppFolderID(folderID);\n        } else {\n          setAppFolderID(folderID);\n        }\n      }\n      const gameList = await listDriveGames(appFolderID, token);\n      setGameList(gameList);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      token,\n      setToken,\n      userInfo,\n      setUserInfo,\n      gameID,\n      setGameID,\n      gameList,\n      setGameList,\n      loadGames,\n      appFolderID\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(AppContextProvider, \"KTPuntAWfLaGpXAcufXT579k2pQ=\");\n_c = AppContextProvider;\nexport const useAppContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","folderExists","createFolder","listDriveGames","jsxDEV","_jsxDEV","AppContext","AppContextProvider","children","_s","token","setToken","userInfo","setUserInfo","gameID","setGameID","appFolderID","setAppFolderID","gameList","setGameList","loadGames","length","folderID","access_token","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAppContext","_s2","$RefreshReg$"],"sources":["D:/xampp/htdocs/app/src/context.js"],"sourcesContent":["// /src/context.js\r\nimport React, { createContext, useContext, useState } from 'react';\r\nimport { folderExists, createFolder, listDriveGames } from './driveAPI';\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const AppContextProvider = ({ children }) => {\r\n    const [token, setToken] = useState(null);\r\n    const [userInfo, setUserInfo] = useState(null);\r\n    const [gameID, setGameID] = useState(null);\r\n    const [appFolderID, setAppFolderID] = useState(null);\r\n    const [gameList, setGameList] = useState([]);\r\n\r\n    const loadGames = async () => {\r\n        if (!gameList || gameList.length === 0) {\r\n            if (!appFolderID) {\r\n                var folderID = await folderExists(\"Loop Games\", token?.access_token);\r\n                if (!folderID) {\r\n                    folderID = await createFolder(\"Loop Games\", 'root', token?.access_token);\r\n                    setAppFolderID(folderID);\r\n                } else {\r\n                    setAppFolderID(folderID);\r\n                }\r\n            }\r\n            const gameList = await listDriveGames(appFolderID, token);\r\n            setGameList(gameList);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AppContext.Provider value={{ token, setToken, userInfo, setUserInfo, gameID, setGameID, gameList, setGameList, loadGames, appFolderID }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,YAAY,EAAEC,YAAY,EAAEC,cAAc,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,UAAU,gBAAGR,aAAa,CAAC,CAAC;AAElC,OAAO,MAAMS,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMoB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI,CAACF,QAAQ,IAAIA,QAAQ,CAACG,MAAM,KAAK,CAAC,EAAE;MACpC,IAAI,CAACL,WAAW,EAAE;QACd,IAAIM,QAAQ,GAAG,MAAMrB,YAAY,CAAC,YAAY,EAAES,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEa,YAAY,CAAC;QACpE,IAAI,CAACD,QAAQ,EAAE;UACXA,QAAQ,GAAG,MAAMpB,YAAY,CAAC,YAAY,EAAE,MAAM,EAAEQ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEa,YAAY,CAAC;UACxEN,cAAc,CAACK,QAAQ,CAAC;QAC5B,CAAC,MAAM;UACHL,cAAc,CAACK,QAAQ,CAAC;QAC5B;MACJ;MACA,MAAMJ,QAAQ,GAAG,MAAMf,cAAc,CAACa,WAAW,EAAEN,KAAK,CAAC;MACzDS,WAAW,CAACD,QAAQ,CAAC;IACzB;EACJ,CAAC;EAED,oBACIb,OAAA,CAACC,UAAU,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,KAAK;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC,WAAW;MAAEC,MAAM;MAAEC,SAAS;MAAEG,QAAQ;MAAEC,WAAW;MAAEC,SAAS;MAAEJ;IAAY,CAAE;IAAAR,QAAA,EACpIA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE9B,CAAC;AAACpB,EAAA,CA5BWF,kBAAkB;AAAAuB,EAAA,GAAlBvB,kBAAkB;AA8B/B,OAAO,MAAMwB,aAAa,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMjC,UAAU,CAACO,UAAU,CAAC;AAAA;AAAC0B,GAAA,CAA7CD,aAAa;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}