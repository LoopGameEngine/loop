{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\app\\\\src\\\\pages\\\\Games.js\",\n  _s = $RefreshSig$();\n// src/pages/Games.js\nimport React, { useState, useEffect } from 'react';\nimport { folderExists, createFolder, listDriveGames, newGame, duplicateGame, deleteGame } from '../driveAPI';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport GameCard from '../components/GameCard'; // Ajusta la ruta según tu estructura de carpetas\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Games = ({\n  token\n}) => {\n  _s();\n  const [appFolderID, setAppFolderID] = useState([]);\n  const [gameList, setGameList] = useState([]);\n  useEffect(() => {\n    const initDrive = async () => {\n      try {\n        var folderID = await folderExists(\"Loop Games\");\n        if (!folderID) folderID = createFolder(\"Loop Games\", 'root', token.access_token);\n        setAppFolderID(folderID);\n        const gameList = await listDriveGames(folderID);\n        setGameList(gameList);\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n      }\n    };\n    initDrive();\n  }, [gameList]);\n  const handleNewGame = async () => {\n    try {\n      const createdGameID = await newGame(appFolderID, token.access_token);\n      const updatedgameList = await listDriveGames(appFolderID);\n      setGameList(updatedgameList);\n      console.log(updatedgameList);\n      console.log(\"New game created with ID:\", createdGameID);\n    } catch (error) {\n      console.error('Error creating new game:', error.message);\n    }\n  };\n  const handleDuplicateGame = async gameID => {\n    try {\n      console.log(\"duplicate \", gameID);\n      await duplicateGame(gameID);\n      console.log(\"end duplicate\");\n      const updatedgameList = await listDriveGames(appFolderID);\n      setGameList(updatedgameList);\n    } catch (error) {\n      console.error('Error duplicating game:', error.message);\n    }\n  };\n  const handleDeleteGame = async (gameID, gameName) => {\n    try {\n      console.log(\"delete \", gameID);\n      await deleteGame(gameID, gameName);\n      const updatedgameList = await listDriveGames(appFolderID);\n      setGameList(updatedgameList);\n      console.log(\"Game deleted with ID:\", gameID);\n    } catch (error) {\n      console.error('Error deleting game:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingLeft: '64px',\n      paddingTop: '64px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '48px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 22\n        }, this),\n        onClick: handleNewGame,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '16px'\n      },\n      children: gameList.map(game => /*#__PURE__*/_jsxDEV(GameCard, {\n        game: game,\n        handleDuplicateGame: handleDuplicateGame,\n        handleDeleteGame: handleDeleteGame\n      }, game.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Games, \"NQKPBL2PuILl18g/NiaYW510hOI=\");\n_c = Games;\nexport default Games;\nvar _c;\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"names":["React","useState","useEffect","folderExists","createFolder","listDriveGames","newGame","duplicateGame","deleteGame","Button","AddIcon","GameCard","jsxDEV","_jsxDEV","Games","token","_s","appFolderID","setAppFolderID","gameList","setGameList","initDrive","folderID","access_token","error","console","message","handleNewGame","createdGameID","updatedgameList","log","handleDuplicateGame","gameID","handleDeleteGame","gameName","style","paddingLeft","paddingTop","children","display","alignItems","marginBottom","variant","color","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","flexWrap","gap","map","game","id","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/app/src/pages/Games.js"],"sourcesContent":["// src/pages/Games.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { folderExists, createFolder, listDriveGames, newGame, duplicateGame, deleteGame } from '../driveAPI';\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport GameCard from '../components/GameCard'; // Ajusta la ruta según tu estructura de carpetas\r\n\r\nconst Games = ({ token }) => {\r\n  const [appFolderID, setAppFolderID] = useState([]);\r\n  const [gameList, setGameList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const initDrive = async () => {\r\n      try {\r\n        var folderID = await folderExists(\"Loop Games\");\r\n        if (!folderID)  folderID = createFolder(\"Loop Games\", 'root', token.access_token);\r\n        setAppFolderID(folderID);\r\n        const gameList = await listDriveGames(folderID);\r\n        setGameList(gameList);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error.message);\r\n      }\r\n    };\r\n\r\n    initDrive();\r\n  }, [gameList]);\r\n\r\n  const handleNewGame = async () => {\r\n    try {\r\n      const createdGameID = await newGame(appFolderID, token.access_token);\r\n      const updatedgameList = await listDriveGames(appFolderID);\r\n      setGameList(updatedgameList);\r\n      console.log(updatedgameList)\r\n      console.log(\"New game created with ID:\", createdGameID);\r\n    } catch (error) {\r\n      console.error('Error creating new game:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleDuplicateGame = async (gameID) => {\r\n    try {\r\n      console.log(\"duplicate \", gameID);\r\n      await duplicateGame(gameID);\r\n      console.log(\"end duplicate\");\r\n      const updatedgameList = await listDriveGames(appFolderID);\r\n      setGameList(updatedgameList);\r\n\r\n    } catch (error) {\r\n      console.error('Error duplicating game:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteGame = async (gameID, gameName) => {\r\n    try {\r\n      console.log(\"delete \", gameID);\r\n      await deleteGame(gameID, gameName);\r\n      const updatedgameList = await listDriveGames(appFolderID);\r\n      setGameList(updatedgameList);\r\n      console.log(\"Game deleted with ID:\", gameID);\r\n    } catch (error) {\r\n      console.error('Error deleting game:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ paddingLeft: '64px', paddingTop: '64px' }}>\r\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '48px' }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleNewGame}\r\n        >\r\n          New Game\r\n        </Button>\r\n      </div>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap', gap: '16px' }}>\r\n        {gameList.map((game) => (\r\n          <GameCard key={game.id} game={game}\r\n            handleDuplicateGame={handleDuplicateGame}\r\n            handleDeleteGame={handleDeleteGame}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Games;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}